// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: kaspawalletd.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

namespace Miningcore.Blockchain.Kaspa.KaspaWalletd {

  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;

  /// <summary>Holder for reflection information generated from kaspawalletd.proto</summary>
  public static partial class KaspawalletdReflection {

    #region Descriptor
    /// <summary>File descriptor for kaspawalletd.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KaspawalletdReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJrYXNwYXdhbGxldGQucHJvdG8SDEthc3BhV2FsbGV0ZCITChFHZXRCYWxh",
            "bmNlUmVxdWVzdCJwChJHZXRCYWxhbmNlUmVzcG9uc2USEQoJYXZhaWxhYmxl",
            "GAEgASgEEg8KB3BlbmRpbmcYAiABKAQSNgoPYWRkcmVzc0JhbGFuY2VzGAMg",
            "AygLMh0uS2FzcGFXYWxsZXRkLkFkZHJlc3NCYWxhbmNlcyJGCg9BZGRyZXNz",
            "QmFsYW5jZXMSDwoHYWRkcmVzcxgBIAEoCRIRCglhdmFpbGFibGUYAiABKAQS",
            "DwoHcGVuZGluZxgDIAEoBCKHAQohQ3JlYXRlVW5zaWduZWRUcmFuc2FjdGlv",
            "bnNSZXF1ZXN0Eg8KB2FkZHJlc3MYASABKAkSDgoGYW1vdW50GAIgASgEEgwK",
            "BGZyb20YAyADKAkSIAoYdXNlRXhpc3RpbmdDaGFuZ2VBZGRyZXNzGAQgASgI",
            "EhEKCWlzU2VuZEFsbBgFIAEoCCJCCiJDcmVhdGVVbnNpZ25lZFRyYW5zYWN0",
            "aW9uc1Jlc3BvbnNlEhwKFHVuc2lnbmVkVHJhbnNhY3Rpb25zGAEgAygMIhYK",
            "FFNob3dBZGRyZXNzZXNSZXF1ZXN0IigKFVNob3dBZGRyZXNzZXNSZXNwb25z",
            "ZRIPCgdhZGRyZXNzGAEgAygJIhMKEU5ld0FkZHJlc3NSZXF1ZXN0IiUKEk5l",
            "d0FkZHJlc3NSZXNwb25zZRIPCgdhZGRyZXNzGAEgASgJIjoKEEJyb2FkY2Fz",
            "dFJlcXVlc3QSEAoIaXNEb21haW4YASABKAgSFAoMdHJhbnNhY3Rpb25zGAIg",
            "AygMIiIKEUJyb2FkY2FzdFJlc3BvbnNlEg0KBXR4SURzGAEgAygJIhEKD1No",
            "dXRkb3duUmVxdWVzdCISChBTaHV0ZG93blJlc3BvbnNlIjAKCE91dHBvaW50",
            "EhUKDXRyYW5zYWN0aW9uSWQYASABKAkSDQoFaW5kZXgYAiABKA0ifgoVVXR4",
            "b3NCeUFkZHJlc3Nlc0VudHJ5Eg8KB2FkZHJlc3MYASABKAkSKAoIb3V0cG9p",
            "bnQYAiABKAsyFi5LYXNwYVdhbGxldGQuT3V0cG9pbnQSKgoJdXR4b0VudHJ5",
            "GAMgASgLMhcuS2FzcGFXYWxsZXRkLlV0eG9FbnRyeSI7Cg9TY3JpcHRQdWJs",
            "aWNLZXkSDwoHdmVyc2lvbhgBIAEoDRIXCg9zY3JpcHRQdWJsaWNLZXkYAiAB",
            "KAkifgoJVXR4b0VudHJ5Eg4KBmFtb3VudBgBIAEoBBI2Cg9zY3JpcHRQdWJs",
            "aWNLZXkYAiABKAsyHS5LYXNwYVdhbGxldGQuU2NyaXB0UHVibGljS2V5EhUK",
            "DWJsb2NrRGFhU2NvcmUYAyABKAQSEgoKaXNDb2luYmFzZRgEIAEoCCIzCiBH",
            "ZXRFeHRlcm5hbFNwZW5kYWJsZVVUWE9zUmVxdWVzdBIPCgdhZGRyZXNzGAEg",
            "ASgJIlkKIUdldEV4dGVybmFsU3BlbmRhYmxlVVRYT3NSZXNwb25zZRI0CgdF",
            "bnRyaWVzGAEgAygLMiMuS2FzcGFXYWxsZXRkLlV0eG9zQnlBZGRyZXNzZXNF",
            "bnRyeSKFAQoLU2VuZFJlcXVlc3QSEQoJdG9BZGRyZXNzGAEgASgJEg4KBmFt",
            "b3VudBgCIAEoBBIQCghwYXNzd29yZBgDIAEoCRIMCgRmcm9tGAQgAygJEiAK",
            "GHVzZUV4aXN0aW5nQ2hhbmdlQWRkcmVzcxgFIAEoCBIRCglpc1NlbmRBbGwY",
            "BiABKAgiOQoMU2VuZFJlc3BvbnNlEg0KBXR4SURzGAEgAygJEhoKEnNpZ25l",
            "ZFRyYW5zYWN0aW9ucxgCIAMoDCI9CgtTaWduUmVxdWVzdBIcChR1bnNpZ25l",
            "ZFRyYW5zYWN0aW9ucxgBIAMoDBIQCghwYXNzd29yZBgCIAEoCSIqCgxTaWdu",
            "UmVzcG9uc2USGgoSc2lnbmVkVHJhbnNhY3Rpb25zGAEgAygMMrMGCgxLYXNw",
            "YVdhbGxldGQSUQoKR2V0QmFsYW5jZRIfLkthc3BhV2FsbGV0ZC5HZXRCYWxh",
            "bmNlUmVxdWVzdBogLkthc3BhV2FsbGV0ZC5HZXRCYWxhbmNlUmVzcG9uc2Ui",
            "ABJ+ChlHZXRFeHRlcm5hbFNwZW5kYWJsZVVUWE9zEi4uS2FzcGFXYWxsZXRk",
            "LkdldEV4dGVybmFsU3BlbmRhYmxlVVRYT3NSZXF1ZXN0Gi8uS2FzcGFXYWxs",
            "ZXRkLkdldEV4dGVybmFsU3BlbmRhYmxlVVRYT3NSZXNwb25zZSIAEoEBChpD",
            "cmVhdGVVbnNpZ25lZFRyYW5zYWN0aW9ucxIvLkthc3BhV2FsbGV0ZC5DcmVh",
            "dGVVbnNpZ25lZFRyYW5zYWN0aW9uc1JlcXVlc3QaMC5LYXNwYVdhbGxldGQu",
            "Q3JlYXRlVW5zaWduZWRUcmFuc2FjdGlvbnNSZXNwb25zZSIAEloKDVNob3dB",
            "ZGRyZXNzZXMSIi5LYXNwYVdhbGxldGQuU2hvd0FkZHJlc3Nlc1JlcXVlc3Qa",
            "Iy5LYXNwYVdhbGxldGQuU2hvd0FkZHJlc3Nlc1Jlc3BvbnNlIgASUQoKTmV3",
            "QWRkcmVzcxIfLkthc3BhV2FsbGV0ZC5OZXdBZGRyZXNzUmVxdWVzdBogLkth",
            "c3BhV2FsbGV0ZC5OZXdBZGRyZXNzUmVzcG9uc2UiABJLCghTaHV0ZG93bhId",
            "Lkthc3BhV2FsbGV0ZC5TaHV0ZG93blJlcXVlc3QaHi5LYXNwYVdhbGxldGQu",
            "U2h1dGRvd25SZXNwb25zZSIAEk4KCUJyb2FkY2FzdBIeLkthc3BhV2FsbGV0",
            "ZC5Ccm9hZGNhc3RSZXF1ZXN0Gh8uS2FzcGFXYWxsZXRkLkJyb2FkY2FzdFJl",
            "c3BvbnNlIgASPwoEU2VuZBIZLkthc3BhV2FsbGV0ZC5TZW5kUmVxdWVzdBoa",
            "Lkthc3BhV2FsbGV0ZC5TZW5kUmVzcG9uc2UiABI/CgRTaWduEhkuS2FzcGFX",
            "YWxsZXRkLlNpZ25SZXF1ZXN0GhouS2FzcGFXYWxsZXRkLlNpZ25SZXNwb25z",
            "ZSIAQiuqAihNaW5pbmdjb3JlLkJsb2NrY2hhaW4uS2FzcGEuS2FzcGFXYWxs",
            "ZXRkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetBalanceRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetBalanceRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetBalanceResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetBalanceResponse.Parser, new[]{ "Available", "Pending", "AddressBalances" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances.Parser, new[]{ "Address", "Available", "Pending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.CreateUnsignedTransactionsRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.CreateUnsignedTransactionsRequest.Parser, new[]{ "Address", "Amount", "From", "UseExistingChangeAddress", "IsSendAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.CreateUnsignedTransactionsResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.CreateUnsignedTransactionsResponse.Parser, new[]{ "UnsignedTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShowAddressesRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShowAddressesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShowAddressesResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShowAddressesResponse.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.NewAddressRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.NewAddressRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.NewAddressResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.NewAddressResponse.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.BroadcastRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.BroadcastRequest.Parser, new[]{ "IsDomain", "Transactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.BroadcastResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.BroadcastResponse.Parser, new[]{ "TxIDs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShutdownRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShutdownRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShutdownResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ShutdownResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint.Parser, new[]{ "TransactionId", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry.Parser, new[]{ "Address", "Outpoint", "UtxoEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey.Parser, new[]{ "Version", "ScriptPublicKey_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry.Parser, new[]{ "Amount", "ScriptPublicKey", "BlockDaaScore", "IsCoinbase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetExternalSpendableUTXOsRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetExternalSpendableUTXOsRequest.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetExternalSpendableUTXOsResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.GetExternalSpendableUTXOsResponse.Parser, new[]{ "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SendRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SendRequest.Parser, new[]{ "ToAddress", "Amount", "Password", "From", "UseExistingChangeAddress", "IsSendAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SendResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SendResponse.Parser, new[]{ "TxIDs", "SignedTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SignRequest), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SignRequest.Parser, new[]{ "UnsignedTransactions", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SignResponse), global::Miningcore.Blockchain.Kaspa.KaspaWalletd.SignResponse.Parser, new[]{ "SignedTransactions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetBalanceRequest : pb::IMessage<GetBalanceRequest> {
    private static readonly pb::MessageParser<GetBalanceRequest> _parser = new pb::MessageParser<GetBalanceRequest>(() => new GetBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest(GetBalanceRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceRequest Clone() {
      return new GetBalanceRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetBalanceResponse : pb::IMessage<GetBalanceResponse> {
    private static readonly pb::MessageParser<GetBalanceResponse> _parser = new pb::MessageParser<GetBalanceResponse>(() => new GetBalanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceResponse(GetBalanceResponse other) : this() {
      available_ = other.available_;
      pending_ = other.pending_;
      addressBalances_ = other.addressBalances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceResponse Clone() {
      return new GetBalanceResponse(this);
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 1;
    private ulong available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int PendingFieldNumber = 2;
    private ulong pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Pending {
      get { return pending_; }
      set {
        pending_ = value;
      }
    }

    /// <summary>Field number for the "addressBalances" field.</summary>
    public const int AddressBalancesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances> _repeated_addressBalances_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances> addressBalances_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.AddressBalances> AddressBalances {
      get { return addressBalances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Available != other.Available) return false;
      if (Pending != other.Pending) return false;
      if(!addressBalances_.Equals(other.addressBalances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Available != 0UL) hash ^= Available.GetHashCode();
      if (Pending != 0UL) hash ^= Pending.GetHashCode();
      hash ^= addressBalances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Available != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Available);
      }
      if (Pending != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Pending);
      }
      addressBalances_.WriteTo(output, _repeated_addressBalances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Available != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Available);
      }
      if (Pending != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Pending);
      }
      size += addressBalances_.CalculateSize(_repeated_addressBalances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Available != 0UL) {
        Available = other.Available;
      }
      if (other.Pending != 0UL) {
        Pending = other.Pending;
      }
      addressBalances_.Add(other.addressBalances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Available = input.ReadUInt64();
            break;
          }
          case 16: {
            Pending = input.ReadUInt64();
            break;
          }
          case 26: {
            addressBalances_.AddEntriesFrom(input, _repeated_addressBalances_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressBalances : pb::IMessage<AddressBalances> {
    private static readonly pb::MessageParser<AddressBalances> _parser = new pb::MessageParser<AddressBalances>(() => new AddressBalances());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressBalances> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressBalances() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressBalances(AddressBalances other) : this() {
      address_ = other.address_;
      available_ = other.available_;
      pending_ = other.pending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressBalances Clone() {
      return new AddressBalances(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 2;
    private ulong available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int PendingFieldNumber = 3;
    private ulong pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Pending {
      get { return pending_; }
      set {
        pending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressBalances);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressBalances other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (Available != other.Available) return false;
      if (Pending != other.Pending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Available != 0UL) hash ^= Available.GetHashCode();
      if (Pending != 0UL) hash ^= Pending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (Available != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Available);
      }
      if (Pending != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Pending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Available != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Available);
      }
      if (Pending != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Pending);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressBalances other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Available != 0UL) {
        Available = other.Available;
      }
      if (other.Pending != 0UL) {
        Pending = other.Pending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            Available = input.ReadUInt64();
            break;
          }
          case 24: {
            Pending = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateUnsignedTransactionsRequest : pb::IMessage<CreateUnsignedTransactionsRequest> {
    private static readonly pb::MessageParser<CreateUnsignedTransactionsRequest> _parser = new pb::MessageParser<CreateUnsignedTransactionsRequest>(() => new CreateUnsignedTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUnsignedTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsRequest(CreateUnsignedTransactionsRequest other) : this() {
      address_ = other.address_;
      amount_ = other.amount_;
      from_ = other.from_.Clone();
      useExistingChangeAddress_ = other.useExistingChangeAddress_;
      isSendAll_ = other.isSendAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsRequest Clone() {
      return new CreateUnsignedTransactionsRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_from_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> from_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> From {
      get { return from_; }
    }

    /// <summary>Field number for the "useExistingChangeAddress" field.</summary>
    public const int UseExistingChangeAddressFieldNumber = 4;
    private bool useExistingChangeAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseExistingChangeAddress {
      get { return useExistingChangeAddress_; }
      set {
        useExistingChangeAddress_ = value;
      }
    }

    /// <summary>Field number for the "isSendAll" field.</summary>
    public const int IsSendAllFieldNumber = 5;
    private bool isSendAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendAll {
      get { return isSendAll_; }
      set {
        isSendAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUnsignedTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUnsignedTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (Amount != other.Amount) return false;
      if(!from_.Equals(other.from_)) return false;
      if (UseExistingChangeAddress != other.UseExistingChangeAddress) return false;
      if (IsSendAll != other.IsSendAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      hash ^= from_.GetHashCode();
      if (UseExistingChangeAddress != false) hash ^= UseExistingChangeAddress.GetHashCode();
      if (IsSendAll != false) hash ^= IsSendAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount);
      }
      from_.WriteTo(output, _repeated_from_codec);
      if (UseExistingChangeAddress != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseExistingChangeAddress);
      }
      if (IsSendAll != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSendAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      size += from_.CalculateSize(_repeated_from_codec);
      if (UseExistingChangeAddress != false) {
        size += 1 + 1;
      }
      if (IsSendAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUnsignedTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      from_.Add(other.from_);
      if (other.UseExistingChangeAddress != false) {
        UseExistingChangeAddress = other.UseExistingChangeAddress;
      }
      if (other.IsSendAll != false) {
        IsSendAll = other.IsSendAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadUInt64();
            break;
          }
          case 26: {
            from_.AddEntriesFrom(input, _repeated_from_codec);
            break;
          }
          case 32: {
            UseExistingChangeAddress = input.ReadBool();
            break;
          }
          case 40: {
            IsSendAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateUnsignedTransactionsResponse : pb::IMessage<CreateUnsignedTransactionsResponse> {
    private static readonly pb::MessageParser<CreateUnsignedTransactionsResponse> _parser = new pb::MessageParser<CreateUnsignedTransactionsResponse>(() => new CreateUnsignedTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateUnsignedTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsResponse(CreateUnsignedTransactionsResponse other) : this() {
      unsignedTransactions_ = other.unsignedTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateUnsignedTransactionsResponse Clone() {
      return new CreateUnsignedTransactionsResponse(this);
    }

    /// <summary>Field number for the "unsignedTransactions" field.</summary>
    public const int UnsignedTransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_unsignedTransactions_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> unsignedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> UnsignedTransactions {
      get { return unsignedTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateUnsignedTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateUnsignedTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unsignedTransactions_.Equals(other.unsignedTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unsignedTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unsignedTransactions_.WriteTo(output, _repeated_unsignedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unsignedTransactions_.CalculateSize(_repeated_unsignedTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateUnsignedTransactionsResponse other) {
      if (other == null) {
        return;
      }
      unsignedTransactions_.Add(other.unsignedTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            unsignedTransactions_.AddEntriesFrom(input, _repeated_unsignedTransactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShowAddressesRequest : pb::IMessage<ShowAddressesRequest> {
    private static readonly pb::MessageParser<ShowAddressesRequest> _parser = new pb::MessageParser<ShowAddressesRequest>(() => new ShowAddressesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShowAddressesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesRequest(ShowAddressesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesRequest Clone() {
      return new ShowAddressesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShowAddressesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShowAddressesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShowAddressesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ShowAddressesResponse : pb::IMessage<ShowAddressesResponse> {
    private static readonly pb::MessageParser<ShowAddressesResponse> _parser = new pb::MessageParser<ShowAddressesResponse>(() => new ShowAddressesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShowAddressesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesResponse(ShowAddressesResponse other) : this() {
      address_ = other.address_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShowAddressesResponse Clone() {
      return new ShowAddressesResponse(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_address_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> address_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Address {
      get { return address_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShowAddressesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShowAddressesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!address_.Equals(other.address_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= address_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      address_.WriteTo(output, _repeated_address_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += address_.CalculateSize(_repeated_address_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShowAddressesResponse other) {
      if (other == null) {
        return;
      }
      address_.Add(other.address_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            address_.AddEntriesFrom(input, _repeated_address_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewAddressRequest : pb::IMessage<NewAddressRequest> {
    private static readonly pb::MessageParser<NewAddressRequest> _parser = new pb::MessageParser<NewAddressRequest>(() => new NewAddressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewAddressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressRequest(NewAddressRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressRequest Clone() {
      return new NewAddressRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewAddressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewAddressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewAddressRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NewAddressResponse : pb::IMessage<NewAddressResponse> {
    private static readonly pb::MessageParser<NewAddressResponse> _parser = new pb::MessageParser<NewAddressResponse>(() => new NewAddressResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewAddressResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressResponse(NewAddressResponse other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewAddressResponse Clone() {
      return new NewAddressResponse(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewAddressResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewAddressResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewAddressResponse other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BroadcastRequest : pb::IMessage<BroadcastRequest> {
    private static readonly pb::MessageParser<BroadcastRequest> _parser = new pb::MessageParser<BroadcastRequest>(() => new BroadcastRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastRequest(BroadcastRequest other) : this() {
      isDomain_ = other.isDomain_;
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastRequest Clone() {
      return new BroadcastRequest(this);
    }

    /// <summary>Field number for the "isDomain" field.</summary>
    public const int IsDomainFieldNumber = 1;
    private bool isDomain_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDomain {
      get { return isDomain_; }
      set {
        isDomain_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_transactions_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> transactions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsDomain != other.IsDomain) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsDomain != false) hash ^= IsDomain.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsDomain != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsDomain);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsDomain != false) {
        size += 1 + 1;
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastRequest other) {
      if (other == null) {
        return;
      }
      if (other.IsDomain != false) {
        IsDomain = other.IsDomain;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsDomain = input.ReadBool();
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BroadcastResponse : pb::IMessage<BroadcastResponse> {
    private static readonly pb::MessageParser<BroadcastResponse> _parser = new pb::MessageParser<BroadcastResponse>(() => new BroadcastResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BroadcastResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse(BroadcastResponse other) : this() {
      txIDs_ = other.txIDs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BroadcastResponse Clone() {
      return new BroadcastResponse(this);
    }

    /// <summary>Field number for the "txIDs" field.</summary>
    public const int TxIDsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_txIDs_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> txIDs_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TxIDs {
      get { return txIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BroadcastResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BroadcastResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txIDs_.Equals(other.txIDs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txIDs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txIDs_.WriteTo(output, _repeated_txIDs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txIDs_.CalculateSize(_repeated_txIDs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BroadcastResponse other) {
      if (other == null) {
        return;
      }
      txIDs_.Add(other.txIDs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txIDs_.AddEntriesFrom(input, _repeated_txIDs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShutdownRequest : pb::IMessage<ShutdownRequest> {
    private static readonly pb::MessageParser<ShutdownRequest> _parser = new pb::MessageParser<ShutdownRequest>(() => new ShutdownRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest(ShutdownRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest Clone() {
      return new ShutdownRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ShutdownResponse : pb::IMessage<ShutdownResponse> {
    private static readonly pb::MessageParser<ShutdownResponse> _parser = new pb::MessageParser<ShutdownResponse>(() => new ShutdownResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse(ShutdownResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse Clone() {
      return new ShutdownResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Outpoint : pb::IMessage<Outpoint> {
    private static readonly pb::MessageParser<Outpoint> _parser = new pb::MessageParser<Outpoint>(() => new Outpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Outpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint(Outpoint other) : this() {
      transactionId_ = other.transactionId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint Clone() {
      return new Outpoint(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Outpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Outpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Outpoint other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UtxosByAddressesEntry : pb::IMessage<UtxosByAddressesEntry> {
    private static readonly pb::MessageParser<UtxosByAddressesEntry> _parser = new pb::MessageParser<UtxosByAddressesEntry>(() => new UtxosByAddressesEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UtxosByAddressesEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry(UtxosByAddressesEntry other) : this() {
      address_ = other.address_;
      outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
      utxoEntry_ = other.utxoEntry_ != null ? other.utxoEntry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry Clone() {
      return new UtxosByAddressesEntry(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outpoint" field.</summary>
    public const int OutpointFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint outpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint Outpoint {
      get { return outpoint_; }
      set {
        outpoint_ = value;
      }
    }

    /// <summary>Field number for the "utxoEntry" field.</summary>
    public const int UtxoEntryFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry utxoEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry UtxoEntry {
      get { return utxoEntry_; }
      set {
        utxoEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UtxosByAddressesEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UtxosByAddressesEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (!object.Equals(Outpoint, other.Outpoint)) return false;
      if (!object.Equals(UtxoEntry, other.UtxoEntry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
      if (utxoEntry_ != null) hash ^= UtxoEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (outpoint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Outpoint);
      }
      if (utxoEntry_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UtxoEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (outpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
      }
      if (utxoEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtxoEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UtxosByAddressesEntry other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.outpoint_ != null) {
        if (outpoint_ == null) {
          Outpoint = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint();
        }
        Outpoint.MergeFrom(other.Outpoint);
      }
      if (other.utxoEntry_ != null) {
        if (utxoEntry_ == null) {
          UtxoEntry = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry();
        }
        UtxoEntry.MergeFrom(other.UtxoEntry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (outpoint_ == null) {
              Outpoint = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 26: {
            if (utxoEntry_ == null) {
              UtxoEntry = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxoEntry();
            }
            input.ReadMessage(UtxoEntry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScriptPublicKey : pb::IMessage<ScriptPublicKey> {
    private static readonly pb::MessageParser<ScriptPublicKey> _parser = new pb::MessageParser<ScriptPublicKey>(() => new ScriptPublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScriptPublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey(ScriptPublicKey other) : this() {
      version_ = other.version_;
      scriptPublicKey_ = other.scriptPublicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey Clone() {
      return new ScriptPublicKey(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKey_FieldNumber = 2;
    private string scriptPublicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptPublicKey_ {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScriptPublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScriptPublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (ScriptPublicKey_ != other.ScriptPublicKey_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ScriptPublicKey_.Length != 0) hash ^= ScriptPublicKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (ScriptPublicKey_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptPublicKey_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (ScriptPublicKey_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptPublicKey_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScriptPublicKey other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ScriptPublicKey_.Length != 0) {
        ScriptPublicKey_ = other.ScriptPublicKey_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptPublicKey_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UtxoEntry : pb::IMessage<UtxoEntry> {
    private static readonly pb::MessageParser<UtxoEntry> _parser = new pb::MessageParser<UtxoEntry>(() => new UtxoEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UtxoEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry(UtxoEntry other) : this() {
      amount_ = other.amount_;
      scriptPublicKey_ = other.scriptPublicKey_ != null ? other.scriptPublicKey_.Clone() : null;
      blockDaaScore_ = other.blockDaaScore_;
      isCoinbase_ = other.isCoinbase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry Clone() {
      return new UtxoEntry(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey scriptPublicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = value;
      }
    }

    /// <summary>Field number for the "blockDaaScore" field.</summary>
    public const int BlockDaaScoreFieldNumber = 3;
    private ulong blockDaaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockDaaScore {
      get { return blockDaaScore_; }
      set {
        blockDaaScore_ = value;
      }
    }

    /// <summary>Field number for the "isCoinbase" field.</summary>
    public const int IsCoinbaseFieldNumber = 4;
    private bool isCoinbase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCoinbase {
      get { return isCoinbase_; }
      set {
        isCoinbase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UtxoEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UtxoEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (!object.Equals(ScriptPublicKey, other.ScriptPublicKey)) return false;
      if (BlockDaaScore != other.BlockDaaScore) return false;
      if (IsCoinbase != other.IsCoinbase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (scriptPublicKey_ != null) hash ^= ScriptPublicKey.GetHashCode();
      if (BlockDaaScore != 0UL) hash ^= BlockDaaScore.GetHashCode();
      if (IsCoinbase != false) hash ^= IsCoinbase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Amount);
      }
      if (scriptPublicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (scriptPublicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UtxoEntry other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      if (other.scriptPublicKey_ != null) {
        if (scriptPublicKey_ == null) {
          ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey();
        }
        ScriptPublicKey.MergeFrom(other.ScriptPublicKey);
      }
      if (other.BlockDaaScore != 0UL) {
        BlockDaaScore = other.BlockDaaScore;
      }
      if (other.IsCoinbase != false) {
        IsCoinbase = other.IsCoinbase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadUInt64();
            break;
          }
          case 18: {
            if (scriptPublicKey_ == null) {
              ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.KaspaWalletd.ScriptPublicKey();
            }
            input.ReadMessage(ScriptPublicKey);
            break;
          }
          case 24: {
            BlockDaaScore = input.ReadUInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetExternalSpendableUTXOsRequest : pb::IMessage<GetExternalSpendableUTXOsRequest> {
    private static readonly pb::MessageParser<GetExternalSpendableUTXOsRequest> _parser = new pb::MessageParser<GetExternalSpendableUTXOsRequest>(() => new GetExternalSpendableUTXOsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExternalSpendableUTXOsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsRequest(GetExternalSpendableUTXOsRequest other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsRequest Clone() {
      return new GetExternalSpendableUTXOsRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExternalSpendableUTXOsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExternalSpendableUTXOsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExternalSpendableUTXOsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetExternalSpendableUTXOsResponse : pb::IMessage<GetExternalSpendableUTXOsResponse> {
    private static readonly pb::MessageParser<GetExternalSpendableUTXOsResponse> _parser = new pb::MessageParser<GetExternalSpendableUTXOsResponse>(() => new GetExternalSpendableUTXOsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetExternalSpendableUTXOsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsResponse(GetExternalSpendableUTXOsResponse other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetExternalSpendableUTXOsResponse Clone() {
      return new GetExternalSpendableUTXOsResponse(this);
    }

    /// <summary>Field number for the "Entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry> entries_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.KaspaWalletd.UtxosByAddressesEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetExternalSpendableUTXOsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetExternalSpendableUTXOsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetExternalSpendableUTXOsResponse other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Since SendRequest contains a password - this command should only be used on a trusted or secure connection
  /// </summary>
  public sealed partial class SendRequest : pb::IMessage<SendRequest> {
    private static readonly pb::MessageParser<SendRequest> _parser = new pb::MessageParser<SendRequest>(() => new SendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendRequest(SendRequest other) : this() {
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      password_ = other.password_;
      from_ = other.from_.Clone();
      useExistingChangeAddress_ = other.useExistingChangeAddress_;
      isSendAll_ = other.isSendAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendRequest Clone() {
      return new SendRequest(this);
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 1;
    private string toAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_from_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> from_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> From {
      get { return from_; }
    }

    /// <summary>Field number for the "useExistingChangeAddress" field.</summary>
    public const int UseExistingChangeAddressFieldNumber = 5;
    private bool useExistingChangeAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseExistingChangeAddress {
      get { return useExistingChangeAddress_; }
      set {
        useExistingChangeAddress_ = value;
      }
    }

    /// <summary>Field number for the "isSendAll" field.</summary>
    public const int IsSendAllFieldNumber = 6;
    private bool isSendAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSendAll {
      get { return isSendAll_; }
      set {
        isSendAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      if (Password != other.Password) return false;
      if(!from_.Equals(other.from_)) return false;
      if (UseExistingChangeAddress != other.UseExistingChangeAddress) return false;
      if (IsSendAll != other.IsSendAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      hash ^= from_.GetHashCode();
      if (UseExistingChangeAddress != false) hash ^= UseExistingChangeAddress.GetHashCode();
      if (IsSendAll != false) hash ^= IsSendAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ToAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ToAddress);
      }
      if (Amount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Amount);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      from_.WriteTo(output, _repeated_from_codec);
      if (UseExistingChangeAddress != false) {
        output.WriteRawTag(40);
        output.WriteBool(UseExistingChangeAddress);
      }
      if (IsSendAll != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsSendAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToAddress);
      }
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      size += from_.CalculateSize(_repeated_from_codec);
      if (UseExistingChangeAddress != false) {
        size += 1 + 1;
      }
      if (IsSendAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendRequest other) {
      if (other == null) {
        return;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      from_.Add(other.from_);
      if (other.UseExistingChangeAddress != false) {
        UseExistingChangeAddress = other.UseExistingChangeAddress;
      }
      if (other.IsSendAll != false) {
        IsSendAll = other.IsSendAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ToAddress = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadUInt64();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            from_.AddEntriesFrom(input, _repeated_from_codec);
            break;
          }
          case 40: {
            UseExistingChangeAddress = input.ReadBool();
            break;
          }
          case 48: {
            IsSendAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendResponse : pb::IMessage<SendResponse> {
    private static readonly pb::MessageParser<SendResponse> _parser = new pb::MessageParser<SendResponse>(() => new SendResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendResponse(SendResponse other) : this() {
      txIDs_ = other.txIDs_.Clone();
      signedTransactions_ = other.signedTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendResponse Clone() {
      return new SendResponse(this);
    }

    /// <summary>Field number for the "txIDs" field.</summary>
    public const int TxIDsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_txIDs_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> txIDs_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TxIDs {
      get { return txIDs_; }
    }

    /// <summary>Field number for the "signedTransactions" field.</summary>
    public const int SignedTransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_signedTransactions_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> signedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> SignedTransactions {
      get { return signedTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txIDs_.Equals(other.txIDs_)) return false;
      if(!signedTransactions_.Equals(other.signedTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txIDs_.GetHashCode();
      hash ^= signedTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txIDs_.WriteTo(output, _repeated_txIDs_codec);
      signedTransactions_.WriteTo(output, _repeated_signedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txIDs_.CalculateSize(_repeated_txIDs_codec);
      size += signedTransactions_.CalculateSize(_repeated_signedTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendResponse other) {
      if (other == null) {
        return;
      }
      txIDs_.Add(other.txIDs_);
      signedTransactions_.Add(other.signedTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txIDs_.AddEntriesFrom(input, _repeated_txIDs_codec);
            break;
          }
          case 18: {
            signedTransactions_.AddEntriesFrom(input, _repeated_signedTransactions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Since SignRequest contains a password - this command should only be used on a trusted or secure connection
  /// </summary>
  public sealed partial class SignRequest : pb::IMessage<SignRequest> {
    private static readonly pb::MessageParser<SignRequest> _parser = new pb::MessageParser<SignRequest>(() => new SignRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignRequest(SignRequest other) : this() {
      unsignedTransactions_ = other.unsignedTransactions_.Clone();
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignRequest Clone() {
      return new SignRequest(this);
    }

    /// <summary>Field number for the "unsignedTransactions" field.</summary>
    public const int UnsignedTransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_unsignedTransactions_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> unsignedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> UnsignedTransactions {
      get { return unsignedTransactions_; }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unsignedTransactions_.Equals(other.unsignedTransactions_)) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unsignedTransactions_.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      unsignedTransactions_.WriteTo(output, _repeated_unsignedTransactions_codec);
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unsignedTransactions_.CalculateSize(_repeated_unsignedTransactions_codec);
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignRequest other) {
      if (other == null) {
        return;
      }
      unsignedTransactions_.Add(other.unsignedTransactions_);
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            unsignedTransactions_.AddEntriesFrom(input, _repeated_unsignedTransactions_codec);
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignResponse : pb::IMessage<SignResponse> {
    private static readonly pb::MessageParser<SignResponse> _parser = new pb::MessageParser<SignResponse>(() => new SignResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.KaspaWalletd.KaspawalletdReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignResponse(SignResponse other) : this() {
      signedTransactions_ = other.signedTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignResponse Clone() {
      return new SignResponse(this);
    }

    /// <summary>Field number for the "signedTransactions" field.</summary>
    public const int SignedTransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_signedTransactions_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> signedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> SignedTransactions {
      get { return signedTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!signedTransactions_.Equals(other.signedTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= signedTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      signedTransactions_.WriteTo(output, _repeated_signedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += signedTransactions_.CalculateSize(_repeated_signedTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignResponse other) {
      if (other == null) {
        return;
      }
      signedTransactions_.Add(other.signedTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            signedTransactions_.AddEntriesFrom(input, _repeated_signedTransactions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

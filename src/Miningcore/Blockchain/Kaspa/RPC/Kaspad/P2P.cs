// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: p2p.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

namespace Miningcore.Blockchain.Kaspa.Kaspad {

  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;

  /// <summary>Holder for reflection information generated from p2p.proto</summary>
  public static partial class P2PReflection {

    #region Descriptor
    /// <summary>File descriptor for p2p.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static P2PReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglwMnAucHJvdG8SCXByb3Rvd2lyZSJnChdSZXF1ZXN0QWRkcmVzc2VzTWVz",
            "c2FnZRIdChVpbmNsdWRlQWxsU3VibmV0d29ya3MYASABKAgSLQoMc3VibmV0",
            "d29ya0lkGAIgASgLMhcucHJvdG93aXJlLlN1Ym5ldHdvcmtJZCI+ChBBZGRy",
            "ZXNzZXNNZXNzYWdlEioKC2FkZHJlc3NMaXN0GAEgAygLMhUucHJvdG93aXJl",
            "Lk5ldEFkZHJlc3MiOQoKTmV0QWRkcmVzcxIRCgl0aW1lc3RhbXAYASABKAMS",
            "CgoCaXAYAyABKAwSDAoEcG9ydBgEIAEoDSIdCgxTdWJuZXR3b3JrSWQSDQoF",
            "Ynl0ZXMYASABKAwi4AEKElRyYW5zYWN0aW9uTWVzc2FnZRIPCgd2ZXJzaW9u",
            "GAEgASgNEisKBmlucHV0cxgCIAMoCzIbLnByb3Rvd2lyZS5UcmFuc2FjdGlv",
            "bklucHV0Ei0KB291dHB1dHMYAyADKAsyHC5wcm90b3dpcmUuVHJhbnNhY3Rp",
            "b25PdXRwdXQSEAoIbG9ja1RpbWUYBCABKAQSLQoMc3VibmV0d29ya0lkGAUg",
            "ASgLMhcucHJvdG93aXJlLlN1Ym5ldHdvcmtJZBILCgNnYXMYBiABKAQSDwoH",
            "cGF5bG9hZBgIIAEoDCKAAQoQVHJhbnNhY3Rpb25JbnB1dBItChBwcmV2aW91",
            "c091dHBvaW50GAEgASgLMhMucHJvdG93aXJlLk91dHBvaW50EhcKD3NpZ25h",
            "dHVyZVNjcmlwdBgCIAEoDBIQCghzZXF1ZW5jZRgDIAEoBBISCgpzaWdPcENv",
            "dW50GAQgASgNIkoKCE91dHBvaW50Ei8KDXRyYW5zYWN0aW9uSWQYASABKAsy",
            "GC5wcm90b3dpcmUuVHJhbnNhY3Rpb25JZBINCgVpbmRleBgCIAEoDSIeCg1U",
            "cmFuc2FjdGlvbklkEg0KBWJ5dGVzGAEgASgMIjIKD1NjcmlwdFB1YmxpY0tl",
            "eRIOCgZzY3JpcHQYASABKAwSDwoHdmVyc2lvbhgCIAEoDSJXChFUcmFuc2Fj",
            "dGlvbk91dHB1dBINCgV2YWx1ZRgBIAEoBBIzCg9zY3JpcHRQdWJsaWNLZXkY",
            "AiABKAsyGi5wcm90b3dpcmUuU2NyaXB0UHVibGljS2V5ImsKDEJsb2NrTWVz",
            "c2FnZRImCgZoZWFkZXIYASABKAsyFi5wcm90b3dpcmUuQmxvY2tIZWFkZXIS",
            "MwoMdHJhbnNhY3Rpb25zGAIgAygLMh0ucHJvdG93aXJlLlRyYW5zYWN0aW9u",
            "TWVzc2FnZSLcAgoLQmxvY2tIZWFkZXISDwoHdmVyc2lvbhgBIAEoDRItCgdw",
            "YXJlbnRzGAwgAygLMhwucHJvdG93aXJlLkJsb2NrTGV2ZWxQYXJlbnRzEicK",
            "Dmhhc2hNZXJrbGVSb290GAMgASgLMg8ucHJvdG93aXJlLkhhc2gSLQoUYWNj",
            "ZXB0ZWRJZE1lcmtsZVJvb3QYBCABKAsyDy5wcm90b3dpcmUuSGFzaBInCg51",
            "dHhvQ29tbWl0bWVudBgFIAEoCzIPLnByb3Rvd2lyZS5IYXNoEhEKCXRpbWVz",
            "dGFtcBgGIAEoAxIMCgRiaXRzGAcgASgNEg0KBW5vbmNlGAggASgEEhAKCGRh",
            "YVNjb3JlGAkgASgEEhAKCGJsdWVXb3JrGAogASgMEiUKDHBydW5pbmdQb2lu",
            "dBgOIAEoCzIPLnByb3Rvd2lyZS5IYXNoEhEKCWJsdWVTY29yZRgNIAEoBCI6",
            "ChFCbG9ja0xldmVsUGFyZW50cxIlCgxwYXJlbnRIYXNoZXMYASADKAsyDy5w",
            "cm90b3dpcmUuSGFzaCIVCgRIYXNoEg0KBWJ5dGVzGAEgASgMIk4KGlJlcXVl",
            "c3RCbG9ja0xvY2F0b3JNZXNzYWdlEiEKCGhpZ2hIYXNoGAEgASgLMg8ucHJv",
            "dG93aXJlLkhhc2gSDQoFbGltaXQYAiABKA0iNgoTQmxvY2tMb2NhdG9yTWVz",
            "c2FnZRIfCgZoYXNoZXMYASADKAsyDy5wcm90b3dpcmUuSGFzaCJcChVSZXF1",
            "ZXN0SGVhZGVyc01lc3NhZ2USIAoHbG93SGFzaBgBIAEoCzIPLnByb3Rvd2ly",
            "ZS5IYXNoEiEKCGhpZ2hIYXNoGAIgASgLMg8ucHJvdG93aXJlLkhhc2giGwoZ",
            "UmVxdWVzdE5leHRIZWFkZXJzTWVzc2FnZSIUChJEb25lSGVhZGVyc01lc3Nh",
            "Z2UiPAoZUmVxdWVzdFJlbGF5QmxvY2tzTWVzc2FnZRIfCgZoYXNoZXMYASAD",
            "KAsyDy5wcm90b3dpcmUuSGFzaCJDChpSZXF1ZXN0VHJhbnNhY3Rpb25zTWVz",
            "c2FnZRIlCgNpZHMYASADKAsyGC5wcm90b3dpcmUuVHJhbnNhY3Rpb25JZCJC",
            "ChpUcmFuc2FjdGlvbk5vdEZvdW5kTWVzc2FnZRIkCgJpZBgBIAEoCzIYLnBy",
            "b3Rvd2lyZS5UcmFuc2FjdGlvbklkIjUKFEludlJlbGF5QmxvY2tNZXNzYWdl",
            "Eh0KBGhhc2gYASABKAsyDy5wcm90b3dpcmUuSGFzaCI/ChZJbnZUcmFuc2Fj",
            "dGlvbnNNZXNzYWdlEiUKA2lkcxgBIAMoCzIYLnByb3Rvd2lyZS5UcmFuc2Fj",
            "dGlvbklkIhwKC1BpbmdNZXNzYWdlEg0KBW5vbmNlGAEgASgEIhwKC1BvbmdN",
            "ZXNzYWdlEg0KBW5vbmNlGAEgASgEIg8KDVZlcmFja01lc3NhZ2Ui7QEKDlZl",
            "cnNpb25NZXNzYWdlEhcKD3Byb3RvY29sVmVyc2lvbhgBIAEoDRIQCghzZXJ2",
            "aWNlcxgCIAEoBBIRCgl0aW1lc3RhbXAYAyABKAMSJgoHYWRkcmVzcxgEIAEo",
            "CzIVLnByb3Rvd2lyZS5OZXRBZGRyZXNzEgoKAmlkGAUgASgMEhEKCXVzZXJB",
            "Z2VudBgGIAEoCRIWCg5kaXNhYmxlUmVsYXlUeBgIIAEoCBItCgxzdWJuZXR3",
            "b3JrSWQYCSABKAsyFy5wcm90b3dpcmUuU3VibmV0d29ya0lkEg8KB25ldHdv",
            "cmsYCiABKAkiHwoNUmVqZWN0TWVzc2FnZRIOCgZyZWFzb24YASABKAkiTgoh",
            "UmVxdWVzdFBydW5pbmdQb2ludFVUWE9TZXRNZXNzYWdlEikKEHBydW5pbmdQ",
            "b2ludEhhc2gYASABKAsyDy5wcm90b3dpcmUuSGFzaCJpCh9QcnVuaW5nUG9p",
            "bnRVdHhvU2V0Q2h1bmtNZXNzYWdlEkYKGW91dHBvaW50QW5kVXR4b0VudHJ5",
            "UGFpcnMYASADKAsyIy5wcm90b3dpcmUuT3V0cG9pbnRBbmRVdHhvRW50cnlQ",
            "YWlyImoKGE91dHBvaW50QW5kVXR4b0VudHJ5UGFpchIlCghvdXRwb2ludBgB",
            "IAEoCzITLnByb3Rvd2lyZS5PdXRwb2ludBInCgl1dHhvRW50cnkYAiABKAsy",
            "FC5wcm90b3dpcmUuVXR4b0VudHJ5InsKCVV0eG9FbnRyeRIOCgZhbW91bnQY",
            "ASABKAQSMwoPc2NyaXB0UHVibGljS2V5GAIgASgLMhoucHJvdG93aXJlLlNj",
            "cmlwdFB1YmxpY0tleRIVCg1ibG9ja0RhYVNjb3JlGAMgASgEEhIKCmlzQ29p",
            "bmJhc2UYBCABKAgiLAoqUmVxdWVzdE5leHRQcnVuaW5nUG9pbnRVdHhvU2V0",
            "Q2h1bmtNZXNzYWdlIiYKJERvbmVQcnVuaW5nUG9pbnRVdHhvU2V0Q2h1bmtz",
            "TWVzc2FnZSI6ChdSZXF1ZXN0SUJEQmxvY2tzTWVzc2FnZRIfCgZoYXNoZXMY",
            "ASADKAsyDy5wcm90b3dpcmUuSGFzaCIfCh1VbmV4cGVjdGVkUHJ1bmluZ1Bv",
            "aW50TWVzc2FnZSJqChZJYmRCbG9ja0xvY2F0b3JNZXNzYWdlEiMKCnRhcmdl",
            "dEhhc2gYASABKAsyDy5wcm90b3dpcmUuSGFzaBIrChJibG9ja0xvY2F0b3JI",
            "YXNoZXMYAiADKAsyDy5wcm90b3dpcmUuSGFzaCJpCiJSZXF1ZXN0SUJEQ2hh",
            "aW5CbG9ja0xvY2F0b3JNZXNzYWdlEiAKB2xvd0hhc2gYASABKAsyDy5wcm90",
            "b3dpcmUuSGFzaBIhCghoaWdoSGFzaBgCIAEoCzIPLnByb3Rvd2lyZS5IYXNo",
            "IkoKG0liZENoYWluQmxvY2tMb2NhdG9yTWVzc2FnZRIrChJibG9ja0xvY2F0",
            "b3JIYXNoZXMYASADKAsyDy5wcm90b3dpcmUuSGFzaCJiChZSZXF1ZXN0QW50",
            "aWNvbmVNZXNzYWdlEiIKCWJsb2NrSGFzaBgBIAEoCzIPLnByb3Rvd2lyZS5I",
            "YXNoEiQKC2NvbnRleHRIYXNoGAIgASgLMg8ucHJvdG93aXJlLkhhc2giSQoh",
            "SWJkQmxvY2tMb2NhdG9ySGlnaGVzdEhhc2hNZXNzYWdlEiQKC2hpZ2hlc3RI",
            "YXNoGAEgASgLMg8ucHJvdG93aXJlLkhhc2giKwopSWJkQmxvY2tMb2NhdG9y",
            "SGlnaGVzdEhhc2hOb3RGb3VuZE1lc3NhZ2UiQwoTQmxvY2tIZWFkZXJzTWVz",
            "c2FnZRIsCgxibG9ja0hlYWRlcnMYASADKAsyFi5wcm90b3dpcmUuQmxvY2tI",
            "ZWFkZXIiKgooUmVxdWVzdFBydW5pbmdQb2ludEFuZEl0c0FudGljb25lTWVz",
            "c2FnZSI0CjJSZXF1ZXN0TmV4dFBydW5pbmdQb2ludEFuZEl0c0FudGljb25l",
            "QmxvY2tzTWVzc2FnZSK7AQobQmxvY2tXaXRoVHJ1c3RlZERhdGFNZXNzYWdl",
            "EiYKBWJsb2NrGAEgASgLMhcucHJvdG93aXJlLkJsb2NrTWVzc2FnZRIQCghk",
            "YWFTY29yZRgCIAEoBBImCglkYWFXaW5kb3cYAyADKAsyEy5wcm90b3dpcmUu",
            "RGFhQmxvY2sSOgoMZ2hvc3RkYWdEYXRhGAQgAygLMiQucHJvdG93aXJlLkJs",
            "b2NrR2hvc3RkYWdEYXRhSGFzaFBhaXIiYQoIRGFhQmxvY2sSJgoFYmxvY2sY",
            "AyABKAsyFy5wcm90b3dpcmUuQmxvY2tNZXNzYWdlEi0KDGdob3N0ZGFnRGF0",
            "YRgCIAEoCzIXLnByb3Rvd2lyZS5HaG9zdGRhZ0RhdGEiYwoKRGFhQmxvY2tW",
            "NBImCgZoZWFkZXIYASABKAsyFi5wcm90b3dpcmUuQmxvY2tIZWFkZXISLQoM",
            "Z2hvc3RkYWdEYXRhGAIgASgLMhcucHJvdG93aXJlLkdob3N0ZGFnRGF0YSJp",
            "ChlCbG9ja0dob3N0ZGFnRGF0YUhhc2hQYWlyEh0KBGhhc2gYASABKAsyDy5w",
            "cm90b3dpcmUuSGFzaBItCgxnaG9zdGRhZ0RhdGEYAiABKAsyFy5wcm90b3dp",
            "cmUuR2hvc3RkYWdEYXRhIuYBCgxHaG9zdGRhZ0RhdGESEQoJYmx1ZVNjb3Jl",
            "GAEgASgEEhAKCGJsdWVXb3JrGAIgASgMEicKDnNlbGVjdGVkUGFyZW50GAMg",
            "ASgLMg8ucHJvdG93aXJlLkhhc2gSJgoNbWVyZ2VTZXRCbHVlcxgEIAMoCzIP",
            "LnByb3Rvd2lyZS5IYXNoEiUKDG1lcmdlU2V0UmVkcxgFIAMoCzIPLnByb3Rv",
            "d2lyZS5IYXNoEjkKEmJsdWVzQW50aWNvbmVTaXplcxgGIAMoCzIdLnByb3Rv",
            "d2lyZS5CbHVlc0FudGljb25lU2l6ZXMiTQoSQmx1ZXNBbnRpY29uZVNpemVz",
            "EiEKCGJsdWVIYXNoGAEgASgLMg8ucHJvdG93aXJlLkhhc2gSFAoMYW50aWNv",
            "bmVTaXplGAIgASgNIiIKIERvbmVCbG9ja3NXaXRoVHJ1c3RlZERhdGFNZXNz",
            "YWdlIj8KFFBydW5pbmdQb2ludHNNZXNzYWdlEicKB2hlYWRlcnMYASADKAsy",
            "Fi5wcm90b3dpcmUuQmxvY2tIZWFkZXIiIQofUmVxdWVzdFBydW5pbmdQb2lu",
            "dFByb29mTWVzc2FnZSJUChhQcnVuaW5nUG9pbnRQcm9vZk1lc3NhZ2USOAoH",
            "aGVhZGVycxgBIAMoCzInLnByb3Rvd2lyZS5QcnVuaW5nUG9pbnRQcm9vZkhl",
            "YWRlckFycmF5IkcKHFBydW5pbmdQb2ludFByb29mSGVhZGVyQXJyYXkSJwoH",
            "aGVhZGVycxgBIAMoCzIWLnByb3Rvd2lyZS5CbG9ja0hlYWRlciIOCgxSZWFk",
            "eU1lc3NhZ2UifgodQmxvY2tXaXRoVHJ1c3RlZERhdGFWNE1lc3NhZ2USJgoF",
            "YmxvY2sYASABKAsyFy5wcm90b3dpcmUuQmxvY2tNZXNzYWdlEhgKEGRhYVdp",
            "bmRvd0luZGljZXMYAiADKAQSGwoTZ2hvc3RkYWdEYXRhSW5kaWNlcxgDIAMo",
            "BCJ6ChJUcnVzdGVkRGF0YU1lc3NhZ2USKAoJZGFhV2luZG93GAEgAygLMhUu",
            "cHJvdG93aXJlLkRhYUJsb2NrVjQSOgoMZ2hvc3RkYWdEYXRhGAIgAygLMiQu",
            "cHJvdG93aXJlLkJsb2NrR2hvc3RkYWdEYXRhSGFzaFBhaXJCJaoCIk1pbmlu",
            "Z2NvcmUuQmxvY2tjaGFpbi5LYXNwYS5LYXNwYWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage.Parser, new[]{ "IncludeAllSubnetworks", "SubnetworkId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage.Parser, new[]{ "AddressList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress), global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress.Parser, new[]{ "Timestamp", "Ip", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId), global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId.Parser, new[]{ "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage.Parser, new[]{ "Version", "Inputs", "Outputs", "LockTime", "SubnetworkId", "Gas", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput), global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput.Parser, new[]{ "PreviousOutpoint", "SignatureScript", "Sequence", "SigOpCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint), global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint.Parser, new[]{ "TransactionId", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId), global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId.Parser, new[]{ "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey), global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey.Parser, new[]{ "Script", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput), global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput.Parser, new[]{ "Value", "ScriptPublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage.Parser, new[]{ "Header", "Transactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader.Parser, new[]{ "Version", "Parents", "HashMerkleRoot", "AcceptedIdMerkleRoot", "UtxoCommitment", "Timestamp", "Bits", "Nonce", "DaaScore", "BlueWork", "PruningPoint", "BlueScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents.Parser, new[]{ "ParentHashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.Hash), global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser, new[]{ "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage.Parser, new[]{ "HighHash", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage.Parser, new[]{ "Hashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage.Parser, new[]{ "LowHash", "HighHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage.Parser, new[]{ "Hashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage.Parser, new[]{ "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage.Parser, new[]{ "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage.Parser, new[]{ "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage.Parser, new[]{ "Nonce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage.Parser, new[]{ "Nonce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage.Parser, new[]{ "ProtocolVersion", "Services", "Timestamp", "Address", "Id", "UserAgent", "DisableRelayTx", "SubnetworkId", "Network" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage.Parser, new[]{ "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage.Parser, new[]{ "PruningPointHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage.Parser, new[]{ "OutpointAndUtxoEntryPairs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair), global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair.Parser, new[]{ "Outpoint", "UtxoEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry), global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry.Parser, new[]{ "Amount", "ScriptPublicKey", "BlockDaaScore", "IsCoinbase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage.Parser, new[]{ "Hashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage.Parser, new[]{ "TargetHash", "BlockLocatorHashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage.Parser, new[]{ "LowHash", "HighHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage.Parser, new[]{ "BlockLocatorHashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage.Parser, new[]{ "BlockHash", "ContextHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage.Parser, new[]{ "HighestHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage.Parser, new[]{ "BlockHeaders" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage.Parser, new[]{ "Block", "DaaScore", "DaaWindow", "GhostdagData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock), global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock.Parser, new[]{ "Block", "GhostdagData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4), global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4.Parser, new[]{ "Header", "GhostdagData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair.Parser, new[]{ "Hash", "GhostdagData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData), global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData.Parser, new[]{ "BlueScore", "BlueWork", "SelectedParent", "MergeSetBlues", "MergeSetReds", "BluesAnticoneSizes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes), global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes.Parser, new[]{ "BlueHash", "AnticoneSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage.Parser, new[]{ "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage.Parser, new[]{ "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray), global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray.Parser, new[]{ "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message.Parser, new[]{ "Block", "DaaWindowIndices", "GhostdagDataIndices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage.Parser, new[]{ "DaaWindow", "GhostdagData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestAddressesMessage : pb::IMessage<RequestAddressesMessage> {
    private static readonly pb::MessageParser<RequestAddressesMessage> _parser = new pb::MessageParser<RequestAddressesMessage>(() => new RequestAddressesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestAddressesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddressesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddressesMessage(RequestAddressesMessage other) : this() {
      includeAllSubnetworks_ = other.includeAllSubnetworks_;
      subnetworkId_ = other.subnetworkId_ != null ? other.subnetworkId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAddressesMessage Clone() {
      return new RequestAddressesMessage(this);
    }

    /// <summary>Field number for the "includeAllSubnetworks" field.</summary>
    public const int IncludeAllSubnetworksFieldNumber = 1;
    private bool includeAllSubnetworks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeAllSubnetworks {
      get { return includeAllSubnetworks_; }
      set {
        includeAllSubnetworks_ = value;
      }
    }

    /// <summary>Field number for the "subnetworkId" field.</summary>
    public const int SubnetworkIdFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId subnetworkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId SubnetworkId {
      get { return subnetworkId_; }
      set {
        subnetworkId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestAddressesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestAddressesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncludeAllSubnetworks != other.IncludeAllSubnetworks) return false;
      if (!object.Equals(SubnetworkId, other.SubnetworkId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IncludeAllSubnetworks != false) hash ^= IncludeAllSubnetworks.GetHashCode();
      if (subnetworkId_ != null) hash ^= SubnetworkId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IncludeAllSubnetworks != false) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeAllSubnetworks);
      }
      if (subnetworkId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubnetworkId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IncludeAllSubnetworks != false) {
        size += 1 + 1;
      }
      if (subnetworkId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubnetworkId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestAddressesMessage other) {
      if (other == null) {
        return;
      }
      if (other.IncludeAllSubnetworks != false) {
        IncludeAllSubnetworks = other.IncludeAllSubnetworks;
      }
      if (other.subnetworkId_ != null) {
        if (subnetworkId_ == null) {
          SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
        }
        SubnetworkId.MergeFrom(other.SubnetworkId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IncludeAllSubnetworks = input.ReadBool();
            break;
          }
          case 18: {
            if (subnetworkId_ == null) {
              SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
            }
            input.ReadMessage(SubnetworkId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressesMessage : pb::IMessage<AddressesMessage> {
    private static readonly pb::MessageParser<AddressesMessage> _parser = new pb::MessageParser<AddressesMessage>(() => new AddressesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressesMessage(AddressesMessage other) : this() {
      addressList_ = other.addressList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressesMessage Clone() {
      return new AddressesMessage(this);
    }

    /// <summary>Field number for the "addressList" field.</summary>
    public const int AddressListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress> _repeated_addressList_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress> addressList_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress> AddressList {
      get { return addressList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addressList_.Equals(other.addressList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addressList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addressList_.WriteTo(output, _repeated_addressList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addressList_.CalculateSize(_repeated_addressList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressesMessage other) {
      if (other == null) {
        return;
      }
      addressList_.Add(other.addressList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addressList_.AddEntriesFrom(input, _repeated_addressList_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetAddress : pb::IMessage<NetAddress> {
    private static readonly pb::MessageParser<NetAddress> _parser = new pb::MessageParser<NetAddress>(() => new NetAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddress(NetAddress other) : this() {
      timestamp_ = other.timestamp_;
      ip_ = other.ip_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetAddress Clone() {
      return new NetAddress(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 3;
    private pb::ByteString ip_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Ip != other.Ip) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Timestamp);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ip);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ip);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetAddress other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            Ip = input.ReadBytes();
            break;
          }
          case 32: {
            Port = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubnetworkId : pb::IMessage<SubnetworkId> {
    private static readonly pb::MessageParser<SubnetworkId> _parser = new pb::MessageParser<SubnetworkId>(() => new SubnetworkId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubnetworkId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubnetworkId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubnetworkId(SubnetworkId other) : this() {
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubnetworkId Clone() {
      return new SubnetworkId(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubnetworkId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubnetworkId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubnetworkId other) {
      if (other == null) {
        return;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionMessage : pb::IMessage<TransactionMessage> {
    private static readonly pb::MessageParser<TransactionMessage> _parser = new pb::MessageParser<TransactionMessage>(() => new TransactionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage(TransactionMessage other) : this() {
      version_ = other.version_;
      inputs_ = other.inputs_.Clone();
      outputs_ = other.outputs_.Clone();
      lockTime_ = other.lockTime_;
      subnetworkId_ = other.subnetworkId_ != null ? other.subnetworkId_.Clone() : null;
      gas_ = other.gas_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionMessage Clone() {
      return new TransactionMessage(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput> inputs_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionInput> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput> outputs_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionOutput> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "lockTime" field.</summary>
    public const int LockTimeFieldNumber = 4;
    private ulong lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "subnetworkId" field.</summary>
    public const int SubnetworkIdFieldNumber = 5;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId subnetworkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId SubnetworkId {
      get { return subnetworkId_; }
      set {
        subnetworkId_ = value;
      }
    }

    /// <summary>Field number for the "gas" field.</summary>
    public const int GasFieldNumber = 6;
    private ulong gas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gas {
      get { return gas_; }
      set {
        gas_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 8;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if (LockTime != other.LockTime) return false;
      if (!object.Equals(SubnetworkId, other.SubnetworkId)) return false;
      if (Gas != other.Gas) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= inputs_.GetHashCode();
      hash ^= outputs_.GetHashCode();
      if (LockTime != 0UL) hash ^= LockTime.GetHashCode();
      if (subnetworkId_ != null) hash ^= SubnetworkId.GetHashCode();
      if (Gas != 0UL) hash ^= Gas.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (LockTime != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(LockTime);
      }
      if (subnetworkId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubnetworkId);
      }
      if (Gas != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Gas);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (LockTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LockTime);
      }
      if (subnetworkId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubnetworkId);
      }
      if (Gas != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gas);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionMessage other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      inputs_.Add(other.inputs_);
      outputs_.Add(other.outputs_);
      if (other.LockTime != 0UL) {
        LockTime = other.LockTime;
      }
      if (other.subnetworkId_ != null) {
        if (subnetworkId_ == null) {
          SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
        }
        SubnetworkId.MergeFrom(other.SubnetworkId);
      }
      if (other.Gas != 0UL) {
        Gas = other.Gas;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 26: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 32: {
            LockTime = input.ReadUInt64();
            break;
          }
          case 42: {
            if (subnetworkId_ == null) {
              SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
            }
            input.ReadMessage(SubnetworkId);
            break;
          }
          case 48: {
            Gas = input.ReadUInt64();
            break;
          }
          case 66: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionInput : pb::IMessage<TransactionInput> {
    private static readonly pb::MessageParser<TransactionInput> _parser = new pb::MessageParser<TransactionInput>(() => new TransactionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInput(TransactionInput other) : this() {
      previousOutpoint_ = other.previousOutpoint_ != null ? other.previousOutpoint_.Clone() : null;
      signatureScript_ = other.signatureScript_;
      sequence_ = other.sequence_;
      sigOpCount_ = other.sigOpCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInput Clone() {
      return new TransactionInput(this);
    }

    /// <summary>Field number for the "previousOutpoint" field.</summary>
    public const int PreviousOutpointFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint previousOutpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint PreviousOutpoint {
      get { return previousOutpoint_; }
      set {
        previousOutpoint_ = value;
      }
    }

    /// <summary>Field number for the "signatureScript" field.</summary>
    public const int SignatureScriptFieldNumber = 2;
    private pb::ByteString signatureScript_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SignatureScript {
      get { return signatureScript_; }
      set {
        signatureScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "sigOpCount" field.</summary>
    public const int SigOpCountFieldNumber = 4;
    private uint sigOpCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SigOpCount {
      get { return sigOpCount_; }
      set {
        sigOpCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PreviousOutpoint, other.PreviousOutpoint)) return false;
      if (SignatureScript != other.SignatureScript) return false;
      if (Sequence != other.Sequence) return false;
      if (SigOpCount != other.SigOpCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (previousOutpoint_ != null) hash ^= PreviousOutpoint.GetHashCode();
      if (SignatureScript.Length != 0) hash ^= SignatureScript.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (SigOpCount != 0) hash ^= SigOpCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (previousOutpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PreviousOutpoint);
      }
      if (SignatureScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SignatureScript);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (SigOpCount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SigOpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (previousOutpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousOutpoint);
      }
      if (SignatureScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignatureScript);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (SigOpCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SigOpCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionInput other) {
      if (other == null) {
        return;
      }
      if (other.previousOutpoint_ != null) {
        if (previousOutpoint_ == null) {
          PreviousOutpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint();
        }
        PreviousOutpoint.MergeFrom(other.PreviousOutpoint);
      }
      if (other.SignatureScript.Length != 0) {
        SignatureScript = other.SignatureScript;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.SigOpCount != 0) {
        SigOpCount = other.SigOpCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (previousOutpoint_ == null) {
              PreviousOutpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint();
            }
            input.ReadMessage(PreviousOutpoint);
            break;
          }
          case 18: {
            SignatureScript = input.ReadBytes();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 32: {
            SigOpCount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Outpoint : pb::IMessage<Outpoint> {
    private static readonly pb::MessageParser<Outpoint> _parser = new pb::MessageParser<Outpoint>(() => new Outpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Outpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint(Outpoint other) : this() {
      transactionId_ = other.transactionId_ != null ? other.transactionId_.Clone() : null;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Outpoint Clone() {
      return new Outpoint(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Outpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Outpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransactionId);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Outpoint other) {
      if (other == null) {
        return;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          TransactionId = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transactionId_ == null) {
              TransactionId = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId();
            }
            input.ReadMessage(TransactionId);
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionId : pb::IMessage<TransactionId> {
    private static readonly pb::MessageParser<TransactionId> _parser = new pb::MessageParser<TransactionId>(() => new TransactionId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId(TransactionId other) : this() {
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionId Clone() {
      return new TransactionId(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionId other) {
      if (other == null) {
        return;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScriptPublicKey : pb::IMessage<ScriptPublicKey> {
    private static readonly pb::MessageParser<ScriptPublicKey> _parser = new pb::MessageParser<ScriptPublicKey>(() => new ScriptPublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScriptPublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey(ScriptPublicKey other) : this() {
      script_ = other.script_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScriptPublicKey Clone() {
      return new ScriptPublicKey(this);
    }

    /// <summary>Field number for the "script" field.</summary>
    public const int ScriptFieldNumber = 1;
    private pb::ByteString script_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Script {
      get { return script_; }
      set {
        script_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScriptPublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScriptPublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Script != other.Script) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Script.Length != 0) hash ^= Script.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Script.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Script);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Script.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Script);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScriptPublicKey other) {
      if (other == null) {
        return;
      }
      if (other.Script.Length != 0) {
        Script = other.Script;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Script = input.ReadBytes();
            break;
          }
          case 16: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionOutput : pb::IMessage<TransactionOutput> {
    private static readonly pb::MessageParser<TransactionOutput> _parser = new pb::MessageParser<TransactionOutput>(() => new TransactionOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionOutput(TransactionOutput other) : this() {
      value_ = other.value_;
      scriptPublicKey_ = other.scriptPublicKey_ != null ? other.scriptPublicKey_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionOutput Clone() {
      return new TransactionOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private ulong value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey scriptPublicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (!object.Equals(ScriptPublicKey, other.ScriptPublicKey)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0UL) hash ^= Value.GetHashCode();
      if (scriptPublicKey_ != null) hash ^= ScriptPublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Value);
      }
      if (scriptPublicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScriptPublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
      }
      if (scriptPublicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScriptPublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionOutput other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0UL) {
        Value = other.Value;
      }
      if (other.scriptPublicKey_ != null) {
        if (scriptPublicKey_ == null) {
          ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey();
        }
        ScriptPublicKey.MergeFrom(other.ScriptPublicKey);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadUInt64();
            break;
          }
          case 18: {
            if (scriptPublicKey_ == null) {
              ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey();
            }
            input.ReadMessage(ScriptPublicKey);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockMessage : pb::IMessage<BlockMessage> {
    private static readonly pb::MessageParser<BlockMessage> _parser = new pb::MessageParser<BlockMessage>(() => new BlockMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage(BlockMessage other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockMessage Clone() {
      return new BlockMessage(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage> transactions_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockMessage other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockHeader : pb::IMessage<BlockHeader> {
    private static readonly pb::MessageParser<BlockHeader> _parser = new pb::MessageParser<BlockHeader>(() => new BlockHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader(BlockHeader other) : this() {
      version_ = other.version_;
      parents_ = other.parents_.Clone();
      hashMerkleRoot_ = other.hashMerkleRoot_ != null ? other.hashMerkleRoot_.Clone() : null;
      acceptedIdMerkleRoot_ = other.acceptedIdMerkleRoot_ != null ? other.acceptedIdMerkleRoot_.Clone() : null;
      utxoCommitment_ = other.utxoCommitment_ != null ? other.utxoCommitment_.Clone() : null;
      timestamp_ = other.timestamp_;
      bits_ = other.bits_;
      nonce_ = other.nonce_;
      daaScore_ = other.daaScore_;
      blueWork_ = other.blueWork_;
      pruningPoint_ = other.pruningPoint_ != null ? other.pruningPoint_.Clone() : null;
      blueScore_ = other.blueScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader Clone() {
      return new BlockHeader(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "parents" field.</summary>
    public const int ParentsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents> _repeated_parents_codec
        = pb::FieldCodec.ForMessage(98, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents> parents_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLevelParents> Parents {
      get { return parents_; }
    }

    /// <summary>Field number for the "hashMerkleRoot" field.</summary>
    public const int HashMerkleRootFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash hashMerkleRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash HashMerkleRoot {
      get { return hashMerkleRoot_; }
      set {
        hashMerkleRoot_ = value;
      }
    }

    /// <summary>Field number for the "acceptedIdMerkleRoot" field.</summary>
    public const int AcceptedIdMerkleRootFieldNumber = 4;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash acceptedIdMerkleRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash AcceptedIdMerkleRoot {
      get { return acceptedIdMerkleRoot_; }
      set {
        acceptedIdMerkleRoot_ = value;
      }
    }

    /// <summary>Field number for the "utxoCommitment" field.</summary>
    public const int UtxoCommitmentFieldNumber = 5;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash utxoCommitment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash UtxoCommitment {
      get { return utxoCommitment_; }
      set {
        utxoCommitment_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 7;
    private uint bits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bits {
      get { return bits_; }
      set {
        bits_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 8;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "daaScore" field.</summary>
    public const int DaaScoreFieldNumber = 9;
    private ulong daaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DaaScore {
      get { return daaScore_; }
      set {
        daaScore_ = value;
      }
    }

    /// <summary>Field number for the "blueWork" field.</summary>
    public const int BlueWorkFieldNumber = 10;
    private pb::ByteString blueWork_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlueWork {
      get { return blueWork_; }
      set {
        blueWork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pruningPoint" field.</summary>
    public const int PruningPointFieldNumber = 14;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash pruningPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash PruningPoint {
      get { return pruningPoint_; }
      set {
        pruningPoint_ = value;
      }
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 13;
    private ulong blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!parents_.Equals(other.parents_)) return false;
      if (!object.Equals(HashMerkleRoot, other.HashMerkleRoot)) return false;
      if (!object.Equals(AcceptedIdMerkleRoot, other.AcceptedIdMerkleRoot)) return false;
      if (!object.Equals(UtxoCommitment, other.UtxoCommitment)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Bits != other.Bits) return false;
      if (Nonce != other.Nonce) return false;
      if (DaaScore != other.DaaScore) return false;
      if (BlueWork != other.BlueWork) return false;
      if (!object.Equals(PruningPoint, other.PruningPoint)) return false;
      if (BlueScore != other.BlueScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= parents_.GetHashCode();
      if (hashMerkleRoot_ != null) hash ^= HashMerkleRoot.GetHashCode();
      if (acceptedIdMerkleRoot_ != null) hash ^= AcceptedIdMerkleRoot.GetHashCode();
      if (utxoCommitment_ != null) hash ^= UtxoCommitment.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Bits != 0) hash ^= Bits.GetHashCode();
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (DaaScore != 0UL) hash ^= DaaScore.GetHashCode();
      if (BlueWork.Length != 0) hash ^= BlueWork.GetHashCode();
      if (pruningPoint_ != null) hash ^= PruningPoint.GetHashCode();
      if (BlueScore != 0UL) hash ^= BlueScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (hashMerkleRoot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HashMerkleRoot);
      }
      if (acceptedIdMerkleRoot_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AcceptedIdMerkleRoot);
      }
      if (utxoCommitment_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UtxoCommitment);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (Bits != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Bits);
      }
      if (Nonce != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Nonce);
      }
      if (DaaScore != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(DaaScore);
      }
      if (BlueWork.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(BlueWork);
      }
      parents_.WriteTo(output, _repeated_parents_codec);
      if (BlueScore != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(BlueScore);
      }
      if (pruningPoint_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(PruningPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += parents_.CalculateSize(_repeated_parents_codec);
      if (hashMerkleRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HashMerkleRoot);
      }
      if (acceptedIdMerkleRoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceptedIdMerkleRoot);
      }
      if (utxoCommitment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtxoCommitment);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Bits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bits);
      }
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (DaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DaaScore);
      }
      if (BlueWork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlueWork);
      }
      if (pruningPoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PruningPoint);
      }
      if (BlueScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlueScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeader other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      parents_.Add(other.parents_);
      if (other.hashMerkleRoot_ != null) {
        if (hashMerkleRoot_ == null) {
          HashMerkleRoot = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        HashMerkleRoot.MergeFrom(other.HashMerkleRoot);
      }
      if (other.acceptedIdMerkleRoot_ != null) {
        if (acceptedIdMerkleRoot_ == null) {
          AcceptedIdMerkleRoot = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        AcceptedIdMerkleRoot.MergeFrom(other.AcceptedIdMerkleRoot);
      }
      if (other.utxoCommitment_ != null) {
        if (utxoCommitment_ == null) {
          UtxoCommitment = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        UtxoCommitment.MergeFrom(other.UtxoCommitment);
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Bits != 0) {
        Bits = other.Bits;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      if (other.DaaScore != 0UL) {
        DaaScore = other.DaaScore;
      }
      if (other.BlueWork.Length != 0) {
        BlueWork = other.BlueWork;
      }
      if (other.pruningPoint_ != null) {
        if (pruningPoint_ == null) {
          PruningPoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        PruningPoint.MergeFrom(other.PruningPoint);
      }
      if (other.BlueScore != 0UL) {
        BlueScore = other.BlueScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 26: {
            if (hashMerkleRoot_ == null) {
              HashMerkleRoot = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(HashMerkleRoot);
            break;
          }
          case 34: {
            if (acceptedIdMerkleRoot_ == null) {
              AcceptedIdMerkleRoot = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(AcceptedIdMerkleRoot);
            break;
          }
          case 42: {
            if (utxoCommitment_ == null) {
              UtxoCommitment = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(UtxoCommitment);
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 56: {
            Bits = input.ReadUInt32();
            break;
          }
          case 64: {
            Nonce = input.ReadUInt64();
            break;
          }
          case 72: {
            DaaScore = input.ReadUInt64();
            break;
          }
          case 82: {
            BlueWork = input.ReadBytes();
            break;
          }
          case 98: {
            parents_.AddEntriesFrom(input, _repeated_parents_codec);
            break;
          }
          case 104: {
            BlueScore = input.ReadUInt64();
            break;
          }
          case 114: {
            if (pruningPoint_ == null) {
              PruningPoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(PruningPoint);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLevelParents : pb::IMessage<BlockLevelParents> {
    private static readonly pb::MessageParser<BlockLevelParents> _parser = new pb::MessageParser<BlockLevelParents>(() => new BlockLevelParents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLevelParents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLevelParents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLevelParents(BlockLevelParents other) : this() {
      parentHashes_ = other.parentHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLevelParents Clone() {
      return new BlockLevelParents(this);
    }

    /// <summary>Field number for the "parentHashes" field.</summary>
    public const int ParentHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_parentHashes_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> parentHashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> ParentHashes {
      get { return parentHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLevelParents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLevelParents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parentHashes_.Equals(other.parentHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parentHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      parentHashes_.WriteTo(output, _repeated_parentHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parentHashes_.CalculateSize(_repeated_parentHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLevelParents other) {
      if (other == null) {
        return;
      }
      parentHashes_.Add(other.parentHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parentHashes_.AddEntriesFrom(input, _repeated_parentHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bytes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestBlockLocatorMessage : pb::IMessage<RequestBlockLocatorMessage> {
    private static readonly pb::MessageParser<RequestBlockLocatorMessage> _parser = new pb::MessageParser<RequestBlockLocatorMessage>(() => new RequestBlockLocatorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestBlockLocatorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockLocatorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockLocatorMessage(RequestBlockLocatorMessage other) : this() {
      highHash_ = other.highHash_ != null ? other.highHash_.Clone() : null;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestBlockLocatorMessage Clone() {
      return new RequestBlockLocatorMessage(this);
    }

    /// <summary>Field number for the "highHash" field.</summary>
    public const int HighHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash highHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash HighHash {
      get { return highHash_; }
      set {
        highHash_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private uint limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestBlockLocatorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestBlockLocatorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HighHash, other.HighHash)) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (highHash_ != null) hash ^= HighHash.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (highHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HighHash);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (highHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighHash);
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestBlockLocatorMessage other) {
      if (other == null) {
        return;
      }
      if (other.highHash_ != null) {
        if (highHash_ == null) {
          HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        HighHash.MergeFrom(other.HighHash);
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (highHash_ == null) {
              HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(HighHash);
            break;
          }
          case 16: {
            Limit = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLocatorMessage : pb::IMessage<BlockLocatorMessage> {
    private static readonly pb::MessageParser<BlockLocatorMessage> _parser = new pb::MessageParser<BlockLocatorMessage>(() => new BlockLocatorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLocatorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLocatorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLocatorMessage(BlockLocatorMessage other) : this() {
      hashes_ = other.hashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLocatorMessage Clone() {
      return new BlockLocatorMessage(this);
    }

    /// <summary>Field number for the "hashes" field.</summary>
    public const int HashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_hashes_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> hashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> Hashes {
      get { return hashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLocatorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLocatorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashes_.Equals(other.hashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLocatorMessage other) {
      if (other == null) {
        return;
      }
      hashes_.Add(other.hashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestHeadersMessage : pb::IMessage<RequestHeadersMessage> {
    private static readonly pb::MessageParser<RequestHeadersMessage> _parser = new pb::MessageParser<RequestHeadersMessage>(() => new RequestHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeadersMessage(RequestHeadersMessage other) : this() {
      lowHash_ = other.lowHash_ != null ? other.lowHash_.Clone() : null;
      highHash_ = other.highHash_ != null ? other.highHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeadersMessage Clone() {
      return new RequestHeadersMessage(this);
    }

    /// <summary>Field number for the "lowHash" field.</summary>
    public const int LowHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash lowHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash LowHash {
      get { return lowHash_; }
      set {
        lowHash_ = value;
      }
    }

    /// <summary>Field number for the "highHash" field.</summary>
    public const int HighHashFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash highHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash HighHash {
      get { return highHash_; }
      set {
        highHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LowHash, other.LowHash)) return false;
      if (!object.Equals(HighHash, other.HighHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lowHash_ != null) hash ^= LowHash.GetHashCode();
      if (highHash_ != null) hash ^= HighHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lowHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LowHash);
      }
      if (highHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HighHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lowHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowHash);
      }
      if (highHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestHeadersMessage other) {
      if (other == null) {
        return;
      }
      if (other.lowHash_ != null) {
        if (lowHash_ == null) {
          LowHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        LowHash.MergeFrom(other.LowHash);
      }
      if (other.highHash_ != null) {
        if (highHash_ == null) {
          HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        HighHash.MergeFrom(other.HighHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lowHash_ == null) {
              LowHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(LowHash);
            break;
          }
          case 18: {
            if (highHash_ == null) {
              HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(HighHash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestNextHeadersMessage : pb::IMessage<RequestNextHeadersMessage> {
    private static readonly pb::MessageParser<RequestNextHeadersMessage> _parser = new pb::MessageParser<RequestNextHeadersMessage>(() => new RequestNextHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestNextHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextHeadersMessage(RequestNextHeadersMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextHeadersMessage Clone() {
      return new RequestNextHeadersMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestNextHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestNextHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestNextHeadersMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DoneHeadersMessage : pb::IMessage<DoneHeadersMessage> {
    private static readonly pb::MessageParser<DoneHeadersMessage> _parser = new pb::MessageParser<DoneHeadersMessage>(() => new DoneHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoneHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneHeadersMessage(DoneHeadersMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneHeadersMessage Clone() {
      return new DoneHeadersMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoneHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoneHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoneHeadersMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RequestRelayBlocksMessage : pb::IMessage<RequestRelayBlocksMessage> {
    private static readonly pb::MessageParser<RequestRelayBlocksMessage> _parser = new pb::MessageParser<RequestRelayBlocksMessage>(() => new RequestRelayBlocksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestRelayBlocksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRelayBlocksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRelayBlocksMessage(RequestRelayBlocksMessage other) : this() {
      hashes_ = other.hashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestRelayBlocksMessage Clone() {
      return new RequestRelayBlocksMessage(this);
    }

    /// <summary>Field number for the "hashes" field.</summary>
    public const int HashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_hashes_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> hashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> Hashes {
      get { return hashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestRelayBlocksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestRelayBlocksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashes_.Equals(other.hashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestRelayBlocksMessage other) {
      if (other == null) {
        return;
      }
      hashes_.Add(other.hashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestTransactionsMessage : pb::IMessage<RequestTransactionsMessage> {
    private static readonly pb::MessageParser<RequestTransactionsMessage> _parser = new pb::MessageParser<RequestTransactionsMessage>(() => new RequestTransactionsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestTransactionsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTransactionsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTransactionsMessage(RequestTransactionsMessage other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTransactionsMessage Clone() {
      return new RequestTransactionsMessage(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> ids_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestTransactionsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestTransactionsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestTransactionsMessage other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionNotFoundMessage : pb::IMessage<TransactionNotFoundMessage> {
    private static readonly pb::MessageParser<TransactionNotFoundMessage> _parser = new pb::MessageParser<TransactionNotFoundMessage>(() => new TransactionNotFoundMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionNotFoundMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotFoundMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotFoundMessage(TransactionNotFoundMessage other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotFoundMessage Clone() {
      return new TransactionNotFoundMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionNotFoundMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionNotFoundMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionNotFoundMessage other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvRelayBlockMessage : pb::IMessage<InvRelayBlockMessage> {
    private static readonly pb::MessageParser<InvRelayBlockMessage> _parser = new pb::MessageParser<InvRelayBlockMessage>(() => new InvRelayBlockMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvRelayBlockMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvRelayBlockMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvRelayBlockMessage(InvRelayBlockMessage other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvRelayBlockMessage Clone() {
      return new InvRelayBlockMessage(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvRelayBlockMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvRelayBlockMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvRelayBlockMessage other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          Hash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        Hash.MergeFrom(other.Hash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              Hash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(Hash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvTransactionsMessage : pb::IMessage<InvTransactionsMessage> {
    private static readonly pb::MessageParser<InvTransactionsMessage> _parser = new pb::MessageParser<InvTransactionsMessage>(() => new InvTransactionsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvTransactionsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvTransactionsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvTransactionsMessage(InvTransactionsMessage other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvTransactionsMessage Clone() {
      return new InvTransactionsMessage(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> ids_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionId> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvTransactionsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvTransactionsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvTransactionsMessage other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingMessage : pb::IMessage<PingMessage> {
    private static readonly pb::MessageParser<PingMessage> _parser = new pb::MessageParser<PingMessage>(() => new PingMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage(PingMessage other) : this() {
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingMessage Clone() {
      return new PingMessage(this);
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 1;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nonce != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingMessage other) {
      if (other == null) {
        return;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Nonce = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PongMessage : pb::IMessage<PongMessage> {
    private static readonly pb::MessageParser<PongMessage> _parser = new pb::MessageParser<PongMessage>(() => new PongMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PongMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongMessage(PongMessage other) : this() {
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PongMessage Clone() {
      return new PongMessage(this);
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 1;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PongMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PongMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nonce != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PongMessage other) {
      if (other == null) {
        return;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Nonce = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerackMessage : pb::IMessage<VerackMessage> {
    private static readonly pb::MessageParser<VerackMessage> _parser = new pb::MessageParser<VerackMessage>(() => new VerackMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerackMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerackMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerackMessage(VerackMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerackMessage Clone() {
      return new VerackMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerackMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerackMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerackMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class VersionMessage : pb::IMessage<VersionMessage> {
    private static readonly pb::MessageParser<VersionMessage> _parser = new pb::MessageParser<VersionMessage>(() => new VersionMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage(VersionMessage other) : this() {
      protocolVersion_ = other.protocolVersion_;
      services_ = other.services_;
      timestamp_ = other.timestamp_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      id_ = other.id_;
      userAgent_ = other.userAgent_;
      disableRelayTx_ = other.disableRelayTx_;
      subnetworkId_ = other.subnetworkId_ != null ? other.subnetworkId_.Clone() : null;
      network_ = other.network_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionMessage Clone() {
      return new VersionMessage(this);
    }

    /// <summary>Field number for the "protocolVersion" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private uint protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 2;
    private ulong services_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Services {
      get { return services_; }
      set {
        services_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userAgent" field.</summary>
    public const int UserAgentFieldNumber = 6;
    private string userAgent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disableRelayTx" field.</summary>
    public const int DisableRelayTxFieldNumber = 8;
    private bool disableRelayTx_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisableRelayTx {
      get { return disableRelayTx_; }
      set {
        disableRelayTx_ = value;
      }
    }

    /// <summary>Field number for the "subnetworkId" field.</summary>
    public const int SubnetworkIdFieldNumber = 9;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId subnetworkId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId SubnetworkId {
      get { return subnetworkId_; }
      set {
        subnetworkId_ = value;
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 10;
    private string network_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (Services != other.Services) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (Id != other.Id) return false;
      if (UserAgent != other.UserAgent) return false;
      if (DisableRelayTx != other.DisableRelayTx) return false;
      if (!object.Equals(SubnetworkId, other.SubnetworkId)) return false;
      if (Network != other.Network) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (Services != 0UL) hash ^= Services.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (DisableRelayTx != false) hash ^= DisableRelayTx.GetHashCode();
      if (subnetworkId_ != null) hash ^= SubnetworkId.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProtocolVersion);
      }
      if (Services != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Services);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (address_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Address);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Id);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(UserAgent);
      }
      if (DisableRelayTx != false) {
        output.WriteRawTag(64);
        output.WriteBool(DisableRelayTx);
      }
      if (subnetworkId_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(SubnetworkId);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Network);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
      }
      if (Services != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Services);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (DisableRelayTx != false) {
        size += 1 + 1;
      }
      if (subnetworkId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubnetworkId);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionMessage other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.Services != 0UL) {
        Services = other.Services;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.DisableRelayTx != false) {
        DisableRelayTx = other.DisableRelayTx;
      }
      if (other.subnetworkId_ != null) {
        if (subnetworkId_ == null) {
          SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
        }
        SubnetworkId.MergeFrom(other.SubnetworkId);
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadUInt32();
            break;
          }
          case 16: {
            Services = input.ReadUInt64();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            if (address_ == null) {
              Address = new global::Miningcore.Blockchain.Kaspa.Kaspad.NetAddress();
            }
            input.ReadMessage(Address);
            break;
          }
          case 42: {
            Id = input.ReadBytes();
            break;
          }
          case 50: {
            UserAgent = input.ReadString();
            break;
          }
          case 64: {
            DisableRelayTx = input.ReadBool();
            break;
          }
          case 74: {
            if (subnetworkId_ == null) {
              SubnetworkId = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubnetworkId();
            }
            input.ReadMessage(SubnetworkId);
            break;
          }
          case 82: {
            Network = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RejectMessage : pb::IMessage<RejectMessage> {
    private static readonly pb::MessageParser<RejectMessage> _parser = new pb::MessageParser<RejectMessage>(() => new RejectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RejectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectMessage(RejectMessage other) : this() {
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RejectMessage Clone() {
      return new RejectMessage(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RejectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RejectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RejectMessage other) {
      if (other == null) {
        return;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestPruningPointUTXOSetMessage : pb::IMessage<RequestPruningPointUTXOSetMessage> {
    private static readonly pb::MessageParser<RequestPruningPointUTXOSetMessage> _parser = new pb::MessageParser<RequestPruningPointUTXOSetMessage>(() => new RequestPruningPointUTXOSetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPruningPointUTXOSetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointUTXOSetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointUTXOSetMessage(RequestPruningPointUTXOSetMessage other) : this() {
      pruningPointHash_ = other.pruningPointHash_ != null ? other.pruningPointHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointUTXOSetMessage Clone() {
      return new RequestPruningPointUTXOSetMessage(this);
    }

    /// <summary>Field number for the "pruningPointHash" field.</summary>
    public const int PruningPointHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash pruningPointHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash PruningPointHash {
      get { return pruningPointHash_; }
      set {
        pruningPointHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPruningPointUTXOSetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPruningPointUTXOSetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PruningPointHash, other.PruningPointHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pruningPointHash_ != null) hash ^= PruningPointHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pruningPointHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PruningPointHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pruningPointHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PruningPointHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPruningPointUTXOSetMessage other) {
      if (other == null) {
        return;
      }
      if (other.pruningPointHash_ != null) {
        if (pruningPointHash_ == null) {
          PruningPointHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        PruningPointHash.MergeFrom(other.PruningPointHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pruningPointHash_ == null) {
              PruningPointHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(PruningPointHash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PruningPointUtxoSetChunkMessage : pb::IMessage<PruningPointUtxoSetChunkMessage> {
    private static readonly pb::MessageParser<PruningPointUtxoSetChunkMessage> _parser = new pb::MessageParser<PruningPointUtxoSetChunkMessage>(() => new PruningPointUtxoSetChunkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PruningPointUtxoSetChunkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUtxoSetChunkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUtxoSetChunkMessage(PruningPointUtxoSetChunkMessage other) : this() {
      outpointAndUtxoEntryPairs_ = other.outpointAndUtxoEntryPairs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUtxoSetChunkMessage Clone() {
      return new PruningPointUtxoSetChunkMessage(this);
    }

    /// <summary>Field number for the "outpointAndUtxoEntryPairs" field.</summary>
    public const int OutpointAndUtxoEntryPairsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair> _repeated_outpointAndUtxoEntryPairs_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair> outpointAndUtxoEntryPairs_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.OutpointAndUtxoEntryPair> OutpointAndUtxoEntryPairs {
      get { return outpointAndUtxoEntryPairs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PruningPointUtxoSetChunkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PruningPointUtxoSetChunkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outpointAndUtxoEntryPairs_.Equals(other.outpointAndUtxoEntryPairs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outpointAndUtxoEntryPairs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      outpointAndUtxoEntryPairs_.WriteTo(output, _repeated_outpointAndUtxoEntryPairs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += outpointAndUtxoEntryPairs_.CalculateSize(_repeated_outpointAndUtxoEntryPairs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PruningPointUtxoSetChunkMessage other) {
      if (other == null) {
        return;
      }
      outpointAndUtxoEntryPairs_.Add(other.outpointAndUtxoEntryPairs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outpointAndUtxoEntryPairs_.AddEntriesFrom(input, _repeated_outpointAndUtxoEntryPairs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutpointAndUtxoEntryPair : pb::IMessage<OutpointAndUtxoEntryPair> {
    private static readonly pb::MessageParser<OutpointAndUtxoEntryPair> _parser = new pb::MessageParser<OutpointAndUtxoEntryPair>(() => new OutpointAndUtxoEntryPair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutpointAndUtxoEntryPair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutpointAndUtxoEntryPair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutpointAndUtxoEntryPair(OutpointAndUtxoEntryPair other) : this() {
      outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
      utxoEntry_ = other.utxoEntry_ != null ? other.utxoEntry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutpointAndUtxoEntryPair Clone() {
      return new OutpointAndUtxoEntryPair(this);
    }

    /// <summary>Field number for the "outpoint" field.</summary>
    public const int OutpointFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint outpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint Outpoint {
      get { return outpoint_; }
      set {
        outpoint_ = value;
      }
    }

    /// <summary>Field number for the "utxoEntry" field.</summary>
    public const int UtxoEntryFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry utxoEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry UtxoEntry {
      get { return utxoEntry_; }
      set {
        utxoEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutpointAndUtxoEntryPair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutpointAndUtxoEntryPair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Outpoint, other.Outpoint)) return false;
      if (!object.Equals(UtxoEntry, other.UtxoEntry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
      if (utxoEntry_ != null) hash ^= UtxoEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (outpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Outpoint);
      }
      if (utxoEntry_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UtxoEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (outpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
      }
      if (utxoEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtxoEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutpointAndUtxoEntryPair other) {
      if (other == null) {
        return;
      }
      if (other.outpoint_ != null) {
        if (outpoint_ == null) {
          Outpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint();
        }
        Outpoint.MergeFrom(other.Outpoint);
      }
      if (other.utxoEntry_ != null) {
        if (utxoEntry_ == null) {
          UtxoEntry = new global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry();
        }
        UtxoEntry.MergeFrom(other.UtxoEntry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (outpoint_ == null) {
              Outpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 18: {
            if (utxoEntry_ == null) {
              UtxoEntry = new global::Miningcore.Blockchain.Kaspa.Kaspad.UtxoEntry();
            }
            input.ReadMessage(UtxoEntry);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UtxoEntry : pb::IMessage<UtxoEntry> {
    private static readonly pb::MessageParser<UtxoEntry> _parser = new pb::MessageParser<UtxoEntry>(() => new UtxoEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UtxoEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry(UtxoEntry other) : this() {
      amount_ = other.amount_;
      scriptPublicKey_ = other.scriptPublicKey_ != null ? other.scriptPublicKey_.Clone() : null;
      blockDaaScore_ = other.blockDaaScore_;
      isCoinbase_ = other.isCoinbase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxoEntry Clone() {
      return new UtxoEntry(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey scriptPublicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = value;
      }
    }

    /// <summary>Field number for the "blockDaaScore" field.</summary>
    public const int BlockDaaScoreFieldNumber = 3;
    private ulong blockDaaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockDaaScore {
      get { return blockDaaScore_; }
      set {
        blockDaaScore_ = value;
      }
    }

    /// <summary>Field number for the "isCoinbase" field.</summary>
    public const int IsCoinbaseFieldNumber = 4;
    private bool isCoinbase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCoinbase {
      get { return isCoinbase_; }
      set {
        isCoinbase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UtxoEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UtxoEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (!object.Equals(ScriptPublicKey, other.ScriptPublicKey)) return false;
      if (BlockDaaScore != other.BlockDaaScore) return false;
      if (IsCoinbase != other.IsCoinbase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (scriptPublicKey_ != null) hash ^= ScriptPublicKey.GetHashCode();
      if (BlockDaaScore != 0UL) hash ^= BlockDaaScore.GetHashCode();
      if (IsCoinbase != false) hash ^= IsCoinbase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Amount);
      }
      if (scriptPublicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (scriptPublicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UtxoEntry other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      if (other.scriptPublicKey_ != null) {
        if (scriptPublicKey_ == null) {
          ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey();
        }
        ScriptPublicKey.MergeFrom(other.ScriptPublicKey);
      }
      if (other.BlockDaaScore != 0UL) {
        BlockDaaScore = other.BlockDaaScore;
      }
      if (other.IsCoinbase != false) {
        IsCoinbase = other.IsCoinbase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadUInt64();
            break;
          }
          case 18: {
            if (scriptPublicKey_ == null) {
              ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.ScriptPublicKey();
            }
            input.ReadMessage(ScriptPublicKey);
            break;
          }
          case 24: {
            BlockDaaScore = input.ReadUInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestNextPruningPointUtxoSetChunkMessage : pb::IMessage<RequestNextPruningPointUtxoSetChunkMessage> {
    private static readonly pb::MessageParser<RequestNextPruningPointUtxoSetChunkMessage> _parser = new pb::MessageParser<RequestNextPruningPointUtxoSetChunkMessage>(() => new RequestNextPruningPointUtxoSetChunkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestNextPruningPointUtxoSetChunkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointUtxoSetChunkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointUtxoSetChunkMessage(RequestNextPruningPointUtxoSetChunkMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointUtxoSetChunkMessage Clone() {
      return new RequestNextPruningPointUtxoSetChunkMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestNextPruningPointUtxoSetChunkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestNextPruningPointUtxoSetChunkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestNextPruningPointUtxoSetChunkMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DonePruningPointUtxoSetChunksMessage : pb::IMessage<DonePruningPointUtxoSetChunksMessage> {
    private static readonly pb::MessageParser<DonePruningPointUtxoSetChunksMessage> _parser = new pb::MessageParser<DonePruningPointUtxoSetChunksMessage>(() => new DonePruningPointUtxoSetChunksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DonePruningPointUtxoSetChunksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonePruningPointUtxoSetChunksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonePruningPointUtxoSetChunksMessage(DonePruningPointUtxoSetChunksMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DonePruningPointUtxoSetChunksMessage Clone() {
      return new DonePruningPointUtxoSetChunksMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DonePruningPointUtxoSetChunksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DonePruningPointUtxoSetChunksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DonePruningPointUtxoSetChunksMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RequestIBDBlocksMessage : pb::IMessage<RequestIBDBlocksMessage> {
    private static readonly pb::MessageParser<RequestIBDBlocksMessage> _parser = new pb::MessageParser<RequestIBDBlocksMessage>(() => new RequestIBDBlocksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestIBDBlocksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDBlocksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDBlocksMessage(RequestIBDBlocksMessage other) : this() {
      hashes_ = other.hashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDBlocksMessage Clone() {
      return new RequestIBDBlocksMessage(this);
    }

    /// <summary>Field number for the "hashes" field.</summary>
    public const int HashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_hashes_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> hashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> Hashes {
      get { return hashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestIBDBlocksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestIBDBlocksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashes_.Equals(other.hashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestIBDBlocksMessage other) {
      if (other == null) {
        return;
      }
      hashes_.Add(other.hashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnexpectedPruningPointMessage : pb::IMessage<UnexpectedPruningPointMessage> {
    private static readonly pb::MessageParser<UnexpectedPruningPointMessage> _parser = new pb::MessageParser<UnexpectedPruningPointMessage>(() => new UnexpectedPruningPointMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnexpectedPruningPointMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnexpectedPruningPointMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnexpectedPruningPointMessage(UnexpectedPruningPointMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnexpectedPruningPointMessage Clone() {
      return new UnexpectedPruningPointMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnexpectedPruningPointMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnexpectedPruningPointMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnexpectedPruningPointMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class IbdBlockLocatorMessage : pb::IMessage<IbdBlockLocatorMessage> {
    private static readonly pb::MessageParser<IbdBlockLocatorMessage> _parser = new pb::MessageParser<IbdBlockLocatorMessage>(() => new IbdBlockLocatorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IbdBlockLocatorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorMessage(IbdBlockLocatorMessage other) : this() {
      targetHash_ = other.targetHash_ != null ? other.targetHash_.Clone() : null;
      blockLocatorHashes_ = other.blockLocatorHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorMessage Clone() {
      return new IbdBlockLocatorMessage(this);
    }

    /// <summary>Field number for the "targetHash" field.</summary>
    public const int TargetHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash targetHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash TargetHash {
      get { return targetHash_; }
      set {
        targetHash_ = value;
      }
    }

    /// <summary>Field number for the "blockLocatorHashes" field.</summary>
    public const int BlockLocatorHashesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_blockLocatorHashes_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> blockLocatorHashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> BlockLocatorHashes {
      get { return blockLocatorHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IbdBlockLocatorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IbdBlockLocatorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TargetHash, other.TargetHash)) return false;
      if(!blockLocatorHashes_.Equals(other.blockLocatorHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (targetHash_ != null) hash ^= TargetHash.GetHashCode();
      hash ^= blockLocatorHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (targetHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TargetHash);
      }
      blockLocatorHashes_.WriteTo(output, _repeated_blockLocatorHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (targetHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetHash);
      }
      size += blockLocatorHashes_.CalculateSize(_repeated_blockLocatorHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IbdBlockLocatorMessage other) {
      if (other == null) {
        return;
      }
      if (other.targetHash_ != null) {
        if (targetHash_ == null) {
          TargetHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        TargetHash.MergeFrom(other.TargetHash);
      }
      blockLocatorHashes_.Add(other.blockLocatorHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (targetHash_ == null) {
              TargetHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(TargetHash);
            break;
          }
          case 18: {
            blockLocatorHashes_.AddEntriesFrom(input, _repeated_blockLocatorHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestIBDChainBlockLocatorMessage : pb::IMessage<RequestIBDChainBlockLocatorMessage> {
    private static readonly pb::MessageParser<RequestIBDChainBlockLocatorMessage> _parser = new pb::MessageParser<RequestIBDChainBlockLocatorMessage>(() => new RequestIBDChainBlockLocatorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestIBDChainBlockLocatorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDChainBlockLocatorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDChainBlockLocatorMessage(RequestIBDChainBlockLocatorMessage other) : this() {
      lowHash_ = other.lowHash_ != null ? other.lowHash_.Clone() : null;
      highHash_ = other.highHash_ != null ? other.highHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestIBDChainBlockLocatorMessage Clone() {
      return new RequestIBDChainBlockLocatorMessage(this);
    }

    /// <summary>Field number for the "lowHash" field.</summary>
    public const int LowHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash lowHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash LowHash {
      get { return lowHash_; }
      set {
        lowHash_ = value;
      }
    }

    /// <summary>Field number for the "highHash" field.</summary>
    public const int HighHashFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash highHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash HighHash {
      get { return highHash_; }
      set {
        highHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestIBDChainBlockLocatorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestIBDChainBlockLocatorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LowHash, other.LowHash)) return false;
      if (!object.Equals(HighHash, other.HighHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (lowHash_ != null) hash ^= LowHash.GetHashCode();
      if (highHash_ != null) hash ^= HighHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (lowHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LowHash);
      }
      if (highHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HighHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (lowHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowHash);
      }
      if (highHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestIBDChainBlockLocatorMessage other) {
      if (other == null) {
        return;
      }
      if (other.lowHash_ != null) {
        if (lowHash_ == null) {
          LowHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        LowHash.MergeFrom(other.LowHash);
      }
      if (other.highHash_ != null) {
        if (highHash_ == null) {
          HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        HighHash.MergeFrom(other.HighHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lowHash_ == null) {
              LowHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(LowHash);
            break;
          }
          case 18: {
            if (highHash_ == null) {
              HighHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(HighHash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IbdChainBlockLocatorMessage : pb::IMessage<IbdChainBlockLocatorMessage> {
    private static readonly pb::MessageParser<IbdChainBlockLocatorMessage> _parser = new pb::MessageParser<IbdChainBlockLocatorMessage>(() => new IbdChainBlockLocatorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IbdChainBlockLocatorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdChainBlockLocatorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdChainBlockLocatorMessage(IbdChainBlockLocatorMessage other) : this() {
      blockLocatorHashes_ = other.blockLocatorHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdChainBlockLocatorMessage Clone() {
      return new IbdChainBlockLocatorMessage(this);
    }

    /// <summary>Field number for the "blockLocatorHashes" field.</summary>
    public const int BlockLocatorHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_blockLocatorHashes_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> blockLocatorHashes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> BlockLocatorHashes {
      get { return blockLocatorHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IbdChainBlockLocatorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IbdChainBlockLocatorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockLocatorHashes_.Equals(other.blockLocatorHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockLocatorHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blockLocatorHashes_.WriteTo(output, _repeated_blockLocatorHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockLocatorHashes_.CalculateSize(_repeated_blockLocatorHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IbdChainBlockLocatorMessage other) {
      if (other == null) {
        return;
      }
      blockLocatorHashes_.Add(other.blockLocatorHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockLocatorHashes_.AddEntriesFrom(input, _repeated_blockLocatorHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestAnticoneMessage : pb::IMessage<RequestAnticoneMessage> {
    private static readonly pb::MessageParser<RequestAnticoneMessage> _parser = new pb::MessageParser<RequestAnticoneMessage>(() => new RequestAnticoneMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestAnticoneMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAnticoneMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAnticoneMessage(RequestAnticoneMessage other) : this() {
      blockHash_ = other.blockHash_ != null ? other.blockHash_.Clone() : null;
      contextHash_ = other.contextHash_ != null ? other.contextHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestAnticoneMessage Clone() {
      return new RequestAnticoneMessage(this);
    }

    /// <summary>Field number for the "blockHash" field.</summary>
    public const int BlockHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash blockHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = value;
      }
    }

    /// <summary>Field number for the "contextHash" field.</summary>
    public const int ContextHashFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash contextHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash ContextHash {
      get { return contextHash_; }
      set {
        contextHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestAnticoneMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestAnticoneMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockHash, other.BlockHash)) return false;
      if (!object.Equals(ContextHash, other.ContextHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockHash_ != null) hash ^= BlockHash.GetHashCode();
      if (contextHash_ != null) hash ^= ContextHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockHash);
      }
      if (contextHash_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ContextHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHash);
      }
      if (contextHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContextHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestAnticoneMessage other) {
      if (other == null) {
        return;
      }
      if (other.blockHash_ != null) {
        if (blockHash_ == null) {
          BlockHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        BlockHash.MergeFrom(other.BlockHash);
      }
      if (other.contextHash_ != null) {
        if (contextHash_ == null) {
          ContextHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        ContextHash.MergeFrom(other.ContextHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockHash_ == null) {
              BlockHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(BlockHash);
            break;
          }
          case 18: {
            if (contextHash_ == null) {
              ContextHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(ContextHash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IbdBlockLocatorHighestHashMessage : pb::IMessage<IbdBlockLocatorHighestHashMessage> {
    private static readonly pb::MessageParser<IbdBlockLocatorHighestHashMessage> _parser = new pb::MessageParser<IbdBlockLocatorHighestHashMessage>(() => new IbdBlockLocatorHighestHashMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IbdBlockLocatorHighestHashMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashMessage(IbdBlockLocatorHighestHashMessage other) : this() {
      highestHash_ = other.highestHash_ != null ? other.highestHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashMessage Clone() {
      return new IbdBlockLocatorHighestHashMessage(this);
    }

    /// <summary>Field number for the "highestHash" field.</summary>
    public const int HighestHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash highestHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash HighestHash {
      get { return highestHash_; }
      set {
        highestHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IbdBlockLocatorHighestHashMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IbdBlockLocatorHighestHashMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HighestHash, other.HighestHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (highestHash_ != null) hash ^= HighestHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (highestHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HighestHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (highestHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HighestHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IbdBlockLocatorHighestHashMessage other) {
      if (other == null) {
        return;
      }
      if (other.highestHash_ != null) {
        if (highestHash_ == null) {
          HighestHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        HighestHash.MergeFrom(other.HighestHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (highestHash_ == null) {
              HighestHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(HighestHash);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IbdBlockLocatorHighestHashNotFoundMessage : pb::IMessage<IbdBlockLocatorHighestHashNotFoundMessage> {
    private static readonly pb::MessageParser<IbdBlockLocatorHighestHashNotFoundMessage> _parser = new pb::MessageParser<IbdBlockLocatorHighestHashNotFoundMessage>(() => new IbdBlockLocatorHighestHashNotFoundMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IbdBlockLocatorHighestHashNotFoundMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashNotFoundMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashNotFoundMessage(IbdBlockLocatorHighestHashNotFoundMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IbdBlockLocatorHighestHashNotFoundMessage Clone() {
      return new IbdBlockLocatorHighestHashNotFoundMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IbdBlockLocatorHighestHashNotFoundMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IbdBlockLocatorHighestHashNotFoundMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IbdBlockLocatorHighestHashNotFoundMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BlockHeadersMessage : pb::IMessage<BlockHeadersMessage> {
    private static readonly pb::MessageParser<BlockHeadersMessage> _parser = new pb::MessageParser<BlockHeadersMessage>(() => new BlockHeadersMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeadersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage(BlockHeadersMessage other) : this() {
      blockHeaders_ = other.blockHeaders_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeadersMessage Clone() {
      return new BlockHeadersMessage(this);
    }

    /// <summary>Field number for the "blockHeaders" field.</summary>
    public const int BlockHeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> _repeated_blockHeaders_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> blockHeaders_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> BlockHeaders {
      get { return blockHeaders_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeadersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeadersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockHeaders_.Equals(other.blockHeaders_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockHeaders_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blockHeaders_.WriteTo(output, _repeated_blockHeaders_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockHeaders_.CalculateSize(_repeated_blockHeaders_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeadersMessage other) {
      if (other == null) {
        return;
      }
      blockHeaders_.Add(other.blockHeaders_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockHeaders_.AddEntriesFrom(input, _repeated_blockHeaders_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestPruningPointAndItsAnticoneMessage : pb::IMessage<RequestPruningPointAndItsAnticoneMessage> {
    private static readonly pb::MessageParser<RequestPruningPointAndItsAnticoneMessage> _parser = new pb::MessageParser<RequestPruningPointAndItsAnticoneMessage>(() => new RequestPruningPointAndItsAnticoneMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPruningPointAndItsAnticoneMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointAndItsAnticoneMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointAndItsAnticoneMessage(RequestPruningPointAndItsAnticoneMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointAndItsAnticoneMessage Clone() {
      return new RequestPruningPointAndItsAnticoneMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPruningPointAndItsAnticoneMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPruningPointAndItsAnticoneMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPruningPointAndItsAnticoneMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RequestNextPruningPointAndItsAnticoneBlocksMessage : pb::IMessage<RequestNextPruningPointAndItsAnticoneBlocksMessage> {
    private static readonly pb::MessageParser<RequestNextPruningPointAndItsAnticoneBlocksMessage> _parser = new pb::MessageParser<RequestNextPruningPointAndItsAnticoneBlocksMessage>(() => new RequestNextPruningPointAndItsAnticoneBlocksMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestNextPruningPointAndItsAnticoneBlocksMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointAndItsAnticoneBlocksMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointAndItsAnticoneBlocksMessage(RequestNextPruningPointAndItsAnticoneBlocksMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestNextPruningPointAndItsAnticoneBlocksMessage Clone() {
      return new RequestNextPruningPointAndItsAnticoneBlocksMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestNextPruningPointAndItsAnticoneBlocksMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestNextPruningPointAndItsAnticoneBlocksMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestNextPruningPointAndItsAnticoneBlocksMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BlockWithTrustedDataMessage : pb::IMessage<BlockWithTrustedDataMessage> {
    private static readonly pb::MessageParser<BlockWithTrustedDataMessage> _parser = new pb::MessageParser<BlockWithTrustedDataMessage>(() => new BlockWithTrustedDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockWithTrustedDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataMessage(BlockWithTrustedDataMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      daaScore_ = other.daaScore_;
      daaWindow_ = other.daaWindow_.Clone();
      ghostdagData_ = other.ghostdagData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataMessage Clone() {
      return new BlockWithTrustedDataMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "daaScore" field.</summary>
    public const int DaaScoreFieldNumber = 2;
    private ulong daaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DaaScore {
      get { return daaScore_; }
      set {
        daaScore_ = value;
      }
    }

    /// <summary>Field number for the "daaWindow" field.</summary>
    public const int DaaWindowFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock> _repeated_daaWindow_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock> daaWindow_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlock> DaaWindow {
      get { return daaWindow_; }
    }

    /// <summary>Field number for the "ghostdagData" field.</summary>
    public const int GhostdagDataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> _repeated_ghostdagData_codec
        = pb::FieldCodec.ForMessage(34, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> ghostdagData_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> GhostdagData {
      get { return ghostdagData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockWithTrustedDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockWithTrustedDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if (DaaScore != other.DaaScore) return false;
      if(!daaWindow_.Equals(other.daaWindow_)) return false;
      if(!ghostdagData_.Equals(other.ghostdagData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (DaaScore != 0UL) hash ^= DaaScore.GetHashCode();
      hash ^= daaWindow_.GetHashCode();
      hash ^= ghostdagData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      if (DaaScore != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(DaaScore);
      }
      daaWindow_.WriteTo(output, _repeated_daaWindow_codec);
      ghostdagData_.WriteTo(output, _repeated_ghostdagData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (DaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DaaScore);
      }
      size += daaWindow_.CalculateSize(_repeated_daaWindow_codec);
      size += ghostdagData_.CalculateSize(_repeated_ghostdagData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockWithTrustedDataMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
        }
        Block.MergeFrom(other.Block);
      }
      if (other.DaaScore != 0UL) {
        DaaScore = other.DaaScore;
      }
      daaWindow_.Add(other.daaWindow_);
      ghostdagData_.Add(other.ghostdagData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
            }
            input.ReadMessage(Block);
            break;
          }
          case 16: {
            DaaScore = input.ReadUInt64();
            break;
          }
          case 26: {
            daaWindow_.AddEntriesFrom(input, _repeated_daaWindow_codec);
            break;
          }
          case 34: {
            ghostdagData_.AddEntriesFrom(input, _repeated_ghostdagData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaaBlock : pb::IMessage<DaaBlock> {
    private static readonly pb::MessageParser<DaaBlock> _parser = new pb::MessageParser<DaaBlock>(() => new DaaBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaaBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlock(DaaBlock other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      ghostdagData_ = other.ghostdagData_ != null ? other.ghostdagData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlock Clone() {
      return new DaaBlock(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "ghostdagData" field.</summary>
    public const int GhostdagDataFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData ghostdagData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData GhostdagData {
      get { return ghostdagData_; }
      set {
        ghostdagData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaaBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaaBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if (!object.Equals(GhostdagData, other.GhostdagData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (ghostdagData_ != null) hash ^= GhostdagData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ghostdagData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GhostdagData);
      }
      if (block_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (ghostdagData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostdagData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaaBlock other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
        }
        Block.MergeFrom(other.Block);
      }
      if (other.ghostdagData_ != null) {
        if (ghostdagData_ == null) {
          GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
        }
        GhostdagData.MergeFrom(other.GhostdagData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (ghostdagData_ == null) {
              GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
            }
            input.ReadMessage(GhostdagData);
            break;
          }
          case 26: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DaaBlockV4 : pb::IMessage<DaaBlockV4> {
    private static readonly pb::MessageParser<DaaBlockV4> _parser = new pb::MessageParser<DaaBlockV4>(() => new DaaBlockV4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DaaBlockV4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlockV4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlockV4(DaaBlockV4 other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      ghostdagData_ = other.ghostdagData_ != null ? other.ghostdagData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DaaBlockV4 Clone() {
      return new DaaBlockV4(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "ghostdagData" field.</summary>
    public const int GhostdagDataFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData ghostdagData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData GhostdagData {
      get { return ghostdagData_; }
      set {
        ghostdagData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DaaBlockV4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DaaBlockV4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(GhostdagData, other.GhostdagData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (ghostdagData_ != null) hash ^= GhostdagData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (ghostdagData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GhostdagData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (ghostdagData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostdagData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DaaBlockV4 other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.ghostdagData_ != null) {
        if (ghostdagData_ == null) {
          GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
        }
        GhostdagData.MergeFrom(other.GhostdagData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (ghostdagData_ == null) {
              GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
            }
            input.ReadMessage(GhostdagData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockGhostdagDataHashPair : pb::IMessage<BlockGhostdagDataHashPair> {
    private static readonly pb::MessageParser<BlockGhostdagDataHashPair> _parser = new pb::MessageParser<BlockGhostdagDataHashPair>(() => new BlockGhostdagDataHashPair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockGhostdagDataHashPair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockGhostdagDataHashPair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockGhostdagDataHashPair(BlockGhostdagDataHashPair other) : this() {
      hash_ = other.hash_ != null ? other.hash_.Clone() : null;
      ghostdagData_ = other.ghostdagData_ != null ? other.ghostdagData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockGhostdagDataHashPair Clone() {
      return new BlockGhostdagDataHashPair(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash hash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash Hash {
      get { return hash_; }
      set {
        hash_ = value;
      }
    }

    /// <summary>Field number for the "ghostdagData" field.</summary>
    public const int GhostdagDataFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData ghostdagData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData GhostdagData {
      get { return ghostdagData_; }
      set {
        ghostdagData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockGhostdagDataHashPair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockGhostdagDataHashPair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hash, other.Hash)) return false;
      if (!object.Equals(GhostdagData, other.GhostdagData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hash_ != null) hash ^= Hash.GetHashCode();
      if (ghostdagData_ != null) hash ^= GhostdagData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hash);
      }
      if (ghostdagData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GhostdagData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hash);
      }
      if (ghostdagData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GhostdagData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockGhostdagDataHashPair other) {
      if (other == null) {
        return;
      }
      if (other.hash_ != null) {
        if (hash_ == null) {
          Hash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        Hash.MergeFrom(other.Hash);
      }
      if (other.ghostdagData_ != null) {
        if (ghostdagData_ == null) {
          GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
        }
        GhostdagData.MergeFrom(other.GhostdagData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hash_ == null) {
              Hash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(Hash);
            break;
          }
          case 18: {
            if (ghostdagData_ == null) {
              GhostdagData = new global::Miningcore.Blockchain.Kaspa.Kaspad.GhostdagData();
            }
            input.ReadMessage(GhostdagData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GhostdagData : pb::IMessage<GhostdagData> {
    private static readonly pb::MessageParser<GhostdagData> _parser = new pb::MessageParser<GhostdagData>(() => new GhostdagData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GhostdagData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GhostdagData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GhostdagData(GhostdagData other) : this() {
      blueScore_ = other.blueScore_;
      blueWork_ = other.blueWork_;
      selectedParent_ = other.selectedParent_ != null ? other.selectedParent_.Clone() : null;
      mergeSetBlues_ = other.mergeSetBlues_.Clone();
      mergeSetReds_ = other.mergeSetReds_.Clone();
      bluesAnticoneSizes_ = other.bluesAnticoneSizes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GhostdagData Clone() {
      return new GhostdagData(this);
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 1;
    private ulong blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    /// <summary>Field number for the "blueWork" field.</summary>
    public const int BlueWorkFieldNumber = 2;
    private pb::ByteString blueWork_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlueWork {
      get { return blueWork_; }
      set {
        blueWork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "selectedParent" field.</summary>
    public const int SelectedParentFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash selectedParent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash SelectedParent {
      get { return selectedParent_; }
      set {
        selectedParent_ = value;
      }
    }

    /// <summary>Field number for the "mergeSetBlues" field.</summary>
    public const int MergeSetBluesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_mergeSetBlues_codec
        = pb::FieldCodec.ForMessage(34, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> mergeSetBlues_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> MergeSetBlues {
      get { return mergeSetBlues_; }
    }

    /// <summary>Field number for the "mergeSetReds" field.</summary>
    public const int MergeSetRedsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> _repeated_mergeSetReds_codec
        = pb::FieldCodec.ForMessage(42, global::Miningcore.Blockchain.Kaspa.Kaspad.Hash.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> mergeSetReds_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.Hash> MergeSetReds {
      get { return mergeSetReds_; }
    }

    /// <summary>Field number for the "bluesAnticoneSizes" field.</summary>
    public const int BluesAnticoneSizesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes> _repeated_bluesAnticoneSizes_codec
        = pb::FieldCodec.ForMessage(50, global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes> bluesAnticoneSizes_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BluesAnticoneSizes> BluesAnticoneSizes {
      get { return bluesAnticoneSizes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GhostdagData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GhostdagData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlueScore != other.BlueScore) return false;
      if (BlueWork != other.BlueWork) return false;
      if (!object.Equals(SelectedParent, other.SelectedParent)) return false;
      if(!mergeSetBlues_.Equals(other.mergeSetBlues_)) return false;
      if(!mergeSetReds_.Equals(other.mergeSetReds_)) return false;
      if(!bluesAnticoneSizes_.Equals(other.bluesAnticoneSizes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlueScore != 0UL) hash ^= BlueScore.GetHashCode();
      if (BlueWork.Length != 0) hash ^= BlueWork.GetHashCode();
      if (selectedParent_ != null) hash ^= SelectedParent.GetHashCode();
      hash ^= mergeSetBlues_.GetHashCode();
      hash ^= mergeSetReds_.GetHashCode();
      hash ^= bluesAnticoneSizes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlueScore != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BlueScore);
      }
      if (BlueWork.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlueWork);
      }
      if (selectedParent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SelectedParent);
      }
      mergeSetBlues_.WriteTo(output, _repeated_mergeSetBlues_codec);
      mergeSetReds_.WriteTo(output, _repeated_mergeSetReds_codec);
      bluesAnticoneSizes_.WriteTo(output, _repeated_bluesAnticoneSizes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlueScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlueScore);
      }
      if (BlueWork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlueWork);
      }
      if (selectedParent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedParent);
      }
      size += mergeSetBlues_.CalculateSize(_repeated_mergeSetBlues_codec);
      size += mergeSetReds_.CalculateSize(_repeated_mergeSetReds_codec);
      size += bluesAnticoneSizes_.CalculateSize(_repeated_bluesAnticoneSizes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GhostdagData other) {
      if (other == null) {
        return;
      }
      if (other.BlueScore != 0UL) {
        BlueScore = other.BlueScore;
      }
      if (other.BlueWork.Length != 0) {
        BlueWork = other.BlueWork;
      }
      if (other.selectedParent_ != null) {
        if (selectedParent_ == null) {
          SelectedParent = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        SelectedParent.MergeFrom(other.SelectedParent);
      }
      mergeSetBlues_.Add(other.mergeSetBlues_);
      mergeSetReds_.Add(other.mergeSetReds_);
      bluesAnticoneSizes_.Add(other.bluesAnticoneSizes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlueScore = input.ReadUInt64();
            break;
          }
          case 18: {
            BlueWork = input.ReadBytes();
            break;
          }
          case 26: {
            if (selectedParent_ == null) {
              SelectedParent = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(SelectedParent);
            break;
          }
          case 34: {
            mergeSetBlues_.AddEntriesFrom(input, _repeated_mergeSetBlues_codec);
            break;
          }
          case 42: {
            mergeSetReds_.AddEntriesFrom(input, _repeated_mergeSetReds_codec);
            break;
          }
          case 50: {
            bluesAnticoneSizes_.AddEntriesFrom(input, _repeated_bluesAnticoneSizes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BluesAnticoneSizes : pb::IMessage<BluesAnticoneSizes> {
    private static readonly pb::MessageParser<BluesAnticoneSizes> _parser = new pb::MessageParser<BluesAnticoneSizes>(() => new BluesAnticoneSizes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BluesAnticoneSizes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluesAnticoneSizes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluesAnticoneSizes(BluesAnticoneSizes other) : this() {
      blueHash_ = other.blueHash_ != null ? other.blueHash_.Clone() : null;
      anticoneSize_ = other.anticoneSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BluesAnticoneSizes Clone() {
      return new BluesAnticoneSizes(this);
    }

    /// <summary>Field number for the "blueHash" field.</summary>
    public const int BlueHashFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.Hash blueHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.Hash BlueHash {
      get { return blueHash_; }
      set {
        blueHash_ = value;
      }
    }

    /// <summary>Field number for the "anticoneSize" field.</summary>
    public const int AnticoneSizeFieldNumber = 2;
    private uint anticoneSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AnticoneSize {
      get { return anticoneSize_; }
      set {
        anticoneSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BluesAnticoneSizes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BluesAnticoneSizes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlueHash, other.BlueHash)) return false;
      if (AnticoneSize != other.AnticoneSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blueHash_ != null) hash ^= BlueHash.GetHashCode();
      if (AnticoneSize != 0) hash ^= AnticoneSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blueHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlueHash);
      }
      if (AnticoneSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AnticoneSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blueHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlueHash);
      }
      if (AnticoneSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnticoneSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BluesAnticoneSizes other) {
      if (other == null) {
        return;
      }
      if (other.blueHash_ != null) {
        if (blueHash_ == null) {
          BlueHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
        }
        BlueHash.MergeFrom(other.BlueHash);
      }
      if (other.AnticoneSize != 0) {
        AnticoneSize = other.AnticoneSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blueHash_ == null) {
              BlueHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.Hash();
            }
            input.ReadMessage(BlueHash);
            break;
          }
          case 16: {
            AnticoneSize = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DoneBlocksWithTrustedDataMessage : pb::IMessage<DoneBlocksWithTrustedDataMessage> {
    private static readonly pb::MessageParser<DoneBlocksWithTrustedDataMessage> _parser = new pb::MessageParser<DoneBlocksWithTrustedDataMessage>(() => new DoneBlocksWithTrustedDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DoneBlocksWithTrustedDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneBlocksWithTrustedDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneBlocksWithTrustedDataMessage(DoneBlocksWithTrustedDataMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DoneBlocksWithTrustedDataMessage Clone() {
      return new DoneBlocksWithTrustedDataMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DoneBlocksWithTrustedDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DoneBlocksWithTrustedDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DoneBlocksWithTrustedDataMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PruningPointsMessage : pb::IMessage<PruningPointsMessage> {
    private static readonly pb::MessageParser<PruningPointsMessage> _parser = new pb::MessageParser<PruningPointsMessage>(() => new PruningPointsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PruningPointsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointsMessage(PruningPointsMessage other) : this() {
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointsMessage Clone() {
      return new PruningPointsMessage(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> headers_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PruningPointsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PruningPointsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PruningPointsMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestPruningPointProofMessage : pb::IMessage<RequestPruningPointProofMessage> {
    private static readonly pb::MessageParser<RequestPruningPointProofMessage> _parser = new pb::MessageParser<RequestPruningPointProofMessage>(() => new RequestPruningPointProofMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestPruningPointProofMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointProofMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointProofMessage(RequestPruningPointProofMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestPruningPointProofMessage Clone() {
      return new RequestPruningPointProofMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestPruningPointProofMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestPruningPointProofMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestPruningPointProofMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PruningPointProofMessage : pb::IMessage<PruningPointProofMessage> {
    private static readonly pb::MessageParser<PruningPointProofMessage> _parser = new pb::MessageParser<PruningPointProofMessage>(() => new PruningPointProofMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PruningPointProofMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofMessage(PruningPointProofMessage other) : this() {
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofMessage Clone() {
      return new PruningPointProofMessage(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray> headers_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofHeaderArray> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PruningPointProofMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PruningPointProofMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PruningPointProofMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PruningPointProofHeaderArray : pb::IMessage<PruningPointProofHeaderArray> {
    private static readonly pb::MessageParser<PruningPointProofHeaderArray> _parser = new pb::MessageParser<PruningPointProofHeaderArray>(() => new PruningPointProofHeaderArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PruningPointProofHeaderArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofHeaderArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofHeaderArray(PruningPointProofHeaderArray other) : this() {
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointProofHeaderArray Clone() {
      return new PruningPointProofHeaderArray(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> headers_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PruningPointProofHeaderArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PruningPointProofHeaderArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PruningPointProofHeaderArray other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadyMessage : pb::IMessage<ReadyMessage> {
    private static readonly pb::MessageParser<ReadyMessage> _parser = new pb::MessageParser<ReadyMessage>(() => new ReadyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyMessage(ReadyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadyMessage Clone() {
      return new ReadyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class BlockWithTrustedDataV4Message : pb::IMessage<BlockWithTrustedDataV4Message> {
    private static readonly pb::MessageParser<BlockWithTrustedDataV4Message> _parser = new pb::MessageParser<BlockWithTrustedDataV4Message>(() => new BlockWithTrustedDataV4Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockWithTrustedDataV4Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataV4Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataV4Message(BlockWithTrustedDataV4Message other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      daaWindowIndices_ = other.daaWindowIndices_.Clone();
      ghostdagDataIndices_ = other.ghostdagDataIndices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockWithTrustedDataV4Message Clone() {
      return new BlockWithTrustedDataV4Message(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "daaWindowIndices" field.</summary>
    public const int DaaWindowIndicesFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_daaWindowIndices_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> daaWindowIndices_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> DaaWindowIndices {
      get { return daaWindowIndices_; }
    }

    /// <summary>Field number for the "ghostdagDataIndices" field.</summary>
    public const int GhostdagDataIndicesFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_ghostdagDataIndices_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> ghostdagDataIndices_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> GhostdagDataIndices {
      get { return ghostdagDataIndices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockWithTrustedDataV4Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockWithTrustedDataV4Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if(!daaWindowIndices_.Equals(other.daaWindowIndices_)) return false;
      if(!ghostdagDataIndices_.Equals(other.ghostdagDataIndices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      hash ^= daaWindowIndices_.GetHashCode();
      hash ^= ghostdagDataIndices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      daaWindowIndices_.WriteTo(output, _repeated_daaWindowIndices_codec);
      ghostdagDataIndices_.WriteTo(output, _repeated_ghostdagDataIndices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      size += daaWindowIndices_.CalculateSize(_repeated_daaWindowIndices_codec);
      size += ghostdagDataIndices_.CalculateSize(_repeated_ghostdagDataIndices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockWithTrustedDataV4Message other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
        }
        Block.MergeFrom(other.Block);
      }
      daaWindowIndices_.Add(other.daaWindowIndices_);
      ghostdagDataIndices_.Add(other.ghostdagDataIndices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
            }
            input.ReadMessage(Block);
            break;
          }
          case 18:
          case 16: {
            daaWindowIndices_.AddEntriesFrom(input, _repeated_daaWindowIndices_codec);
            break;
          }
          case 26:
          case 24: {
            ghostdagDataIndices_.AddEntriesFrom(input, _repeated_ghostdagDataIndices_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrustedDataMessage : pb::IMessage<TrustedDataMessage> {
    private static readonly pb::MessageParser<TrustedDataMessage> _parser = new pb::MessageParser<TrustedDataMessage>(() => new TrustedDataMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrustedDataMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrustedDataMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrustedDataMessage(TrustedDataMessage other) : this() {
      daaWindow_ = other.daaWindow_.Clone();
      ghostdagData_ = other.ghostdagData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrustedDataMessage Clone() {
      return new TrustedDataMessage(this);
    }

    /// <summary>Field number for the "daaWindow" field.</summary>
    public const int DaaWindowFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4> _repeated_daaWindow_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4> daaWindow_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.DaaBlockV4> DaaWindow {
      get { return daaWindow_; }
    }

    /// <summary>Field number for the "ghostdagData" field.</summary>
    public const int GhostdagDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> _repeated_ghostdagData_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> ghostdagData_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BlockGhostdagDataHashPair> GhostdagData {
      get { return ghostdagData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrustedDataMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrustedDataMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!daaWindow_.Equals(other.daaWindow_)) return false;
      if(!ghostdagData_.Equals(other.ghostdagData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= daaWindow_.GetHashCode();
      hash ^= ghostdagData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      daaWindow_.WriteTo(output, _repeated_daaWindow_codec);
      ghostdagData_.WriteTo(output, _repeated_ghostdagData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += daaWindow_.CalculateSize(_repeated_daaWindow_codec);
      size += ghostdagData_.CalculateSize(_repeated_ghostdagData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrustedDataMessage other) {
      if (other == null) {
        return;
      }
      daaWindow_.Add(other.daaWindow_);
      ghostdagData_.Add(other.ghostdagData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            daaWindow_.AddEntriesFrom(input, _repeated_daaWindow_codec);
            break;
          }
          case 18: {
            ghostdagData_.AddEntriesFrom(input, _repeated_ghostdagData_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

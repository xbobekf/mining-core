// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

namespace Miningcore.Blockchain.Kaspa.Kaspad {

  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;

  /// <summary>Holder for reflection information generated from rpc.proto</summary>
  public static partial class RpcReflection {

    #region Descriptor
    /// <summary>File descriptor for rpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglycGMucHJvdG8SCXByb3Rvd2lyZSIbCghSUENFcnJvchIPCgdtZXNzYWdl",
            "GAEgASgJIpsBCghScGNCbG9jaxIpCgZoZWFkZXIYASABKAsyGS5wcm90b3dp",
            "cmUuUnBjQmxvY2tIZWFkZXISLwoMdHJhbnNhY3Rpb25zGAIgAygLMhkucHJv",
            "dG93aXJlLlJwY1RyYW5zYWN0aW9uEjMKC3ZlcmJvc2VEYXRhGAMgASgLMh4u",
            "cHJvdG93aXJlLlJwY0Jsb2NrVmVyYm9zZURhdGEingIKDlJwY0Jsb2NrSGVh",
            "ZGVyEg8KB3ZlcnNpb24YASABKA0SMAoHcGFyZW50cxgMIAMoCzIfLnByb3Rv",
            "d2lyZS5ScGNCbG9ja0xldmVsUGFyZW50cxIWCg5oYXNoTWVya2xlUm9vdBgD",
            "IAEoCRIcChRhY2NlcHRlZElkTWVya2xlUm9vdBgEIAEoCRIWCg51dHhvQ29t",
            "bWl0bWVudBgFIAEoCRIRCgl0aW1lc3RhbXAYBiABKAMSDAoEYml0cxgHIAEo",
            "DRINCgVub25jZRgIIAEoBBIQCghkYWFTY29yZRgJIAEoBBIQCghibHVlV29y",
            "axgKIAEoCRIUCgxwcnVuaW5nUG9pbnQYDiABKAkSEQoJYmx1ZVNjb3JlGA0g",
            "ASgEIiwKFFJwY0Jsb2NrTGV2ZWxQYXJlbnRzEhQKDHBhcmVudEhhc2hlcxgB",
            "IAMoCSL7AQoTUnBjQmxvY2tWZXJib3NlRGF0YRIMCgRoYXNoGAEgASgJEhIK",
            "CmRpZmZpY3VsdHkYCyABKAESGgoSc2VsZWN0ZWRQYXJlbnRIYXNoGA0gASgJ",
            "EhYKDnRyYW5zYWN0aW9uSWRzGA4gAygJEhQKDGlzSGVhZGVyT25seRgPIAEo",
            "CBIRCglibHVlU2NvcmUYECABKAQSFgoOY2hpbGRyZW5IYXNoZXMYESADKAkS",
            "GwoTbWVyZ2VTZXRCbHVlc0hhc2hlcxgSIAMoCRIaChJtZXJnZVNldFJlZHNI",
            "YXNoZXMYEyADKAkSFAoMaXNDaGFpbkJsb2NrGBQgASgIIoQCCg5ScGNUcmFu",
            "c2FjdGlvbhIPCgd2ZXJzaW9uGAEgASgNEi4KBmlucHV0cxgCIAMoCzIeLnBy",
            "b3Rvd2lyZS5ScGNUcmFuc2FjdGlvbklucHV0EjAKB291dHB1dHMYAyADKAsy",
            "Hy5wcm90b3dpcmUuUnBjVHJhbnNhY3Rpb25PdXRwdXQSEAoIbG9ja1RpbWUY",
            "BCABKAQSFAoMc3VibmV0d29ya0lkGAUgASgJEgsKA2dhcxgGIAEoBBIPCgdw",
            "YXlsb2FkGAggASgJEjkKC3ZlcmJvc2VEYXRhGAkgASgLMiQucHJvdG93aXJl",
            "LlJwY1RyYW5zYWN0aW9uVmVyYm9zZURhdGEixgEKE1JwY1RyYW5zYWN0aW9u",
            "SW5wdXQSMAoQcHJldmlvdXNPdXRwb2ludBgBIAEoCzIWLnByb3Rvd2lyZS5S",
            "cGNPdXRwb2ludBIXCg9zaWduYXR1cmVTY3JpcHQYAiABKAkSEAoIc2VxdWVu",
            "Y2UYAyABKAQSEgoKc2lnT3BDb3VudBgFIAEoDRI+Cgt2ZXJib3NlRGF0YRgE",
            "IAEoCzIpLnByb3Rvd2lyZS5ScGNUcmFuc2FjdGlvbklucHV0VmVyYm9zZURh",
            "dGEiPgoSUnBjU2NyaXB0UHVibGljS2V5Eg8KB3ZlcnNpb24YASABKA0SFwoP",
            "c2NyaXB0UHVibGljS2V5GAIgASgJIp8BChRScGNUcmFuc2FjdGlvbk91dHB1",
            "dBIOCgZhbW91bnQYASABKAQSNgoPc2NyaXB0UHVibGljS2V5GAIgASgLMh0u",
            "cHJvdG93aXJlLlJwY1NjcmlwdFB1YmxpY0tleRI/Cgt2ZXJib3NlRGF0YRgD",
            "IAEoCzIqLnByb3Rvd2lyZS5ScGNUcmFuc2FjdGlvbk91dHB1dFZlcmJvc2VE",
            "YXRhIjMKC1JwY091dHBvaW50EhUKDXRyYW5zYWN0aW9uSWQYASABKAkSDQoF",
            "aW5kZXgYAiABKA0igQEKDFJwY1V0eG9FbnRyeRIOCgZhbW91bnQYASABKAQS",
            "NgoPc2NyaXB0UHVibGljS2V5GAIgASgLMh0ucHJvdG93aXJlLlJwY1Njcmlw",
            "dFB1YmxpY0tleRIVCg1ibG9ja0RhYVNjb3JlGAMgASgEEhIKCmlzQ29pbmJh",
            "c2UYBCABKAgidAoZUnBjVHJhbnNhY3Rpb25WZXJib3NlRGF0YRIVCg10cmFu",
            "c2FjdGlvbklkGAEgASgJEgwKBGhhc2gYAiABKAkSDAoEbWFzcxgEIAEoBBIR",
            "CglibG9ja0hhc2gYDCABKAkSEQoJYmxvY2tUaW1lGA4gASgEIiAKHlJwY1Ry",
            "YW5zYWN0aW9uSW5wdXRWZXJib3NlRGF0YSJeCh9ScGNUcmFuc2FjdGlvbk91",
            "dHB1dFZlcmJvc2VEYXRhEhsKE3NjcmlwdFB1YmxpY0tleVR5cGUYBSABKAkS",
            "HgoWc2NyaXB0UHVibGljS2V5QWRkcmVzcxgGIAEoCSIhCh9HZXRDdXJyZW50",
            "TmV0d29ya1JlcXVlc3RNZXNzYWdlIl8KIEdldEN1cnJlbnROZXR3b3JrUmVz",
            "cG9uc2VNZXNzYWdlEhYKDmN1cnJlbnROZXR3b3JrGAEgASgJEiMKBWVycm9y",
            "GOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciJaChlTdWJtaXRCbG9ja1Jl",
            "cXVlc3RNZXNzYWdlEiIKBWJsb2NrGAIgASgLMhMucHJvdG93aXJlLlJwY0Js",
            "b2NrEhkKEWFsbG93Tm9uREFBQmxvY2tzGAMgASgIIscBChpTdWJtaXRCbG9j",
            "a1Jlc3BvbnNlTWVzc2FnZRJICgxyZWplY3RSZWFzb24YASABKA4yMi5wcm90",
            "b3dpcmUuU3VibWl0QmxvY2tSZXNwb25zZU1lc3NhZ2UuUmVqZWN0UmVhc29u",
            "EiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciI6CgxSZWpl",
            "Y3RSZWFzb24SCAoETk9ORRAAEhEKDUJMT0NLX0lOVkFMSUQQARINCglJU19J",
            "Tl9JQkQQAiJHCh5HZXRCbG9ja1RlbXBsYXRlUmVxdWVzdE1lc3NhZ2USEgoK",
            "cGF5QWRkcmVzcxgBIAEoCRIRCglleHRyYURhdGEYAiABKAkifAofR2V0Qmxv",
            "Y2tUZW1wbGF0ZVJlc3BvbnNlTWVzc2FnZRIiCgVibG9jaxgDIAEoCzITLnBy",
            "b3Rvd2lyZS5ScGNCbG9jaxIQCghpc1N5bmNlZBgCIAEoCBIjCgVlcnJvchjo",
            "ByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IiIAoeTm90aWZ5QmxvY2tBZGRl",
            "ZFJlcXVlc3RNZXNzYWdlIkYKH05vdGlmeUJsb2NrQWRkZWRSZXNwb25zZU1l",
            "c3NhZ2USIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQQ0Vycm9yIkMK",
            "HUJsb2NrQWRkZWROb3RpZmljYXRpb25NZXNzYWdlEiIKBWJsb2NrGAMgASgL",
            "MhMucHJvdG93aXJlLlJwY0Jsb2NrIiAKHkdldFBlZXJBZGRyZXNzZXNSZXF1",
            "ZXN0TWVzc2FnZSLSAQofR2V0UGVlckFkZHJlc3Nlc1Jlc3BvbnNlTWVzc2Fn",
            "ZRJBCglhZGRyZXNzZXMYASADKAsyLi5wcm90b3dpcmUuR2V0UGVlckFkZHJl",
            "c3Nlc0tub3duQWRkcmVzc01lc3NhZ2USRwoPYmFubmVkQWRkcmVzc2VzGAIg",
            "AygLMi4ucHJvdG93aXJlLkdldFBlZXJBZGRyZXNzZXNLbm93bkFkZHJlc3NN",
            "ZXNzYWdlEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciIz",
            "CiNHZXRQZWVyQWRkcmVzc2VzS25vd25BZGRyZXNzTWVzc2FnZRIMCgRBZGRy",
            "GAEgASgJIiIKIEdldFNlbGVjdGVkVGlwSGFzaFJlcXVlc3RNZXNzYWdlImEK",
            "IUdldFNlbGVjdGVkVGlwSGFzaFJlc3BvbnNlTWVzc2FnZRIXCg9zZWxlY3Rl",
            "ZFRpcEhhc2gYASABKAkSIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQ",
            "Q0Vycm9yImcKHUdldE1lbXBvb2xFbnRyeVJlcXVlc3RNZXNzYWdlEgwKBHR4",
            "SWQYASABKAkSGQoRaW5jbHVkZU9ycGhhblBvb2wYAiABKAgSHQoVZmlsdGVy",
            "VHJhbnNhY3Rpb25Qb29sGAMgASgIIm0KHkdldE1lbXBvb2xFbnRyeVJlc3Bv",
            "bnNlTWVzc2FnZRImCgVlbnRyeRgBIAEoCzIXLnByb3Rvd2lyZS5NZW1wb29s",
            "RW50cnkSIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQQ0Vycm9yIlsK",
            "H0dldE1lbXBvb2xFbnRyaWVzUmVxdWVzdE1lc3NhZ2USGQoRaW5jbHVkZU9y",
            "cGhhblBvb2wYASABKAgSHQoVZmlsdGVyVHJhbnNhY3Rpb25Qb29sGAIgASgI",
            "InEKIEdldE1lbXBvb2xFbnRyaWVzUmVzcG9uc2VNZXNzYWdlEigKB2VudHJp",
            "ZXMYASADKAsyFy5wcm90b3dpcmUuTWVtcG9vbEVudHJ5EiMKBWVycm9yGOgH",
            "IAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciJdCgxNZW1wb29sRW50cnkSCwoD",
            "ZmVlGAEgASgEEi4KC3RyYW5zYWN0aW9uGAMgASgLMhkucHJvdG93aXJlLlJw",
            "Y1RyYW5zYWN0aW9uEhAKCGlzT3JwaGFuGAQgASgIIiQKIkdldENvbm5lY3Rl",
            "ZFBlZXJJbmZvUmVxdWVzdE1lc3NhZ2UigQEKI0dldENvbm5lY3RlZFBlZXJJ",
            "bmZvUmVzcG9uc2VNZXNzYWdlEjUKBWluZm9zGAEgAygLMiYucHJvdG93aXJl",
            "LkdldENvbm5lY3RlZFBlZXJJbmZvTWVzc2FnZRIjCgVlcnJvchjoByABKAsy",
            "Ey5wcm90b3dpcmUuUlBDRXJyb3Ii3AEKG0dldENvbm5lY3RlZFBlZXJJbmZv",
            "TWVzc2FnZRIKCgJpZBgBIAEoCRIPCgdhZGRyZXNzGAIgASgJEhgKEGxhc3RQ",
            "aW5nRHVyYXRpb24YAyABKAMSEgoKaXNPdXRib3VuZBgGIAEoCBISCgp0aW1l",
            "T2Zmc2V0GAcgASgDEhEKCXVzZXJBZ2VudBgIIAEoCRIhChlhZHZlcnRpc2Vk",
            "UHJvdG9jb2xWZXJzaW9uGAkgASgNEhUKDXRpbWVDb25uZWN0ZWQYCiABKAMS",
            "EQoJaXNJYmRQZWVyGAsgASgIIj0KFUFkZFBlZXJSZXF1ZXN0TWVzc2FnZRIP",
            "CgdhZGRyZXNzGAEgASgJEhMKC2lzUGVybWFuZW50GAIgASgIIj0KFkFkZFBl",
            "ZXJSZXNwb25zZU1lc3NhZ2USIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJl",
            "LlJQQ0Vycm9yImYKH1N1Ym1pdFRyYW5zYWN0aW9uUmVxdWVzdE1lc3NhZ2US",
            "LgoLdHJhbnNhY3Rpb24YASABKAsyGS5wcm90b3dpcmUuUnBjVHJhbnNhY3Rp",
            "b24SEwoLYWxsb3dPcnBoYW4YAiABKAgiXgogU3VibWl0VHJhbnNhY3Rpb25S",
            "ZXNwb25zZU1lc3NhZ2USFQoNdHJhbnNhY3Rpb25JZBgBIAEoCRIjCgVlcnJv",
            "chjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IiXgo1Tm90aWZ5VmlydHVh",
            "bFNlbGVjdGVkUGFyZW50Q2hhaW5DaGFuZ2VkUmVxdWVzdE1lc3NhZ2USJQod",
            "aW5jbHVkZUFjY2VwdGVkVHJhbnNhY3Rpb25JZHMYASABKAgiXQo2Tm90aWZ5",
            "VmlydHVhbFNlbGVjdGVkUGFyZW50Q2hhaW5DaGFuZ2VkUmVzcG9uc2VNZXNz",
            "YWdlEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciK5AQo0",
            "VmlydHVhbFNlbGVjdGVkUGFyZW50Q2hhaW5DaGFuZ2VkTm90aWZpY2F0aW9u",
            "TWVzc2FnZRIfChdyZW1vdmVkQ2hhaW5CbG9ja0hhc2hlcxgBIAMoCRIdChVh",
            "ZGRlZENoYWluQmxvY2tIYXNoZXMYAyADKAkSQQoWYWNjZXB0ZWRUcmFuc2Fj",
            "dGlvbklkcxgCIAMoCzIhLnByb3Rvd2lyZS5BY2NlcHRlZFRyYW5zYWN0aW9u",
            "SWRzIkMKFkdldEJsb2NrUmVxdWVzdE1lc3NhZ2USDAoEaGFzaBgBIAEoCRIb",
            "ChNpbmNsdWRlVHJhbnNhY3Rpb25zGAMgASgIImIKF0dldEJsb2NrUmVzcG9u",
            "c2VNZXNzYWdlEiIKBWJsb2NrGAMgASgLMhMucHJvdG93aXJlLlJwY0Jsb2Nr",
            "EiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciIzChtHZXRT",
            "dWJuZXR3b3JrUmVxdWVzdE1lc3NhZ2USFAoMc3VibmV0d29ya0lkGAEgASgJ",
            "IlUKHEdldFN1Ym5ldHdvcmtSZXNwb25zZU1lc3NhZ2USEAoIZ2FzTGltaXQY",
            "ASABKAQSIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQQ0Vycm9yInAK",
            "NEdldFZpcnR1YWxTZWxlY3RlZFBhcmVudENoYWluRnJvbUJsb2NrUmVxdWVz",
            "dE1lc3NhZ2USEQoJc3RhcnRIYXNoGAEgASgJEiUKHWluY2x1ZGVBY2NlcHRl",
            "ZFRyYW5zYWN0aW9uSWRzGAIgASgIIlQKFkFjY2VwdGVkVHJhbnNhY3Rpb25J",
            "ZHMSGgoSYWNjZXB0aW5nQmxvY2tIYXNoGAEgASgJEh4KFmFjY2VwdGVkVHJh",
            "bnNhY3Rpb25JZHMYAiADKAki3wEKNUdldFZpcnR1YWxTZWxlY3RlZFBhcmVu",
            "dENoYWluRnJvbUJsb2NrUmVzcG9uc2VNZXNzYWdlEh8KF3JlbW92ZWRDaGFp",
            "bkJsb2NrSGFzaGVzGAEgAygJEh0KFWFkZGVkQ2hhaW5CbG9ja0hhc2hlcxgD",
            "IAMoCRJBChZhY2NlcHRlZFRyYW5zYWN0aW9uSWRzGAIgAygLMiEucHJvdG93",
            "aXJlLkFjY2VwdGVkVHJhbnNhY3Rpb25JZHMSIwoFZXJyb3IY6AcgASgLMhMu",
            "cHJvdG93aXJlLlJQQ0Vycm9yIl4KF0dldEJsb2Nrc1JlcXVlc3RNZXNzYWdl",
            "Eg8KB2xvd0hhc2gYASABKAkSFQoNaW5jbHVkZUJsb2NrcxgCIAEoCBIbChNp",
            "bmNsdWRlVHJhbnNhY3Rpb25zGAMgASgIInkKGEdldEJsb2Nrc1Jlc3BvbnNl",
            "TWVzc2FnZRITCgtibG9ja0hhc2hlcxgEIAMoCRIjCgZibG9ja3MYAyADKAsy",
            "Ey5wcm90b3dpcmUuUnBjQmxvY2sSIwoFZXJyb3IY6AcgASgLMhMucHJvdG93",
            "aXJlLlJQQ0Vycm9yIh0KG0dldEJsb2NrQ291bnRSZXF1ZXN0TWVzc2FnZSJs",
            "ChxHZXRCbG9ja0NvdW50UmVzcG9uc2VNZXNzYWdlEhIKCmJsb2NrQ291bnQY",
            "ASABKAQSEwoLaGVhZGVyQ291bnQYAiABKAQSIwoFZXJyb3IY6AcgASgLMhMu",
            "cHJvdG93aXJlLlJQQ0Vycm9yIh8KHUdldEJsb2NrRGFnSW5mb1JlcXVlc3RN",
            "ZXNzYWdlIpICCh5HZXRCbG9ja0RhZ0luZm9SZXNwb25zZU1lc3NhZ2USEwoL",
            "bmV0d29ya05hbWUYASABKAkSEgoKYmxvY2tDb3VudBgCIAEoBBITCgtoZWFk",
            "ZXJDb3VudBgDIAEoBBIRCgl0aXBIYXNoZXMYBCADKAkSEgoKZGlmZmljdWx0",
            "eRgFIAEoARIWCg5wYXN0TWVkaWFuVGltZRgGIAEoAxIbChN2aXJ0dWFsUGFy",
            "ZW50SGFzaGVzGAcgAygJEhgKEHBydW5pbmdQb2ludEhhc2gYCCABKAkSFwoP",
            "dmlydHVhbERhYVNjb3JlGAkgASgEEiMKBWVycm9yGOgHIAEoCzITLnByb3Rv",
            "d2lyZS5SUENFcnJvciJCCiVSZXNvbHZlRmluYWxpdHlDb25mbGljdFJlcXVl",
            "c3RNZXNzYWdlEhkKEWZpbmFsaXR5QmxvY2tIYXNoGAEgASgJIk0KJlJlc29s",
            "dmVGaW5hbGl0eUNvbmZsaWN0UmVzcG9uc2VNZXNzYWdlEiMKBWVycm9yGOgH",
            "IAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciInCiVOb3RpZnlGaW5hbGl0eUNv",
            "bmZsaWN0c1JlcXVlc3RNZXNzYWdlIk0KJk5vdGlmeUZpbmFsaXR5Q29uZmxp",
            "Y3RzUmVzcG9uc2VNZXNzYWdlEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2ly",
            "ZS5SUENFcnJvciJBCiNGaW5hbGl0eUNvbmZsaWN0Tm90aWZpY2F0aW9uTWVz",
            "c2FnZRIaChJ2aW9sYXRpbmdCbG9ja0hhc2gYASABKAkiSAorRmluYWxpdHlD",
            "b25mbGljdFJlc29sdmVkTm90aWZpY2F0aW9uTWVzc2FnZRIZChFmaW5hbGl0",
            "eUJsb2NrSGFzaBgBIAEoCSIYChZTaHV0RG93blJlcXVlc3RNZXNzYWdlIj4K",
            "F1NodXREb3duUmVzcG9uc2VNZXNzYWdlEiMKBWVycm9yGOgHIAEoCzITLnBy",
            "b3Rvd2lyZS5SUENFcnJvciJRChhHZXRIZWFkZXJzUmVxdWVzdE1lc3NhZ2US",
            "EQoJc3RhcnRIYXNoGAEgASgJEg0KBWxpbWl0GAIgASgEEhMKC2lzQXNjZW5k",
            "aW5nGAMgASgIIlEKGUdldEhlYWRlcnNSZXNwb25zZU1lc3NhZ2USDwoHaGVh",
            "ZGVycxgBIAMoCRIjCgVlcnJvchjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJy",
            "b3IiNQogTm90aWZ5VXR4b3NDaGFuZ2VkUmVxdWVzdE1lc3NhZ2USEQoJYWRk",
            "cmVzc2VzGAEgAygJIkgKIU5vdGlmeVV0eG9zQ2hhbmdlZFJlc3BvbnNlTWVz",
            "c2FnZRIjCgVlcnJvchjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IihQEK",
            "H1V0eG9zQ2hhbmdlZE5vdGlmaWNhdGlvbk1lc3NhZ2USLwoFYWRkZWQYASAD",
            "KAsyIC5wcm90b3dpcmUuVXR4b3NCeUFkZHJlc3Nlc0VudHJ5EjEKB3JlbW92",
            "ZWQYAiADKAsyIC5wcm90b3dpcmUuVXR4b3NCeUFkZHJlc3Nlc0VudHJ5In4K",
            "FVV0eG9zQnlBZGRyZXNzZXNFbnRyeRIPCgdhZGRyZXNzGAEgASgJEigKCG91",
            "dHBvaW50GAIgASgLMhYucHJvdG93aXJlLlJwY091dHBvaW50EioKCXV0eG9F",
            "bnRyeRgDIAEoCzIXLnByb3Rvd2lyZS5ScGNVdHhvRW50cnkiPAonU3RvcE5v",
            "dGlmeWluZ1V0eG9zQ2hhbmdlZFJlcXVlc3RNZXNzYWdlEhEKCWFkZHJlc3Nl",
            "cxgBIAMoCSJPCihTdG9wTm90aWZ5aW5nVXR4b3NDaGFuZ2VkUmVzcG9uc2VN",
            "ZXNzYWdlEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciI2",
            "CiFHZXRVdHhvc0J5QWRkcmVzc2VzUmVxdWVzdE1lc3NhZ2USEQoJYWRkcmVz",
            "c2VzGAEgAygJInwKIkdldFV0eG9zQnlBZGRyZXNzZXNSZXNwb25zZU1lc3Nh",
            "Z2USMQoHZW50cmllcxgBIAMoCzIgLnByb3Rvd2lyZS5VdHhvc0J5QWRkcmVz",
            "c2VzRW50cnkSIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQQ0Vycm9y",
            "IjQKIUdldEJhbGFuY2VCeUFkZHJlc3NSZXF1ZXN0TWVzc2FnZRIPCgdhZGRy",
            "ZXNzGAEgASgJIloKIkdldEJhbGFuY2VCeUFkZHJlc3NSZXNwb25zZU1lc3Nh",
            "Z2USDwoHYmFsYW5jZRgBIAEoBBIjCgVlcnJvchjoByABKAsyEy5wcm90b3dp",
            "cmUuUlBDRXJyb3IiOQokR2V0QmFsYW5jZXNCeUFkZHJlc3Nlc1JlcXVlc3RN",
            "ZXNzYWdlEhEKCWFkZHJlc3NlcxgBIAMoCSJfChZCYWxhbmNlc0J5QWRkcmVz",
            "c0VudHJ5Eg8KB2FkZHJlc3MYASABKAkSDwoHYmFsYW5jZRgCIAEoBBIjCgVl",
            "cnJvchjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IigAEKJUdldEJhbGFu",
            "Y2VzQnlBZGRyZXNzZXNSZXNwb25zZU1lc3NhZ2USMgoHZW50cmllcxgBIAMo",
            "CzIhLnByb3Rvd2lyZS5CYWxhbmNlc0J5QWRkcmVzc0VudHJ5EiMKBWVycm9y",
            "GOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciIxCi9HZXRWaXJ0dWFsU2Vs",
            "ZWN0ZWRQYXJlbnRCbHVlU2NvcmVSZXF1ZXN0TWVzc2FnZSJqCjBHZXRWaXJ0",
            "dWFsU2VsZWN0ZWRQYXJlbnRCbHVlU2NvcmVSZXNwb25zZU1lc3NhZ2USEQoJ",
            "Ymx1ZVNjb3JlGAEgASgEEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5S",
            "UENFcnJvciI7CjlOb3RpZnlWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRCbHVlU2Nv",
            "cmVDaGFuZ2VkUmVxdWVzdE1lc3NhZ2UiYQo6Tm90aWZ5VmlydHVhbFNlbGVj",
            "dGVkUGFyZW50Qmx1ZVNjb3JlQ2hhbmdlZFJlc3BvbnNlTWVzc2FnZRIjCgVl",
            "cnJvchjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IiYgo4VmlydHVhbFNl",
            "bGVjdGVkUGFyZW50Qmx1ZVNjb3JlQ2hhbmdlZE5vdGlmaWNhdGlvbk1lc3Nh",
            "Z2USJgoedmlydHVhbFNlbGVjdGVkUGFyZW50Qmx1ZVNjb3JlGAEgASgEIiwK",
            "Kk5vdGlmeVZpcnR1YWxEYWFTY29yZUNoYW5nZWRSZXF1ZXN0TWVzc2FnZSJS",
            "CitOb3RpZnlWaXJ0dWFsRGFhU2NvcmVDaGFuZ2VkUmVzcG9uc2VNZXNzYWdl",
            "EiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciJECilWaXJ0",
            "dWFsRGFhU2NvcmVDaGFuZ2VkTm90aWZpY2F0aW9uTWVzc2FnZRIXCg92aXJ0",
            "dWFsRGFhU2NvcmUYASABKAQiMQovTm90aWZ5UHJ1bmluZ1BvaW50VVRYT1Nl",
            "dE92ZXJyaWRlUmVxdWVzdE1lc3NhZ2UiVwowTm90aWZ5UHJ1bmluZ1BvaW50",
            "VVRYT1NldE92ZXJyaWRlUmVzcG9uc2VNZXNzYWdlEiMKBWVycm9yGOgHIAEo",
            "CzITLnByb3Rvd2lyZS5SUENFcnJvciIwCi5QcnVuaW5nUG9pbnRVVFhPU2V0",
            "T3ZlcnJpZGVOb3RpZmljYXRpb25NZXNzYWdlIjgKNlN0b3BOb3RpZnlpbmdQ",
            "cnVuaW5nUG9pbnRVVFhPU2V0T3ZlcnJpZGVSZXF1ZXN0TWVzc2FnZSJeCjdT",
            "dG9wTm90aWZ5aW5nUHJ1bmluZ1BvaW50VVRYT1NldE92ZXJyaWRlUmVzcG9u",
            "c2VNZXNzYWdlEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJv",
            "ciIfChFCYW5SZXF1ZXN0TWVzc2FnZRIKCgJpcBgBIAEoCSI5ChJCYW5SZXNw",
            "b25zZU1lc3NhZ2USIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJlLlJQQ0Vy",
            "cm9yIiEKE1VuYmFuUmVxdWVzdE1lc3NhZ2USCgoCaXAYASABKAkiOwoUVW5i",
            "YW5SZXNwb25zZU1lc3NhZ2USIwoFZXJyb3IY6AcgASgLMhMucHJvdG93aXJl",
            "LlJQQ0Vycm9yIhcKFUdldEluZm9SZXF1ZXN0TWVzc2FnZSKhAQoWR2V0SW5m",
            "b1Jlc3BvbnNlTWVzc2FnZRINCgVwMnBJZBgBIAEoCRITCgttZW1wb29sU2l6",
            "ZRgCIAEoBBIVCg1zZXJ2ZXJWZXJzaW9uGAMgASgJEhUKDWlzVXR4b0luZGV4",
            "ZWQYBCABKAgSEAoIaXNTeW5jZWQYBSABKAgSIwoFZXJyb3IY6AcgASgLMhMu",
            "cHJvdG93aXJlLlJQQ0Vycm9yIlUKLEVzdGltYXRlTmV0d29ya0hhc2hlc1Bl",
            "clNlY29uZFJlcXVlc3RNZXNzYWdlEhIKCndpbmRvd1NpemUYASABKA0SEQoJ",
            "c3RhcnRIYXNoGAIgASgJInQKLUVzdGltYXRlTmV0d29ya0hhc2hlc1BlclNl",
            "Y29uZFJlc3BvbnNlTWVzc2FnZRIeChZuZXR3b3JrSGFzaGVzUGVyU2Vjb25k",
            "GAEgASgEEiMKBWVycm9yGOgHIAEoCzITLnByb3Rvd2lyZS5SUENFcnJvciIm",
            "CiROb3RpZnlOZXdCbG9ja1RlbXBsYXRlUmVxdWVzdE1lc3NhZ2UiTAolTm90",
            "aWZ5TmV3QmxvY2tUZW1wbGF0ZVJlc3BvbnNlTWVzc2FnZRIjCgVlcnJvchjo",
            "ByABKAsyEy5wcm90b3dpcmUuUlBDRXJyb3IiJQojTmV3QmxvY2tUZW1wbGF0",
            "ZU5vdGlmaWNhdGlvbk1lc3NhZ2UifgoVTWVtcG9vbEVudHJ5QnlBZGRyZXNz",
            "Eg8KB2FkZHJlc3MYASABKAkSKAoHc2VuZGluZxgCIAMoCzIXLnByb3Rvd2ly",
            "ZS5NZW1wb29sRW50cnkSKgoJcmVjZWl2aW5nGAMgAygLMhcucHJvdG93aXJl",
            "Lk1lbXBvb2xFbnRyeSJ5CipHZXRNZW1wb29sRW50cmllc0J5QWRkcmVzc2Vz",
            "UmVxdWVzdE1lc3NhZ2USEQoJYWRkcmVzc2VzGAEgAygJEhkKEWluY2x1ZGVP",
            "cnBoYW5Qb29sGAIgASgIEh0KFWZpbHRlclRyYW5zYWN0aW9uUG9vbBgDIAEo",
            "CCKFAQorR2V0TWVtcG9vbEVudHJpZXNCeUFkZHJlc3Nlc1Jlc3BvbnNlTWVz",
            "c2FnZRIxCgdlbnRyaWVzGAEgAygLMiAucHJvdG93aXJlLk1lbXBvb2xFbnRy",
            "eUJ5QWRkcmVzcxIjCgVlcnJvchjoByABKAsyEy5wcm90b3dpcmUuUlBDRXJy",
            "b3IiHQobR2V0Q29pblN1cHBseVJlcXVlc3RNZXNzYWdlIm8KHEdldENvaW5T",
            "dXBwbHlSZXNwb25zZU1lc3NhZ2USEAoIbWF4U29tcGkYASABKAQSGAoQY2ly",
            "Y3VsYXRpbmdTb21waRgCIAEoBBIjCgVlcnJvchjoByABKAsyEy5wcm90b3dp",
            "cmUuUlBDRXJyb3JCJaoCIk1pbmluZ2NvcmUuQmxvY2tjaGFpbi5LYXNwYS5L",
            "YXNwYWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError), global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock.Parser, new[]{ "Header", "Transactions", "VerboseData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader.Parser, new[]{ "Version", "Parents", "HashMerkleRoot", "AcceptedIdMerkleRoot", "UtxoCommitment", "Timestamp", "Bits", "Nonce", "DaaScore", "BlueWork", "PruningPoint", "BlueScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents.Parser, new[]{ "ParentHashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData.Parser, new[]{ "Hash", "Difficulty", "SelectedParentHash", "TransactionIds", "IsHeaderOnly", "BlueScore", "ChildrenHashes", "MergeSetBluesHashes", "MergeSetRedsHashes", "IsChainBlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction.Parser, new[]{ "Version", "Inputs", "Outputs", "LockTime", "SubnetworkId", "Gas", "Payload", "VerboseData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput.Parser, new[]{ "PreviousOutpoint", "SignatureScript", "Sequence", "SigOpCount", "VerboseData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey.Parser, new[]{ "Version", "ScriptPublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput.Parser, new[]{ "Amount", "ScriptPublicKey", "VerboseData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint.Parser, new[]{ "TransactionId", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry.Parser, new[]{ "Amount", "ScriptPublicKey", "BlockDaaScore", "IsCoinbase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData.Parser, new[]{ "TransactionId", "Hash", "Mass", "BlockHash", "BlockTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData), global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData.Parser, new[]{ "ScriptPublicKeyType", "ScriptPublicKeyAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage.Parser, new[]{ "CurrentNetwork", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage.Parser, new[]{ "Block", "AllowNonDAABlocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Parser, new[]{ "RejectReason", "Error" }, null, new[]{ typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage.Parser, new[]{ "PayAddress", "ExtraData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage.Parser, new[]{ "Block", "IsSynced", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage.Parser, new[]{ "Addresses", "BannedAddresses", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage.Parser, new[]{ "Addr" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage.Parser, new[]{ "SelectedTipHash", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage.Parser, new[]{ "TxId", "IncludeOrphanPool", "FilterTransactionPool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage.Parser, new[]{ "Entry", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage.Parser, new[]{ "IncludeOrphanPool", "FilterTransactionPool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage.Parser, new[]{ "Entries", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry), global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry.Parser, new[]{ "Fee", "Transaction", "IsOrphan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage.Parser, new[]{ "Infos", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage.Parser, new[]{ "Id", "Address", "LastPingDuration", "IsOutbound", "TimeOffset", "UserAgent", "AdvertisedProtocolVersion", "TimeConnected", "IsIbdPeer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage.Parser, new[]{ "Address", "IsPermanent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage.Parser, new[]{ "Transaction", "AllowOrphan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage.Parser, new[]{ "TransactionId", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage.Parser, new[]{ "IncludeAcceptedTransactionIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage.Parser, new[]{ "RemovedChainBlockHashes", "AddedChainBlockHashes", "AcceptedTransactionIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage.Parser, new[]{ "Hash", "IncludeTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage.Parser, new[]{ "Block", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage.Parser, new[]{ "SubnetworkId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage.Parser, new[]{ "GasLimit", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage.Parser, new[]{ "StartHash", "IncludeAcceptedTransactionIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds), global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds.Parser, new[]{ "AcceptingBlockHash", "AcceptedTransactionIds_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage.Parser, new[]{ "RemovedChainBlockHashes", "AddedChainBlockHashes", "AcceptedTransactionIds", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage.Parser, new[]{ "LowHash", "IncludeBlocks", "IncludeTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage.Parser, new[]{ "BlockHashes", "Blocks", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage.Parser, new[]{ "BlockCount", "HeaderCount", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage.Parser, new[]{ "NetworkName", "BlockCount", "HeaderCount", "TipHashes", "Difficulty", "PastMedianTime", "VirtualParentHashes", "PruningPointHash", "VirtualDaaScore", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage.Parser, new[]{ "FinalityBlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage.Parser, new[]{ "ViolatingBlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage.Parser, new[]{ "FinalityBlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage.Parser, new[]{ "StartHash", "Limit", "IsAscending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage.Parser, new[]{ "Headers", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage.Parser, new[]{ "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage.Parser, new[]{ "Added", "Removed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry), global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry.Parser, new[]{ "Address", "Outpoint", "UtxoEntry" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage.Parser, new[]{ "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage.Parser, new[]{ "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage.Parser, new[]{ "Entries", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage.Parser, new[]{ "Balance", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage.Parser, new[]{ "Addresses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry), global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry.Parser, new[]{ "Address", "Balance", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage.Parser, new[]{ "Entries", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage.Parser, new[]{ "BlueScore", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage.Parser, new[]{ "VirtualSelectedParentBlueScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage.Parser, new[]{ "VirtualDaaScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage.Parser, new[]{ "Ip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage.Parser, new[]{ "Ip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage.Parser, new[]{ "P2PId", "MempoolSize", "ServerVersion", "IsUtxoIndexed", "IsSynced", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage.Parser, new[]{ "WindowSize", "StartHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage.Parser, new[]{ "NetworkHashesPerSecond", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage.Parser, new[]{ "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress), global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress.Parser, new[]{ "Address", "Sending", "Receiving" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage.Parser, new[]{ "Addresses", "IncludeOrphanPool", "FilterTransactionPool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage.Parser, new[]{ "Entries", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage.Parser, new[]{ "MaxSompi", "CirculatingSompi", "Error" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// RPCError represents a generic non-internal error.
  ///
  /// Receivers of any ResponseMessage are expected to check whether its error field is not null.
  /// </summary>
  public sealed partial class RPCError : pb::IMessage<RPCError> {
    private static readonly pb::MessageParser<RPCError> _parser = new pb::MessageParser<RPCError>(() => new RPCError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RPCError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCError(RPCError other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RPCError Clone() {
      return new RPCError(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RPCError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RPCError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RPCError other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcBlock : pb::IMessage<RpcBlock> {
    private static readonly pb::MessageParser<RpcBlock> _parser = new pb::MessageParser<RpcBlock>(() => new RpcBlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcBlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlock(RpcBlock other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      transactions_ = other.transactions_.Clone();
      verboseData_ = other.verboseData_ != null ? other.verboseData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlock Clone() {
      return new RpcBlock(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction> transactions_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "verboseData" field.</summary>
    public const int VerboseDataFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData verboseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData VerboseData {
      get { return verboseData_; }
      set {
        verboseData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcBlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcBlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      if (!object.Equals(VerboseData, other.VerboseData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (verboseData_ != null) hash ^= VerboseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (verboseData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VerboseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (verboseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerboseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcBlock other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader();
        }
        Header.MergeFrom(other.Header);
      }
      transactions_.Add(other.transactions_);
      if (other.verboseData_ != null) {
        if (verboseData_ == null) {
          VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData();
        }
        VerboseData.MergeFrom(other.VerboseData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 26: {
            if (verboseData_ == null) {
              VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockVerboseData();
            }
            input.ReadMessage(VerboseData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcBlockHeader : pb::IMessage<RpcBlockHeader> {
    private static readonly pb::MessageParser<RpcBlockHeader> _parser = new pb::MessageParser<RpcBlockHeader>(() => new RpcBlockHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcBlockHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockHeader(RpcBlockHeader other) : this() {
      version_ = other.version_;
      parents_ = other.parents_.Clone();
      hashMerkleRoot_ = other.hashMerkleRoot_;
      acceptedIdMerkleRoot_ = other.acceptedIdMerkleRoot_;
      utxoCommitment_ = other.utxoCommitment_;
      timestamp_ = other.timestamp_;
      bits_ = other.bits_;
      nonce_ = other.nonce_;
      daaScore_ = other.daaScore_;
      blueWork_ = other.blueWork_;
      pruningPoint_ = other.pruningPoint_;
      blueScore_ = other.blueScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockHeader Clone() {
      return new RpcBlockHeader(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "parents" field.</summary>
    public const int ParentsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents> _repeated_parents_codec
        = pb::FieldCodec.ForMessage(98, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents> parents_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlockLevelParents> Parents {
      get { return parents_; }
    }

    /// <summary>Field number for the "hashMerkleRoot" field.</summary>
    public const int HashMerkleRootFieldNumber = 3;
    private string hashMerkleRoot_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashMerkleRoot {
      get { return hashMerkleRoot_; }
      set {
        hashMerkleRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acceptedIdMerkleRoot" field.</summary>
    public const int AcceptedIdMerkleRootFieldNumber = 4;
    private string acceptedIdMerkleRoot_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptedIdMerkleRoot {
      get { return acceptedIdMerkleRoot_; }
      set {
        acceptedIdMerkleRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "utxoCommitment" field.</summary>
    public const int UtxoCommitmentFieldNumber = 5;
    private string utxoCommitment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UtxoCommitment {
      get { return utxoCommitment_; }
      set {
        utxoCommitment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 7;
    private uint bits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bits {
      get { return bits_; }
      set {
        bits_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 8;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "daaScore" field.</summary>
    public const int DaaScoreFieldNumber = 9;
    private ulong daaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DaaScore {
      get { return daaScore_; }
      set {
        daaScore_ = value;
      }
    }

    /// <summary>Field number for the "blueWork" field.</summary>
    public const int BlueWorkFieldNumber = 10;
    private string blueWork_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BlueWork {
      get { return blueWork_; }
      set {
        blueWork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pruningPoint" field.</summary>
    public const int PruningPointFieldNumber = 14;
    private string pruningPoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PruningPoint {
      get { return pruningPoint_; }
      set {
        pruningPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 13;
    private ulong blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcBlockHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcBlockHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!parents_.Equals(other.parents_)) return false;
      if (HashMerkleRoot != other.HashMerkleRoot) return false;
      if (AcceptedIdMerkleRoot != other.AcceptedIdMerkleRoot) return false;
      if (UtxoCommitment != other.UtxoCommitment) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Bits != other.Bits) return false;
      if (Nonce != other.Nonce) return false;
      if (DaaScore != other.DaaScore) return false;
      if (BlueWork != other.BlueWork) return false;
      if (PruningPoint != other.PruningPoint) return false;
      if (BlueScore != other.BlueScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= parents_.GetHashCode();
      if (HashMerkleRoot.Length != 0) hash ^= HashMerkleRoot.GetHashCode();
      if (AcceptedIdMerkleRoot.Length != 0) hash ^= AcceptedIdMerkleRoot.GetHashCode();
      if (UtxoCommitment.Length != 0) hash ^= UtxoCommitment.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Bits != 0) hash ^= Bits.GetHashCode();
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (DaaScore != 0UL) hash ^= DaaScore.GetHashCode();
      if (BlueWork.Length != 0) hash ^= BlueWork.GetHashCode();
      if (PruningPoint.Length != 0) hash ^= PruningPoint.GetHashCode();
      if (BlueScore != 0UL) hash ^= BlueScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HashMerkleRoot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HashMerkleRoot);
      }
      if (AcceptedIdMerkleRoot.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AcceptedIdMerkleRoot);
      }
      if (UtxoCommitment.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UtxoCommitment);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (Bits != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Bits);
      }
      if (Nonce != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Nonce);
      }
      if (DaaScore != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(DaaScore);
      }
      if (BlueWork.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BlueWork);
      }
      parents_.WriteTo(output, _repeated_parents_codec);
      if (BlueScore != 0UL) {
        output.WriteRawTag(104);
        output.WriteUInt64(BlueScore);
      }
      if (PruningPoint.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(PruningPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += parents_.CalculateSize(_repeated_parents_codec);
      if (HashMerkleRoot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashMerkleRoot);
      }
      if (AcceptedIdMerkleRoot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptedIdMerkleRoot);
      }
      if (UtxoCommitment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UtxoCommitment);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Bits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bits);
      }
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (DaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DaaScore);
      }
      if (BlueWork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlueWork);
      }
      if (PruningPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PruningPoint);
      }
      if (BlueScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlueScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcBlockHeader other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      parents_.Add(other.parents_);
      if (other.HashMerkleRoot.Length != 0) {
        HashMerkleRoot = other.HashMerkleRoot;
      }
      if (other.AcceptedIdMerkleRoot.Length != 0) {
        AcceptedIdMerkleRoot = other.AcceptedIdMerkleRoot;
      }
      if (other.UtxoCommitment.Length != 0) {
        UtxoCommitment = other.UtxoCommitment;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Bits != 0) {
        Bits = other.Bits;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      if (other.DaaScore != 0UL) {
        DaaScore = other.DaaScore;
      }
      if (other.BlueWork.Length != 0) {
        BlueWork = other.BlueWork;
      }
      if (other.PruningPoint.Length != 0) {
        PruningPoint = other.PruningPoint;
      }
      if (other.BlueScore != 0UL) {
        BlueScore = other.BlueScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 26: {
            HashMerkleRoot = input.ReadString();
            break;
          }
          case 34: {
            AcceptedIdMerkleRoot = input.ReadString();
            break;
          }
          case 42: {
            UtxoCommitment = input.ReadString();
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 56: {
            Bits = input.ReadUInt32();
            break;
          }
          case 64: {
            Nonce = input.ReadUInt64();
            break;
          }
          case 72: {
            DaaScore = input.ReadUInt64();
            break;
          }
          case 82: {
            BlueWork = input.ReadString();
            break;
          }
          case 98: {
            parents_.AddEntriesFrom(input, _repeated_parents_codec);
            break;
          }
          case 104: {
            BlueScore = input.ReadUInt64();
            break;
          }
          case 114: {
            PruningPoint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcBlockLevelParents : pb::IMessage<RpcBlockLevelParents> {
    private static readonly pb::MessageParser<RpcBlockLevelParents> _parser = new pb::MessageParser<RpcBlockLevelParents>(() => new RpcBlockLevelParents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcBlockLevelParents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockLevelParents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockLevelParents(RpcBlockLevelParents other) : this() {
      parentHashes_ = other.parentHashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockLevelParents Clone() {
      return new RpcBlockLevelParents(this);
    }

    /// <summary>Field number for the "parentHashes" field.</summary>
    public const int ParentHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_parentHashes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> parentHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ParentHashes {
      get { return parentHashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcBlockLevelParents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcBlockLevelParents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!parentHashes_.Equals(other.parentHashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= parentHashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      parentHashes_.WriteTo(output, _repeated_parentHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += parentHashes_.CalculateSize(_repeated_parentHashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcBlockLevelParents other) {
      if (other == null) {
        return;
      }
      parentHashes_.Add(other.parentHashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            parentHashes_.AddEntriesFrom(input, _repeated_parentHashes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcBlockVerboseData : pb::IMessage<RpcBlockVerboseData> {
    private static readonly pb::MessageParser<RpcBlockVerboseData> _parser = new pb::MessageParser<RpcBlockVerboseData>(() => new RpcBlockVerboseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcBlockVerboseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockVerboseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockVerboseData(RpcBlockVerboseData other) : this() {
      hash_ = other.hash_;
      difficulty_ = other.difficulty_;
      selectedParentHash_ = other.selectedParentHash_;
      transactionIds_ = other.transactionIds_.Clone();
      isHeaderOnly_ = other.isHeaderOnly_;
      blueScore_ = other.blueScore_;
      childrenHashes_ = other.childrenHashes_.Clone();
      mergeSetBluesHashes_ = other.mergeSetBluesHashes_.Clone();
      mergeSetRedsHashes_ = other.mergeSetRedsHashes_.Clone();
      isChainBlock_ = other.isChainBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcBlockVerboseData Clone() {
      return new RpcBlockVerboseData(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 11;
    private double difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "selectedParentHash" field.</summary>
    public const int SelectedParentHashFieldNumber = 13;
    private string selectedParentHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectedParentHash {
      get { return selectedParentHash_; }
      set {
        selectedParentHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transactionIds" field.</summary>
    public const int TransactionIdsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_transactionIds_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> transactionIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TransactionIds {
      get { return transactionIds_; }
    }

    /// <summary>Field number for the "isHeaderOnly" field.</summary>
    public const int IsHeaderOnlyFieldNumber = 15;
    private bool isHeaderOnly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHeaderOnly {
      get { return isHeaderOnly_; }
      set {
        isHeaderOnly_ = value;
      }
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 16;
    private ulong blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    /// <summary>Field number for the "childrenHashes" field.</summary>
    public const int ChildrenHashesFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _repeated_childrenHashes_codec
        = pb::FieldCodec.ForString(138);
    private readonly pbc::RepeatedField<string> childrenHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ChildrenHashes {
      get { return childrenHashes_; }
    }

    /// <summary>Field number for the "mergeSetBluesHashes" field.</summary>
    public const int MergeSetBluesHashesFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _repeated_mergeSetBluesHashes_codec
        = pb::FieldCodec.ForString(146);
    private readonly pbc::RepeatedField<string> mergeSetBluesHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MergeSetBluesHashes {
      get { return mergeSetBluesHashes_; }
    }

    /// <summary>Field number for the "mergeSetRedsHashes" field.</summary>
    public const int MergeSetRedsHashesFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_mergeSetRedsHashes_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> mergeSetRedsHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MergeSetRedsHashes {
      get { return mergeSetRedsHashes_; }
    }

    /// <summary>Field number for the "isChainBlock" field.</summary>
    public const int IsChainBlockFieldNumber = 20;
    private bool isChainBlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChainBlock {
      get { return isChainBlock_; }
      set {
        isChainBlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcBlockVerboseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcBlockVerboseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Difficulty, other.Difficulty)) return false;
      if (SelectedParentHash != other.SelectedParentHash) return false;
      if(!transactionIds_.Equals(other.transactionIds_)) return false;
      if (IsHeaderOnly != other.IsHeaderOnly) return false;
      if (BlueScore != other.BlueScore) return false;
      if(!childrenHashes_.Equals(other.childrenHashes_)) return false;
      if(!mergeSetBluesHashes_.Equals(other.mergeSetBluesHashes_)) return false;
      if(!mergeSetRedsHashes_.Equals(other.mergeSetRedsHashes_)) return false;
      if (IsChainBlock != other.IsChainBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Difficulty != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Difficulty);
      if (SelectedParentHash.Length != 0) hash ^= SelectedParentHash.GetHashCode();
      hash ^= transactionIds_.GetHashCode();
      if (IsHeaderOnly != false) hash ^= IsHeaderOnly.GetHashCode();
      if (BlueScore != 0UL) hash ^= BlueScore.GetHashCode();
      hash ^= childrenHashes_.GetHashCode();
      hash ^= mergeSetBluesHashes_.GetHashCode();
      hash ^= mergeSetRedsHashes_.GetHashCode();
      if (IsChainBlock != false) hash ^= IsChainBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
      if (Difficulty != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Difficulty);
      }
      if (SelectedParentHash.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SelectedParentHash);
      }
      transactionIds_.WriteTo(output, _repeated_transactionIds_codec);
      if (IsHeaderOnly != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsHeaderOnly);
      }
      if (BlueScore != 0UL) {
        output.WriteRawTag(128, 1);
        output.WriteUInt64(BlueScore);
      }
      childrenHashes_.WriteTo(output, _repeated_childrenHashes_codec);
      mergeSetBluesHashes_.WriteTo(output, _repeated_mergeSetBluesHashes_codec);
      mergeSetRedsHashes_.WriteTo(output, _repeated_mergeSetRedsHashes_codec);
      if (IsChainBlock != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(IsChainBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (Difficulty != 0D) {
        size += 1 + 8;
      }
      if (SelectedParentHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedParentHash);
      }
      size += transactionIds_.CalculateSize(_repeated_transactionIds_codec);
      if (IsHeaderOnly != false) {
        size += 1 + 1;
      }
      if (BlueScore != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(BlueScore);
      }
      size += childrenHashes_.CalculateSize(_repeated_childrenHashes_codec);
      size += mergeSetBluesHashes_.CalculateSize(_repeated_mergeSetBluesHashes_codec);
      size += mergeSetRedsHashes_.CalculateSize(_repeated_mergeSetRedsHashes_codec);
      if (IsChainBlock != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcBlockVerboseData other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Difficulty != 0D) {
        Difficulty = other.Difficulty;
      }
      if (other.SelectedParentHash.Length != 0) {
        SelectedParentHash = other.SelectedParentHash;
      }
      transactionIds_.Add(other.transactionIds_);
      if (other.IsHeaderOnly != false) {
        IsHeaderOnly = other.IsHeaderOnly;
      }
      if (other.BlueScore != 0UL) {
        BlueScore = other.BlueScore;
      }
      childrenHashes_.Add(other.childrenHashes_);
      mergeSetBluesHashes_.Add(other.mergeSetBluesHashes_);
      mergeSetRedsHashes_.Add(other.mergeSetRedsHashes_);
      if (other.IsChainBlock != false) {
        IsChainBlock = other.IsChainBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
          case 89: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 106: {
            SelectedParentHash = input.ReadString();
            break;
          }
          case 114: {
            transactionIds_.AddEntriesFrom(input, _repeated_transactionIds_codec);
            break;
          }
          case 120: {
            IsHeaderOnly = input.ReadBool();
            break;
          }
          case 128: {
            BlueScore = input.ReadUInt64();
            break;
          }
          case 138: {
            childrenHashes_.AddEntriesFrom(input, _repeated_childrenHashes_codec);
            break;
          }
          case 146: {
            mergeSetBluesHashes_.AddEntriesFrom(input, _repeated_mergeSetBluesHashes_codec);
            break;
          }
          case 154: {
            mergeSetRedsHashes_.AddEntriesFrom(input, _repeated_mergeSetRedsHashes_codec);
            break;
          }
          case 160: {
            IsChainBlock = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcTransaction : pb::IMessage<RpcTransaction> {
    private static readonly pb::MessageParser<RpcTransaction> _parser = new pb::MessageParser<RpcTransaction>(() => new RpcTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransaction(RpcTransaction other) : this() {
      version_ = other.version_;
      inputs_ = other.inputs_.Clone();
      outputs_ = other.outputs_.Clone();
      lockTime_ = other.lockTime_;
      subnetworkId_ = other.subnetworkId_;
      gas_ = other.gas_;
      payload_ = other.payload_;
      verboseData_ = other.verboseData_ != null ? other.verboseData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransaction Clone() {
      return new RpcTransaction(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput> inputs_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInput> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput> outputs_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutput> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "lockTime" field.</summary>
    public const int LockTimeFieldNumber = 4;
    private ulong lockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "subnetworkId" field.</summary>
    public const int SubnetworkIdFieldNumber = 5;
    private string subnetworkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetworkId {
      get { return subnetworkId_; }
      set {
        subnetworkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gas" field.</summary>
    public const int GasFieldNumber = 6;
    private ulong gas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gas {
      get { return gas_; }
      set {
        gas_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 8;
    private string payload_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verboseData" field.</summary>
    public const int VerboseDataFieldNumber = 9;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData verboseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData VerboseData {
      get { return verboseData_; }
      set {
        verboseData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if (LockTime != other.LockTime) return false;
      if (SubnetworkId != other.SubnetworkId) return false;
      if (Gas != other.Gas) return false;
      if (Payload != other.Payload) return false;
      if (!object.Equals(VerboseData, other.VerboseData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= inputs_.GetHashCode();
      hash ^= outputs_.GetHashCode();
      if (LockTime != 0UL) hash ^= LockTime.GetHashCode();
      if (SubnetworkId.Length != 0) hash ^= SubnetworkId.GetHashCode();
      if (Gas != 0UL) hash ^= Gas.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (verboseData_ != null) hash ^= VerboseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (LockTime != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(LockTime);
      }
      if (SubnetworkId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubnetworkId);
      }
      if (Gas != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Gas);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Payload);
      }
      if (verboseData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VerboseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (LockTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LockTime);
      }
      if (SubnetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetworkId);
      }
      if (Gas != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gas);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Payload);
      }
      if (verboseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerboseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransaction other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      inputs_.Add(other.inputs_);
      outputs_.Add(other.outputs_);
      if (other.LockTime != 0UL) {
        LockTime = other.LockTime;
      }
      if (other.SubnetworkId.Length != 0) {
        SubnetworkId = other.SubnetworkId;
      }
      if (other.Gas != 0UL) {
        Gas = other.Gas;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      if (other.verboseData_ != null) {
        if (verboseData_ == null) {
          VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData();
        }
        VerboseData.MergeFrom(other.VerboseData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 26: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 32: {
            LockTime = input.ReadUInt64();
            break;
          }
          case 42: {
            SubnetworkId = input.ReadString();
            break;
          }
          case 48: {
            Gas = input.ReadUInt64();
            break;
          }
          case 66: {
            Payload = input.ReadString();
            break;
          }
          case 74: {
            if (verboseData_ == null) {
              VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionVerboseData();
            }
            input.ReadMessage(VerboseData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcTransactionInput : pb::IMessage<RpcTransactionInput> {
    private static readonly pb::MessageParser<RpcTransactionInput> _parser = new pb::MessageParser<RpcTransactionInput>(() => new RpcTransactionInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransactionInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInput(RpcTransactionInput other) : this() {
      previousOutpoint_ = other.previousOutpoint_ != null ? other.previousOutpoint_.Clone() : null;
      signatureScript_ = other.signatureScript_;
      sequence_ = other.sequence_;
      sigOpCount_ = other.sigOpCount_;
      verboseData_ = other.verboseData_ != null ? other.verboseData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInput Clone() {
      return new RpcTransactionInput(this);
    }

    /// <summary>Field number for the "previousOutpoint" field.</summary>
    public const int PreviousOutpointFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint previousOutpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint PreviousOutpoint {
      get { return previousOutpoint_; }
      set {
        previousOutpoint_ = value;
      }
    }

    /// <summary>Field number for the "signatureScript" field.</summary>
    public const int SignatureScriptFieldNumber = 2;
    private string signatureScript_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignatureScript {
      get { return signatureScript_; }
      set {
        signatureScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "sigOpCount" field.</summary>
    public const int SigOpCountFieldNumber = 5;
    private uint sigOpCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SigOpCount {
      get { return sigOpCount_; }
      set {
        sigOpCount_ = value;
      }
    }

    /// <summary>Field number for the "verboseData" field.</summary>
    public const int VerboseDataFieldNumber = 4;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData verboseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData VerboseData {
      get { return verboseData_; }
      set {
        verboseData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransactionInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransactionInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PreviousOutpoint, other.PreviousOutpoint)) return false;
      if (SignatureScript != other.SignatureScript) return false;
      if (Sequence != other.Sequence) return false;
      if (SigOpCount != other.SigOpCount) return false;
      if (!object.Equals(VerboseData, other.VerboseData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (previousOutpoint_ != null) hash ^= PreviousOutpoint.GetHashCode();
      if (SignatureScript.Length != 0) hash ^= SignatureScript.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (SigOpCount != 0) hash ^= SigOpCount.GetHashCode();
      if (verboseData_ != null) hash ^= VerboseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (previousOutpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PreviousOutpoint);
      }
      if (SignatureScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SignatureScript);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (verboseData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VerboseData);
      }
      if (SigOpCount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(SigOpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (previousOutpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousOutpoint);
      }
      if (SignatureScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignatureScript);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (SigOpCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SigOpCount);
      }
      if (verboseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerboseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransactionInput other) {
      if (other == null) {
        return;
      }
      if (other.previousOutpoint_ != null) {
        if (previousOutpoint_ == null) {
          PreviousOutpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint();
        }
        PreviousOutpoint.MergeFrom(other.PreviousOutpoint);
      }
      if (other.SignatureScript.Length != 0) {
        SignatureScript = other.SignatureScript;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.SigOpCount != 0) {
        SigOpCount = other.SigOpCount;
      }
      if (other.verboseData_ != null) {
        if (verboseData_ == null) {
          VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData();
        }
        VerboseData.MergeFrom(other.VerboseData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (previousOutpoint_ == null) {
              PreviousOutpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint();
            }
            input.ReadMessage(PreviousOutpoint);
            break;
          }
          case 18: {
            SignatureScript = input.ReadString();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 34: {
            if (verboseData_ == null) {
              VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionInputVerboseData();
            }
            input.ReadMessage(VerboseData);
            break;
          }
          case 40: {
            SigOpCount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcScriptPublicKey : pb::IMessage<RpcScriptPublicKey> {
    private static readonly pb::MessageParser<RpcScriptPublicKey> _parser = new pb::MessageParser<RpcScriptPublicKey>(() => new RpcScriptPublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcScriptPublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcScriptPublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcScriptPublicKey(RpcScriptPublicKey other) : this() {
      version_ = other.version_;
      scriptPublicKey_ = other.scriptPublicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcScriptPublicKey Clone() {
      return new RpcScriptPublicKey(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private string scriptPublicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcScriptPublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcScriptPublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (ScriptPublicKey != other.ScriptPublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (ScriptPublicKey.Length != 0) hash ^= ScriptPublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (ScriptPublicKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ScriptPublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (ScriptPublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptPublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcScriptPublicKey other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.ScriptPublicKey.Length != 0) {
        ScriptPublicKey = other.ScriptPublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            ScriptPublicKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcTransactionOutput : pb::IMessage<RpcTransactionOutput> {
    private static readonly pb::MessageParser<RpcTransactionOutput> _parser = new pb::MessageParser<RpcTransactionOutput>(() => new RpcTransactionOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransactionOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutput(RpcTransactionOutput other) : this() {
      amount_ = other.amount_;
      scriptPublicKey_ = other.scriptPublicKey_ != null ? other.scriptPublicKey_.Clone() : null;
      verboseData_ = other.verboseData_ != null ? other.verboseData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutput Clone() {
      return new RpcTransactionOutput(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey scriptPublicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = value;
      }
    }

    /// <summary>Field number for the "verboseData" field.</summary>
    public const int VerboseDataFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData verboseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData VerboseData {
      get { return verboseData_; }
      set {
        verboseData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransactionOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransactionOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (!object.Equals(ScriptPublicKey, other.ScriptPublicKey)) return false;
      if (!object.Equals(VerboseData, other.VerboseData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (scriptPublicKey_ != null) hash ^= ScriptPublicKey.GetHashCode();
      if (verboseData_ != null) hash ^= VerboseData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Amount);
      }
      if (scriptPublicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScriptPublicKey);
      }
      if (verboseData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VerboseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (scriptPublicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScriptPublicKey);
      }
      if (verboseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VerboseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransactionOutput other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      if (other.scriptPublicKey_ != null) {
        if (scriptPublicKey_ == null) {
          ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey();
        }
        ScriptPublicKey.MergeFrom(other.ScriptPublicKey);
      }
      if (other.verboseData_ != null) {
        if (verboseData_ == null) {
          VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData();
        }
        VerboseData.MergeFrom(other.VerboseData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadUInt64();
            break;
          }
          case 18: {
            if (scriptPublicKey_ == null) {
              ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey();
            }
            input.ReadMessage(ScriptPublicKey);
            break;
          }
          case 26: {
            if (verboseData_ == null) {
              VerboseData = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransactionOutputVerboseData();
            }
            input.ReadMessage(VerboseData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcOutpoint : pb::IMessage<RpcOutpoint> {
    private static readonly pb::MessageParser<RpcOutpoint> _parser = new pb::MessageParser<RpcOutpoint>(() => new RpcOutpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcOutpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcOutpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcOutpoint(RpcOutpoint other) : this() {
      transactionId_ = other.transactionId_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcOutpoint Clone() {
      return new RpcOutpoint(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcOutpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcOutpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcOutpoint other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcUtxoEntry : pb::IMessage<RpcUtxoEntry> {
    private static readonly pb::MessageParser<RpcUtxoEntry> _parser = new pb::MessageParser<RpcUtxoEntry>(() => new RpcUtxoEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcUtxoEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcUtxoEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcUtxoEntry(RpcUtxoEntry other) : this() {
      amount_ = other.amount_;
      scriptPublicKey_ = other.scriptPublicKey_ != null ? other.scriptPublicKey_.Clone() : null;
      blockDaaScore_ = other.blockDaaScore_;
      isCoinbase_ = other.isCoinbase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcUtxoEntry Clone() {
      return new RpcUtxoEntry(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private ulong amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "scriptPublicKey" field.</summary>
    public const int ScriptPublicKeyFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey scriptPublicKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey ScriptPublicKey {
      get { return scriptPublicKey_; }
      set {
        scriptPublicKey_ = value;
      }
    }

    /// <summary>Field number for the "blockDaaScore" field.</summary>
    public const int BlockDaaScoreFieldNumber = 3;
    private ulong blockDaaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockDaaScore {
      get { return blockDaaScore_; }
      set {
        blockDaaScore_ = value;
      }
    }

    /// <summary>Field number for the "isCoinbase" field.</summary>
    public const int IsCoinbaseFieldNumber = 4;
    private bool isCoinbase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCoinbase {
      get { return isCoinbase_; }
      set {
        isCoinbase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcUtxoEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcUtxoEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (!object.Equals(ScriptPublicKey, other.ScriptPublicKey)) return false;
      if (BlockDaaScore != other.BlockDaaScore) return false;
      if (IsCoinbase != other.IsCoinbase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0UL) hash ^= Amount.GetHashCode();
      if (scriptPublicKey_ != null) hash ^= ScriptPublicKey.GetHashCode();
      if (BlockDaaScore != 0UL) hash ^= BlockDaaScore.GetHashCode();
      if (IsCoinbase != false) hash ^= IsCoinbase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Amount);
      }
      if (scriptPublicKey_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Amount);
      }
      if (scriptPublicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScriptPublicKey);
      }
      if (BlockDaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockDaaScore);
      }
      if (IsCoinbase != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcUtxoEntry other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0UL) {
        Amount = other.Amount;
      }
      if (other.scriptPublicKey_ != null) {
        if (scriptPublicKey_ == null) {
          ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey();
        }
        ScriptPublicKey.MergeFrom(other.ScriptPublicKey);
      }
      if (other.BlockDaaScore != 0UL) {
        BlockDaaScore = other.BlockDaaScore;
      }
      if (other.IsCoinbase != false) {
        IsCoinbase = other.IsCoinbase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadUInt64();
            break;
          }
          case 18: {
            if (scriptPublicKey_ == null) {
              ScriptPublicKey = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcScriptPublicKey();
            }
            input.ReadMessage(ScriptPublicKey);
            break;
          }
          case 24: {
            BlockDaaScore = input.ReadUInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcTransactionVerboseData : pb::IMessage<RpcTransactionVerboseData> {
    private static readonly pb::MessageParser<RpcTransactionVerboseData> _parser = new pb::MessageParser<RpcTransactionVerboseData>(() => new RpcTransactionVerboseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransactionVerboseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionVerboseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionVerboseData(RpcTransactionVerboseData other) : this() {
      transactionId_ = other.transactionId_;
      hash_ = other.hash_;
      mass_ = other.mass_;
      blockHash_ = other.blockHash_;
      blockTime_ = other.blockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionVerboseData Clone() {
      return new RpcTransactionVerboseData(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 2;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mass" field.</summary>
    public const int MassFieldNumber = 4;
    private ulong mass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Mass {
      get { return mass_; }
      set {
        mass_ = value;
      }
    }

    /// <summary>Field number for the "blockHash" field.</summary>
    public const int BlockHashFieldNumber = 12;
    private string blockHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blockTime" field.</summary>
    public const int BlockTimeFieldNumber = 14;
    private ulong blockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockTime {
      get { return blockTime_; }
      set {
        blockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransactionVerboseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransactionVerboseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (Hash != other.Hash) return false;
      if (Mass != other.Mass) return false;
      if (BlockHash != other.BlockHash) return false;
      if (BlockTime != other.BlockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Mass != 0UL) hash ^= Mass.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (BlockTime != 0UL) hash ^= BlockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hash);
      }
      if (Mass != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Mass);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(BlockHash);
      }
      if (BlockTime != 0UL) {
        output.WriteRawTag(112);
        output.WriteUInt64(BlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (Mass != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Mass);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlockHash);
      }
      if (BlockTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransactionVerboseData other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Mass != 0UL) {
        Mass = other.Mass;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      if (other.BlockTime != 0UL) {
        BlockTime = other.BlockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 18: {
            Hash = input.ReadString();
            break;
          }
          case 32: {
            Mass = input.ReadUInt64();
            break;
          }
          case 98: {
            BlockHash = input.ReadString();
            break;
          }
          case 112: {
            BlockTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RpcTransactionInputVerboseData : pb::IMessage<RpcTransactionInputVerboseData> {
    private static readonly pb::MessageParser<RpcTransactionInputVerboseData> _parser = new pb::MessageParser<RpcTransactionInputVerboseData>(() => new RpcTransactionInputVerboseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransactionInputVerboseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInputVerboseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInputVerboseData(RpcTransactionInputVerboseData other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionInputVerboseData Clone() {
      return new RpcTransactionInputVerboseData(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransactionInputVerboseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransactionInputVerboseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransactionInputVerboseData other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RpcTransactionOutputVerboseData : pb::IMessage<RpcTransactionOutputVerboseData> {
    private static readonly pb::MessageParser<RpcTransactionOutputVerboseData> _parser = new pb::MessageParser<RpcTransactionOutputVerboseData>(() => new RpcTransactionOutputVerboseData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RpcTransactionOutputVerboseData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutputVerboseData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutputVerboseData(RpcTransactionOutputVerboseData other) : this() {
      scriptPublicKeyType_ = other.scriptPublicKeyType_;
      scriptPublicKeyAddress_ = other.scriptPublicKeyAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RpcTransactionOutputVerboseData Clone() {
      return new RpcTransactionOutputVerboseData(this);
    }

    /// <summary>Field number for the "scriptPublicKeyType" field.</summary>
    public const int ScriptPublicKeyTypeFieldNumber = 5;
    private string scriptPublicKeyType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptPublicKeyType {
      get { return scriptPublicKeyType_; }
      set {
        scriptPublicKeyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scriptPublicKeyAddress" field.</summary>
    public const int ScriptPublicKeyAddressFieldNumber = 6;
    private string scriptPublicKeyAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ScriptPublicKeyAddress {
      get { return scriptPublicKeyAddress_; }
      set {
        scriptPublicKeyAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RpcTransactionOutputVerboseData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RpcTransactionOutputVerboseData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScriptPublicKeyType != other.ScriptPublicKeyType) return false;
      if (ScriptPublicKeyAddress != other.ScriptPublicKeyAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScriptPublicKeyType.Length != 0) hash ^= ScriptPublicKeyType.GetHashCode();
      if (ScriptPublicKeyAddress.Length != 0) hash ^= ScriptPublicKeyAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ScriptPublicKeyType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ScriptPublicKeyType);
      }
      if (ScriptPublicKeyAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ScriptPublicKeyAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScriptPublicKeyType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptPublicKeyType);
      }
      if (ScriptPublicKeyAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptPublicKeyAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RpcTransactionOutputVerboseData other) {
      if (other == null) {
        return;
      }
      if (other.ScriptPublicKeyType.Length != 0) {
        ScriptPublicKeyType = other.ScriptPublicKeyType;
      }
      if (other.ScriptPublicKeyAddress.Length != 0) {
        ScriptPublicKeyAddress = other.ScriptPublicKeyAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            ScriptPublicKeyType = input.ReadString();
            break;
          }
          case 50: {
            ScriptPublicKeyAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetCurrentNetworkRequestMessage requests the network kaspad is currently running against.
  ///
  /// Possible networks are: Mainnet, Testnet, Simnet, Devnet
  /// </summary>
  public sealed partial class GetCurrentNetworkRequestMessage : pb::IMessage<GetCurrentNetworkRequestMessage> {
    private static readonly pb::MessageParser<GetCurrentNetworkRequestMessage> _parser = new pb::MessageParser<GetCurrentNetworkRequestMessage>(() => new GetCurrentNetworkRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentNetworkRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkRequestMessage(GetCurrentNetworkRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkRequestMessage Clone() {
      return new GetCurrentNetworkRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentNetworkRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentNetworkRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentNetworkRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetCurrentNetworkResponseMessage : pb::IMessage<GetCurrentNetworkResponseMessage> {
    private static readonly pb::MessageParser<GetCurrentNetworkResponseMessage> _parser = new pb::MessageParser<GetCurrentNetworkResponseMessage>(() => new GetCurrentNetworkResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCurrentNetworkResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkResponseMessage(GetCurrentNetworkResponseMessage other) : this() {
      currentNetwork_ = other.currentNetwork_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCurrentNetworkResponseMessage Clone() {
      return new GetCurrentNetworkResponseMessage(this);
    }

    /// <summary>Field number for the "currentNetwork" field.</summary>
    public const int CurrentNetworkFieldNumber = 1;
    private string currentNetwork_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentNetwork {
      get { return currentNetwork_; }
      set {
        currentNetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCurrentNetworkResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCurrentNetworkResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentNetwork != other.CurrentNetwork) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentNetwork.Length != 0) hash ^= CurrentNetwork.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentNetwork.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentNetwork);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentNetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentNetwork);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCurrentNetworkResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.CurrentNetwork.Length != 0) {
        CurrentNetwork = other.CurrentNetwork;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrentNetwork = input.ReadString();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SubmitBlockRequestMessage requests to submit a block into the DAG.
  /// Blocks are generally expected to have been generated using the getBlockTemplate call.
  ///
  /// See: GetBlockTemplateRequestMessage
  /// </summary>
  public sealed partial class SubmitBlockRequestMessage : pb::IMessage<SubmitBlockRequestMessage> {
    private static readonly pb::MessageParser<SubmitBlockRequestMessage> _parser = new pb::MessageParser<SubmitBlockRequestMessage>(() => new SubmitBlockRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitBlockRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockRequestMessage(SubmitBlockRequestMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      allowNonDAABlocks_ = other.allowNonDAABlocks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockRequestMessage Clone() {
      return new SubmitBlockRequestMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "allowNonDAABlocks" field.</summary>
    public const int AllowNonDAABlocksFieldNumber = 3;
    private bool allowNonDAABlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowNonDAABlocks {
      get { return allowNonDAABlocks_; }
      set {
        allowNonDAABlocks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitBlockRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitBlockRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if (AllowNonDAABlocks != other.AllowNonDAABlocks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (AllowNonDAABlocks != false) hash ^= AllowNonDAABlocks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (AllowNonDAABlocks != false) {
        output.WriteRawTag(24);
        output.WriteBool(AllowNonDAABlocks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (AllowNonDAABlocks != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitBlockRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
        }
        Block.MergeFrom(other.Block);
      }
      if (other.AllowNonDAABlocks != false) {
        AllowNonDAABlocks = other.AllowNonDAABlocks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
            }
            input.ReadMessage(Block);
            break;
          }
          case 24: {
            AllowNonDAABlocks = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitBlockResponseMessage : pb::IMessage<SubmitBlockResponseMessage> {
    private static readonly pb::MessageParser<SubmitBlockResponseMessage> _parser = new pb::MessageParser<SubmitBlockResponseMessage>(() => new SubmitBlockResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitBlockResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockResponseMessage(SubmitBlockResponseMessage other) : this() {
      rejectReason_ = other.rejectReason_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitBlockResponseMessage Clone() {
      return new SubmitBlockResponseMessage(this);
    }

    /// <summary>Field number for the "rejectReason" field.</summary>
    public const int RejectReasonFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason rejectReason_ = global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason RejectReason {
      get { return rejectReason_; }
      set {
        rejectReason_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitBlockResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitBlockResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RejectReason != other.RejectReason) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RejectReason != global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason.None) hash ^= RejectReason.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RejectReason != global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RejectReason);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RejectReason != global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RejectReason);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitBlockResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.RejectReason != global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason.None) {
        RejectReason = other.RejectReason;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RejectReason = (global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage.Types.RejectReason) input.ReadEnum();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SubmitBlockResponseMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RejectReason {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("BLOCK_INVALID")] BlockInvalid = 1,
        [pbr::OriginalName("IS_IN_IBD")] IsInIbd = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// GetBlockTemplateRequestMessage requests a current block template.
  /// Callers are expected to solve the block template and submit it using the submitBlock call
  ///
  /// See: SubmitBlockRequestMessage
  /// </summary>
  public sealed partial class GetBlockTemplateRequestMessage : pb::IMessage<GetBlockTemplateRequestMessage> {
    private static readonly pb::MessageParser<GetBlockTemplateRequestMessage> _parser = new pb::MessageParser<GetBlockTemplateRequestMessage>(() => new GetBlockTemplateRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockTemplateRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateRequestMessage(GetBlockTemplateRequestMessage other) : this() {
      payAddress_ = other.payAddress_;
      extraData_ = other.extraData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateRequestMessage Clone() {
      return new GetBlockTemplateRequestMessage(this);
    }

    /// <summary>Field number for the "payAddress" field.</summary>
    public const int PayAddressFieldNumber = 1;
    private string payAddress_ = "";
    /// <summary>
    /// Which kaspa address should the coinbase block reward transaction pay into
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayAddress {
      get { return payAddress_; }
      set {
        payAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extraData" field.</summary>
    public const int ExtraDataFieldNumber = 2;
    private string extraData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraData {
      get { return extraData_; }
      set {
        extraData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockTemplateRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockTemplateRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PayAddress != other.PayAddress) return false;
      if (ExtraData != other.ExtraData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PayAddress.Length != 0) hash ^= PayAddress.GetHashCode();
      if (ExtraData.Length != 0) hash ^= ExtraData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PayAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PayAddress);
      }
      if (ExtraData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExtraData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PayAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayAddress);
      }
      if (ExtraData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockTemplateRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.PayAddress.Length != 0) {
        PayAddress = other.PayAddress;
      }
      if (other.ExtraData.Length != 0) {
        ExtraData = other.ExtraData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PayAddress = input.ReadString();
            break;
          }
          case 18: {
            ExtraData = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlockTemplateResponseMessage : pb::IMessage<GetBlockTemplateResponseMessage> {
    private static readonly pb::MessageParser<GetBlockTemplateResponseMessage> _parser = new pb::MessageParser<GetBlockTemplateResponseMessage>(() => new GetBlockTemplateResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockTemplateResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateResponseMessage(GetBlockTemplateResponseMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      isSynced_ = other.isSynced_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockTemplateResponseMessage Clone() {
      return new GetBlockTemplateResponseMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "isSynced" field.</summary>
    public const int IsSyncedFieldNumber = 2;
    private bool isSynced_;
    /// <summary>
    /// Whether kaspad thinks that it's synced.
    /// Callers are discouraged (but not forbidden) from solving blocks when kaspad is not synced.
    /// That is because when kaspad isn't in sync with the rest of the network there's a high
    /// chance the block will never be accepted, thus the solving effort would have been wasted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSynced {
      get { return isSynced_; }
      set {
        isSynced_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockTemplateResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockTemplateResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if (IsSynced != other.IsSynced) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (IsSynced != false) hash ^= IsSynced.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSynced != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSynced);
      }
      if (block_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Block);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (IsSynced != false) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockTemplateResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
        }
        Block.MergeFrom(other.Block);
      }
      if (other.IsSynced != false) {
        IsSynced = other.IsSynced;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            IsSynced = input.ReadBool();
            break;
          }
          case 26: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
            }
            input.ReadMessage(Block);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyBlockAddedRequestMessage registers this connection for blockAdded notifications.
  ///
  /// See: BlockAddedNotificationMessage
  /// </summary>
  public sealed partial class NotifyBlockAddedRequestMessage : pb::IMessage<NotifyBlockAddedRequestMessage> {
    private static readonly pb::MessageParser<NotifyBlockAddedRequestMessage> _parser = new pb::MessageParser<NotifyBlockAddedRequestMessage>(() => new NotifyBlockAddedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyBlockAddedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedRequestMessage(NotifyBlockAddedRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedRequestMessage Clone() {
      return new NotifyBlockAddedRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyBlockAddedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyBlockAddedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyBlockAddedRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyBlockAddedResponseMessage : pb::IMessage<NotifyBlockAddedResponseMessage> {
    private static readonly pb::MessageParser<NotifyBlockAddedResponseMessage> _parser = new pb::MessageParser<NotifyBlockAddedResponseMessage>(() => new NotifyBlockAddedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyBlockAddedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedResponseMessage(NotifyBlockAddedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyBlockAddedResponseMessage Clone() {
      return new NotifyBlockAddedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyBlockAddedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyBlockAddedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyBlockAddedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// BlockAddedNotificationMessage is sent whenever a blocks has been added (NOT accepted)
  /// into the DAG.
  ///
  /// See: NotifyBlockAddedRequestMessage
  /// </summary>
  public sealed partial class BlockAddedNotificationMessage : pb::IMessage<BlockAddedNotificationMessage> {
    private static readonly pb::MessageParser<BlockAddedNotificationMessage> _parser = new pb::MessageParser<BlockAddedNotificationMessage>(() => new BlockAddedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockAddedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAddedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAddedNotificationMessage(BlockAddedNotificationMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockAddedNotificationMessage Clone() {
      return new BlockAddedNotificationMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockAddedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockAddedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockAddedNotificationMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetPeerAddressesRequestMessage requests the list of known kaspad addresses in the
  /// current network. (mainnet, testnet, etc.)
  /// </summary>
  public sealed partial class GetPeerAddressesRequestMessage : pb::IMessage<GetPeerAddressesRequestMessage> {
    private static readonly pb::MessageParser<GetPeerAddressesRequestMessage> _parser = new pb::MessageParser<GetPeerAddressesRequestMessage>(() => new GetPeerAddressesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPeerAddressesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesRequestMessage(GetPeerAddressesRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesRequestMessage Clone() {
      return new GetPeerAddressesRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPeerAddressesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPeerAddressesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPeerAddressesRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetPeerAddressesResponseMessage : pb::IMessage<GetPeerAddressesResponseMessage> {
    private static readonly pb::MessageParser<GetPeerAddressesResponseMessage> _parser = new pb::MessageParser<GetPeerAddressesResponseMessage>(() => new GetPeerAddressesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPeerAddressesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesResponseMessage(GetPeerAddressesResponseMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      bannedAddresses_ = other.bannedAddresses_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesResponseMessage Clone() {
      return new GetPeerAddressesResponseMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> _repeated_addresses_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> addresses_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> Addresses {
      get { return addresses_; }
    }

    /// <summary>Field number for the "bannedAddresses" field.</summary>
    public const int BannedAddressesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> _repeated_bannedAddresses_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> bannedAddresses_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesKnownAddressMessage> BannedAddresses {
      get { return bannedAddresses_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPeerAddressesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPeerAddressesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      if(!bannedAddresses_.Equals(other.bannedAddresses_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      hash ^= bannedAddresses_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      bannedAddresses_.WriteTo(output, _repeated_bannedAddresses_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      size += bannedAddresses_.CalculateSize(_repeated_bannedAddresses_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPeerAddressesResponseMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      bannedAddresses_.Add(other.bannedAddresses_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
          case 18: {
            bannedAddresses_.AddEntriesFrom(input, _repeated_bannedAddresses_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetPeerAddressesKnownAddressMessage : pb::IMessage<GetPeerAddressesKnownAddressMessage> {
    private static readonly pb::MessageParser<GetPeerAddressesKnownAddressMessage> _parser = new pb::MessageParser<GetPeerAddressesKnownAddressMessage>(() => new GetPeerAddressesKnownAddressMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPeerAddressesKnownAddressMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesKnownAddressMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesKnownAddressMessage(GetPeerAddressesKnownAddressMessage other) : this() {
      addr_ = other.addr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPeerAddressesKnownAddressMessage Clone() {
      return new GetPeerAddressesKnownAddressMessage(this);
    }

    /// <summary>Field number for the "Addr" field.</summary>
    public const int AddrFieldNumber = 1;
    private string addr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Addr {
      get { return addr_; }
      set {
        addr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPeerAddressesKnownAddressMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPeerAddressesKnownAddressMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Addr != other.Addr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Addr.Length != 0) hash ^= Addr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Addr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Addr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Addr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Addr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPeerAddressesKnownAddressMessage other) {
      if (other == null) {
        return;
      }
      if (other.Addr.Length != 0) {
        Addr = other.Addr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Addr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetSelectedTipHashRequestMessage requests the hash of the current virtual's
  /// selected parent.
  /// </summary>
  public sealed partial class GetSelectedTipHashRequestMessage : pb::IMessage<GetSelectedTipHashRequestMessage> {
    private static readonly pb::MessageParser<GetSelectedTipHashRequestMessage> _parser = new pb::MessageParser<GetSelectedTipHashRequestMessage>(() => new GetSelectedTipHashRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSelectedTipHashRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashRequestMessage(GetSelectedTipHashRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashRequestMessage Clone() {
      return new GetSelectedTipHashRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSelectedTipHashRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSelectedTipHashRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSelectedTipHashRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetSelectedTipHashResponseMessage : pb::IMessage<GetSelectedTipHashResponseMessage> {
    private static readonly pb::MessageParser<GetSelectedTipHashResponseMessage> _parser = new pb::MessageParser<GetSelectedTipHashResponseMessage>(() => new GetSelectedTipHashResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSelectedTipHashResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashResponseMessage(GetSelectedTipHashResponseMessage other) : this() {
      selectedTipHash_ = other.selectedTipHash_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSelectedTipHashResponseMessage Clone() {
      return new GetSelectedTipHashResponseMessage(this);
    }

    /// <summary>Field number for the "selectedTipHash" field.</summary>
    public const int SelectedTipHashFieldNumber = 1;
    private string selectedTipHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelectedTipHash {
      get { return selectedTipHash_; }
      set {
        selectedTipHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSelectedTipHashResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSelectedTipHashResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelectedTipHash != other.SelectedTipHash) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelectedTipHash.Length != 0) hash ^= SelectedTipHash.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SelectedTipHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SelectedTipHash);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelectedTipHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelectedTipHash);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSelectedTipHashResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.SelectedTipHash.Length != 0) {
        SelectedTipHash = other.SelectedTipHash;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SelectedTipHash = input.ReadString();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetMempoolEntryRequestMessage requests information about a specific transaction
  /// in the mempool.
  /// </summary>
  public sealed partial class GetMempoolEntryRequestMessage : pb::IMessage<GetMempoolEntryRequestMessage> {
    private static readonly pb::MessageParser<GetMempoolEntryRequestMessage> _parser = new pb::MessageParser<GetMempoolEntryRequestMessage>(() => new GetMempoolEntryRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntryRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryRequestMessage(GetMempoolEntryRequestMessage other) : this() {
      txId_ = other.txId_;
      includeOrphanPool_ = other.includeOrphanPool_;
      filterTransactionPool_ = other.filterTransactionPool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryRequestMessage Clone() {
      return new GetMempoolEntryRequestMessage(this);
    }

    /// <summary>Field number for the "txId" field.</summary>
    public const int TxIdFieldNumber = 1;
    private string txId_ = "";
    /// <summary>
    /// The transaction's TransactionID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TxId {
      get { return txId_; }
      set {
        txId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "includeOrphanPool" field.</summary>
    public const int IncludeOrphanPoolFieldNumber = 2;
    private bool includeOrphanPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeOrphanPool {
      get { return includeOrphanPool_; }
      set {
        includeOrphanPool_ = value;
      }
    }

    /// <summary>Field number for the "filterTransactionPool" field.</summary>
    public const int FilterTransactionPoolFieldNumber = 3;
    private bool filterTransactionPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FilterTransactionPool {
      get { return filterTransactionPool_; }
      set {
        filterTransactionPool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntryRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntryRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TxId != other.TxId) return false;
      if (IncludeOrphanPool != other.IncludeOrphanPool) return false;
      if (FilterTransactionPool != other.FilterTransactionPool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TxId.Length != 0) hash ^= TxId.GetHashCode();
      if (IncludeOrphanPool != false) hash ^= IncludeOrphanPool.GetHashCode();
      if (FilterTransactionPool != false) hash ^= FilterTransactionPool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TxId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TxId);
      }
      if (IncludeOrphanPool != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeOrphanPool);
      }
      if (FilterTransactionPool != false) {
        output.WriteRawTag(24);
        output.WriteBool(FilterTransactionPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TxId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TxId);
      }
      if (IncludeOrphanPool != false) {
        size += 1 + 1;
      }
      if (FilterTransactionPool != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntryRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.TxId.Length != 0) {
        TxId = other.TxId;
      }
      if (other.IncludeOrphanPool != false) {
        IncludeOrphanPool = other.IncludeOrphanPool;
      }
      if (other.FilterTransactionPool != false) {
        FilterTransactionPool = other.FilterTransactionPool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TxId = input.ReadString();
            break;
          }
          case 16: {
            IncludeOrphanPool = input.ReadBool();
            break;
          }
          case 24: {
            FilterTransactionPool = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMempoolEntryResponseMessage : pb::IMessage<GetMempoolEntryResponseMessage> {
    private static readonly pb::MessageParser<GetMempoolEntryResponseMessage> _parser = new pb::MessageParser<GetMempoolEntryResponseMessage>(() => new GetMempoolEntryResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntryResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryResponseMessage(GetMempoolEntryResponseMessage other) : this() {
      entry_ = other.entry_ != null ? other.entry_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntryResponseMessage Clone() {
      return new GetMempoolEntryResponseMessage(this);
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry entry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntryResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntryResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Entry, other.Entry)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (entry_ != null) hash ^= Entry.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (entry_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Entry);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (entry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entry);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntryResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.entry_ != null) {
        if (entry_ == null) {
          Entry = new global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry();
        }
        Entry.MergeFrom(other.Entry);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (entry_ == null) {
              Entry = new global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry();
            }
            input.ReadMessage(Entry);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetMempoolEntriesRequestMessage requests information about all the transactions
  /// currently in the mempool.
  /// </summary>
  public sealed partial class GetMempoolEntriesRequestMessage : pb::IMessage<GetMempoolEntriesRequestMessage> {
    private static readonly pb::MessageParser<GetMempoolEntriesRequestMessage> _parser = new pb::MessageParser<GetMempoolEntriesRequestMessage>(() => new GetMempoolEntriesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntriesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesRequestMessage(GetMempoolEntriesRequestMessage other) : this() {
      includeOrphanPool_ = other.includeOrphanPool_;
      filterTransactionPool_ = other.filterTransactionPool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesRequestMessage Clone() {
      return new GetMempoolEntriesRequestMessage(this);
    }

    /// <summary>Field number for the "includeOrphanPool" field.</summary>
    public const int IncludeOrphanPoolFieldNumber = 1;
    private bool includeOrphanPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeOrphanPool {
      get { return includeOrphanPool_; }
      set {
        includeOrphanPool_ = value;
      }
    }

    /// <summary>Field number for the "filterTransactionPool" field.</summary>
    public const int FilterTransactionPoolFieldNumber = 2;
    private bool filterTransactionPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FilterTransactionPool {
      get { return filterTransactionPool_; }
      set {
        filterTransactionPool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntriesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntriesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncludeOrphanPool != other.IncludeOrphanPool) return false;
      if (FilterTransactionPool != other.FilterTransactionPool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IncludeOrphanPool != false) hash ^= IncludeOrphanPool.GetHashCode();
      if (FilterTransactionPool != false) hash ^= FilterTransactionPool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IncludeOrphanPool != false) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeOrphanPool);
      }
      if (FilterTransactionPool != false) {
        output.WriteRawTag(16);
        output.WriteBool(FilterTransactionPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IncludeOrphanPool != false) {
        size += 1 + 1;
      }
      if (FilterTransactionPool != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntriesRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.IncludeOrphanPool != false) {
        IncludeOrphanPool = other.IncludeOrphanPool;
      }
      if (other.FilterTransactionPool != false) {
        FilterTransactionPool = other.FilterTransactionPool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IncludeOrphanPool = input.ReadBool();
            break;
          }
          case 16: {
            FilterTransactionPool = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMempoolEntriesResponseMessage : pb::IMessage<GetMempoolEntriesResponseMessage> {
    private static readonly pb::MessageParser<GetMempoolEntriesResponseMessage> _parser = new pb::MessageParser<GetMempoolEntriesResponseMessage>(() => new GetMempoolEntriesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntriesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesResponseMessage(GetMempoolEntriesResponseMessage other) : this() {
      entries_ = other.entries_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesResponseMessage Clone() {
      return new GetMempoolEntriesResponseMessage(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> entries_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntriesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntriesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntriesResponseMessage other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MempoolEntry : pb::IMessage<MempoolEntry> {
    private static readonly pb::MessageParser<MempoolEntry> _parser = new pb::MessageParser<MempoolEntry>(() => new MempoolEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MempoolEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntry(MempoolEntry other) : this() {
      fee_ = other.fee_;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      isOrphan_ = other.isOrphan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntry Clone() {
      return new MempoolEntry(this);
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 1;
    private ulong fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "isOrphan" field.</summary>
    public const int IsOrphanFieldNumber = 4;
    private bool isOrphan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOrphan {
      get { return isOrphan_; }
      set {
        isOrphan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MempoolEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MempoolEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fee != other.Fee) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (IsOrphan != other.IsOrphan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fee != 0UL) hash ^= Fee.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (IsOrphan != false) hash ^= IsOrphan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fee != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Fee);
      }
      if (transaction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Transaction);
      }
      if (IsOrphan != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsOrphan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fee != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Fee);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (IsOrphan != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MempoolEntry other) {
      if (other == null) {
        return;
      }
      if (other.Fee != 0UL) {
        Fee = other.Fee;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.IsOrphan != false) {
        IsOrphan = other.IsOrphan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Fee = input.ReadUInt64();
            break;
          }
          case 26: {
            if (transaction_ == null) {
              Transaction = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 32: {
            IsOrphan = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetConnectedPeerInfoRequestMessage requests information about all the p2p peers
  /// currently connected to this kaspad.
  /// </summary>
  public sealed partial class GetConnectedPeerInfoRequestMessage : pb::IMessage<GetConnectedPeerInfoRequestMessage> {
    private static readonly pb::MessageParser<GetConnectedPeerInfoRequestMessage> _parser = new pb::MessageParser<GetConnectedPeerInfoRequestMessage>(() => new GetConnectedPeerInfoRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConnectedPeerInfoRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoRequestMessage(GetConnectedPeerInfoRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoRequestMessage Clone() {
      return new GetConnectedPeerInfoRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConnectedPeerInfoRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConnectedPeerInfoRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConnectedPeerInfoRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetConnectedPeerInfoResponseMessage : pb::IMessage<GetConnectedPeerInfoResponseMessage> {
    private static readonly pb::MessageParser<GetConnectedPeerInfoResponseMessage> _parser = new pb::MessageParser<GetConnectedPeerInfoResponseMessage>(() => new GetConnectedPeerInfoResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConnectedPeerInfoResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoResponseMessage(GetConnectedPeerInfoResponseMessage other) : this() {
      infos_ = other.infos_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoResponseMessage Clone() {
      return new GetConnectedPeerInfoResponseMessage(this);
    }

    /// <summary>Field number for the "infos" field.</summary>
    public const int InfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage> _repeated_infos_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage> infos_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoMessage> Infos {
      get { return infos_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConnectedPeerInfoResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConnectedPeerInfoResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!infos_.Equals(other.infos_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= infos_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      infos_.WriteTo(output, _repeated_infos_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += infos_.CalculateSize(_repeated_infos_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConnectedPeerInfoResponseMessage other) {
      if (other == null) {
        return;
      }
      infos_.Add(other.infos_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            infos_.AddEntriesFrom(input, _repeated_infos_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetConnectedPeerInfoMessage : pb::IMessage<GetConnectedPeerInfoMessage> {
    private static readonly pb::MessageParser<GetConnectedPeerInfoMessage> _parser = new pb::MessageParser<GetConnectedPeerInfoMessage>(() => new GetConnectedPeerInfoMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConnectedPeerInfoMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoMessage(GetConnectedPeerInfoMessage other) : this() {
      id_ = other.id_;
      address_ = other.address_;
      lastPingDuration_ = other.lastPingDuration_;
      isOutbound_ = other.isOutbound_;
      timeOffset_ = other.timeOffset_;
      userAgent_ = other.userAgent_;
      advertisedProtocolVersion_ = other.advertisedProtocolVersion_;
      timeConnected_ = other.timeConnected_;
      isIbdPeer_ = other.isIbdPeer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectedPeerInfoMessage Clone() {
      return new GetConnectedPeerInfoMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lastPingDuration" field.</summary>
    public const int LastPingDurationFieldNumber = 3;
    private long lastPingDuration_;
    /// <summary>
    /// How long did the last ping/pong exchange take
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastPingDuration {
      get { return lastPingDuration_; }
      set {
        lastPingDuration_ = value;
      }
    }

    /// <summary>Field number for the "isOutbound" field.</summary>
    public const int IsOutboundFieldNumber = 6;
    private bool isOutbound_;
    /// <summary>
    /// Whether this kaspad initiated the connection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOutbound {
      get { return isOutbound_; }
      set {
        isOutbound_ = value;
      }
    }

    /// <summary>Field number for the "timeOffset" field.</summary>
    public const int TimeOffsetFieldNumber = 7;
    private long timeOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeOffset {
      get { return timeOffset_; }
      set {
        timeOffset_ = value;
      }
    }

    /// <summary>Field number for the "userAgent" field.</summary>
    public const int UserAgentFieldNumber = 8;
    private string userAgent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "advertisedProtocolVersion" field.</summary>
    public const int AdvertisedProtocolVersionFieldNumber = 9;
    private uint advertisedProtocolVersion_;
    /// <summary>
    /// The protocol version that this peer claims to support
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AdvertisedProtocolVersion {
      get { return advertisedProtocolVersion_; }
      set {
        advertisedProtocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "timeConnected" field.</summary>
    public const int TimeConnectedFieldNumber = 10;
    private long timeConnected_;
    /// <summary>
    /// The timestamp of when this peer connected to this kaspad
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeConnected {
      get { return timeConnected_; }
      set {
        timeConnected_ = value;
      }
    }

    /// <summary>Field number for the "isIbdPeer" field.</summary>
    public const int IsIbdPeerFieldNumber = 11;
    private bool isIbdPeer_;
    /// <summary>
    /// Whether this peer is the IBD peer (if IBD is running)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIbdPeer {
      get { return isIbdPeer_; }
      set {
        isIbdPeer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConnectedPeerInfoMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConnectedPeerInfoMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Address != other.Address) return false;
      if (LastPingDuration != other.LastPingDuration) return false;
      if (IsOutbound != other.IsOutbound) return false;
      if (TimeOffset != other.TimeOffset) return false;
      if (UserAgent != other.UserAgent) return false;
      if (AdvertisedProtocolVersion != other.AdvertisedProtocolVersion) return false;
      if (TimeConnected != other.TimeConnected) return false;
      if (IsIbdPeer != other.IsIbdPeer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (LastPingDuration != 0L) hash ^= LastPingDuration.GetHashCode();
      if (IsOutbound != false) hash ^= IsOutbound.GetHashCode();
      if (TimeOffset != 0L) hash ^= TimeOffset.GetHashCode();
      if (UserAgent.Length != 0) hash ^= UserAgent.GetHashCode();
      if (AdvertisedProtocolVersion != 0) hash ^= AdvertisedProtocolVersion.GetHashCode();
      if (TimeConnected != 0L) hash ^= TimeConnected.GetHashCode();
      if (IsIbdPeer != false) hash ^= IsIbdPeer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (LastPingDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastPingDuration);
      }
      if (IsOutbound != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsOutbound);
      }
      if (TimeOffset != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TimeOffset);
      }
      if (UserAgent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UserAgent);
      }
      if (AdvertisedProtocolVersion != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(AdvertisedProtocolVersion);
      }
      if (TimeConnected != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TimeConnected);
      }
      if (IsIbdPeer != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsIbdPeer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (LastPingDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastPingDuration);
      }
      if (IsOutbound != false) {
        size += 1 + 1;
      }
      if (TimeOffset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeOffset);
      }
      if (UserAgent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAgent);
      }
      if (AdvertisedProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdvertisedProtocolVersion);
      }
      if (TimeConnected != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeConnected);
      }
      if (IsIbdPeer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConnectedPeerInfoMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.LastPingDuration != 0L) {
        LastPingDuration = other.LastPingDuration;
      }
      if (other.IsOutbound != false) {
        IsOutbound = other.IsOutbound;
      }
      if (other.TimeOffset != 0L) {
        TimeOffset = other.TimeOffset;
      }
      if (other.UserAgent.Length != 0) {
        UserAgent = other.UserAgent;
      }
      if (other.AdvertisedProtocolVersion != 0) {
        AdvertisedProtocolVersion = other.AdvertisedProtocolVersion;
      }
      if (other.TimeConnected != 0L) {
        TimeConnected = other.TimeConnected;
      }
      if (other.IsIbdPeer != false) {
        IsIbdPeer = other.IsIbdPeer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 24: {
            LastPingDuration = input.ReadInt64();
            break;
          }
          case 48: {
            IsOutbound = input.ReadBool();
            break;
          }
          case 56: {
            TimeOffset = input.ReadInt64();
            break;
          }
          case 66: {
            UserAgent = input.ReadString();
            break;
          }
          case 72: {
            AdvertisedProtocolVersion = input.ReadUInt32();
            break;
          }
          case 80: {
            TimeConnected = input.ReadInt64();
            break;
          }
          case 88: {
            IsIbdPeer = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AddPeerRequestMessage adds a peer to kaspad's outgoing connection list.
  /// This will, in most cases, result in kaspad connecting to said peer.
  /// </summary>
  public sealed partial class AddPeerRequestMessage : pb::IMessage<AddPeerRequestMessage> {
    private static readonly pb::MessageParser<AddPeerRequestMessage> _parser = new pb::MessageParser<AddPeerRequestMessage>(() => new AddPeerRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPeerRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerRequestMessage(AddPeerRequestMessage other) : this() {
      address_ = other.address_;
      isPermanent_ = other.isPermanent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerRequestMessage Clone() {
      return new AddPeerRequestMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isPermanent" field.</summary>
    public const int IsPermanentFieldNumber = 2;
    private bool isPermanent_;
    /// <summary>
    /// Whether to keep attempting to connect to this peer after disconnection
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPermanent {
      get { return isPermanent_; }
      set {
        isPermanent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPeerRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPeerRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (IsPermanent != other.IsPermanent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (IsPermanent != false) hash ^= IsPermanent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (IsPermanent != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsPermanent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (IsPermanent != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPeerRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.IsPermanent != false) {
        IsPermanent = other.IsPermanent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            IsPermanent = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddPeerResponseMessage : pb::IMessage<AddPeerResponseMessage> {
    private static readonly pb::MessageParser<AddPeerResponseMessage> _parser = new pb::MessageParser<AddPeerResponseMessage>(() => new AddPeerResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddPeerResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerResponseMessage(AddPeerResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddPeerResponseMessage Clone() {
      return new AddPeerResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddPeerResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddPeerResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddPeerResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SubmitTransactionRequestMessage submits a transaction to the mempool
  /// </summary>
  public sealed partial class SubmitTransactionRequestMessage : pb::IMessage<SubmitTransactionRequestMessage> {
    private static readonly pb::MessageParser<SubmitTransactionRequestMessage> _parser = new pb::MessageParser<SubmitTransactionRequestMessage>(() => new SubmitTransactionRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequestMessage(SubmitTransactionRequestMessage other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      allowOrphan_ = other.allowOrphan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequestMessage Clone() {
      return new SubmitTransactionRequestMessage(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "allowOrphan" field.</summary>
    public const int AllowOrphanFieldNumber = 2;
    private bool allowOrphan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowOrphan {
      get { return allowOrphan_; }
      set {
        allowOrphan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (AllowOrphan != other.AllowOrphan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (AllowOrphan != false) hash ^= AllowOrphan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (AllowOrphan != false) {
        output.WriteRawTag(16);
        output.WriteBool(AllowOrphan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (AllowOrphan != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.AllowOrphan != false) {
        AllowOrphan = other.AllowOrphan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcTransaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 16: {
            AllowOrphan = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitTransactionResponseMessage : pb::IMessage<SubmitTransactionResponseMessage> {
    private static readonly pb::MessageParser<SubmitTransactionResponseMessage> _parser = new pb::MessageParser<SubmitTransactionResponseMessage>(() => new SubmitTransactionResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponseMessage(SubmitTransactionResponseMessage other) : this() {
      transactionId_ = other.transactionId_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponseMessage Clone() {
      return new SubmitTransactionResponseMessage(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private string transactionId_ = "";
    /// <summary>
    /// The transaction ID of the submitted transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TransactionId);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TransactionId);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadString();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyVirtualSelectedParentChainChangedRequestMessage registers this connection for virtualSelectedParentChainChanged notifications.
  ///
  /// See: VirtualSelectedParentChainChangedNotificationMessage
  /// </summary>
  public sealed partial class NotifyVirtualSelectedParentChainChangedRequestMessage : pb::IMessage<NotifyVirtualSelectedParentChainChangedRequestMessage> {
    private static readonly pb::MessageParser<NotifyVirtualSelectedParentChainChangedRequestMessage> _parser = new pb::MessageParser<NotifyVirtualSelectedParentChainChangedRequestMessage>(() => new NotifyVirtualSelectedParentChainChangedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualSelectedParentChainChangedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedRequestMessage(NotifyVirtualSelectedParentChainChangedRequestMessage other) : this() {
      includeAcceptedTransactionIds_ = other.includeAcceptedTransactionIds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedRequestMessage Clone() {
      return new NotifyVirtualSelectedParentChainChangedRequestMessage(this);
    }

    /// <summary>Field number for the "includeAcceptedTransactionIds" field.</summary>
    public const int IncludeAcceptedTransactionIdsFieldNumber = 1;
    private bool includeAcceptedTransactionIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeAcceptedTransactionIds {
      get { return includeAcceptedTransactionIds_; }
      set {
        includeAcceptedTransactionIds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualSelectedParentChainChangedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualSelectedParentChainChangedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IncludeAcceptedTransactionIds != other.IncludeAcceptedTransactionIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IncludeAcceptedTransactionIds != false) hash ^= IncludeAcceptedTransactionIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IncludeAcceptedTransactionIds != false) {
        output.WriteRawTag(8);
        output.WriteBool(IncludeAcceptedTransactionIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IncludeAcceptedTransactionIds != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualSelectedParentChainChangedRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.IncludeAcceptedTransactionIds != false) {
        IncludeAcceptedTransactionIds = other.IncludeAcceptedTransactionIds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IncludeAcceptedTransactionIds = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotifyVirtualSelectedParentChainChangedResponseMessage : pb::IMessage<NotifyVirtualSelectedParentChainChangedResponseMessage> {
    private static readonly pb::MessageParser<NotifyVirtualSelectedParentChainChangedResponseMessage> _parser = new pb::MessageParser<NotifyVirtualSelectedParentChainChangedResponseMessage>(() => new NotifyVirtualSelectedParentChainChangedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualSelectedParentChainChangedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedResponseMessage(NotifyVirtualSelectedParentChainChangedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentChainChangedResponseMessage Clone() {
      return new NotifyVirtualSelectedParentChainChangedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualSelectedParentChainChangedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualSelectedParentChainChangedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualSelectedParentChainChangedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// VirtualSelectedParentChainChangedNotificationMessage is sent whenever the DAG's selected parent
  /// chain had changed.
  ///
  /// See: NotifyVirtualSelectedParentChainChangedRequestMessage
  /// </summary>
  public sealed partial class VirtualSelectedParentChainChangedNotificationMessage : pb::IMessage<VirtualSelectedParentChainChangedNotificationMessage> {
    private static readonly pb::MessageParser<VirtualSelectedParentChainChangedNotificationMessage> _parser = new pb::MessageParser<VirtualSelectedParentChainChangedNotificationMessage>(() => new VirtualSelectedParentChainChangedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualSelectedParentChainChangedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentChainChangedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentChainChangedNotificationMessage(VirtualSelectedParentChainChangedNotificationMessage other) : this() {
      removedChainBlockHashes_ = other.removedChainBlockHashes_.Clone();
      addedChainBlockHashes_ = other.addedChainBlockHashes_.Clone();
      acceptedTransactionIds_ = other.acceptedTransactionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentChainChangedNotificationMessage Clone() {
      return new VirtualSelectedParentChainChangedNotificationMessage(this);
    }

    /// <summary>Field number for the "removedChainBlockHashes" field.</summary>
    public const int RemovedChainBlockHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_removedChainBlockHashes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> removedChainBlockHashes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The chain blocks that were removed, in high-to-low order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RemovedChainBlockHashes {
      get { return removedChainBlockHashes_; }
    }

    /// <summary>Field number for the "addedChainBlockHashes" field.</summary>
    public const int AddedChainBlockHashesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_addedChainBlockHashes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> addedChainBlockHashes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The chain blocks that were added, in low-to-high order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AddedChainBlockHashes {
      get { return addedChainBlockHashes_; }
    }

    /// <summary>Field number for the "acceptedTransactionIds" field.</summary>
    public const int AcceptedTransactionIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> _repeated_acceptedTransactionIds_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> acceptedTransactionIds_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds>();
    /// <summary>
    /// Will be filled only if `includeAcceptedTransactionIds = true` in the notify request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> AcceptedTransactionIds {
      get { return acceptedTransactionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualSelectedParentChainChangedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualSelectedParentChainChangedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!removedChainBlockHashes_.Equals(other.removedChainBlockHashes_)) return false;
      if(!addedChainBlockHashes_.Equals(other.addedChainBlockHashes_)) return false;
      if(!acceptedTransactionIds_.Equals(other.acceptedTransactionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= removedChainBlockHashes_.GetHashCode();
      hash ^= addedChainBlockHashes_.GetHashCode();
      hash ^= acceptedTransactionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      removedChainBlockHashes_.WriteTo(output, _repeated_removedChainBlockHashes_codec);
      acceptedTransactionIds_.WriteTo(output, _repeated_acceptedTransactionIds_codec);
      addedChainBlockHashes_.WriteTo(output, _repeated_addedChainBlockHashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += removedChainBlockHashes_.CalculateSize(_repeated_removedChainBlockHashes_codec);
      size += addedChainBlockHashes_.CalculateSize(_repeated_addedChainBlockHashes_codec);
      size += acceptedTransactionIds_.CalculateSize(_repeated_acceptedTransactionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualSelectedParentChainChangedNotificationMessage other) {
      if (other == null) {
        return;
      }
      removedChainBlockHashes_.Add(other.removedChainBlockHashes_);
      addedChainBlockHashes_.Add(other.addedChainBlockHashes_);
      acceptedTransactionIds_.Add(other.acceptedTransactionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            removedChainBlockHashes_.AddEntriesFrom(input, _repeated_removedChainBlockHashes_codec);
            break;
          }
          case 18: {
            acceptedTransactionIds_.AddEntriesFrom(input, _repeated_acceptedTransactionIds_codec);
            break;
          }
          case 26: {
            addedChainBlockHashes_.AddEntriesFrom(input, _repeated_addedChainBlockHashes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetBlockRequestMessage requests information about a specific block
  /// </summary>
  public sealed partial class GetBlockRequestMessage : pb::IMessage<GetBlockRequestMessage> {
    private static readonly pb::MessageParser<GetBlockRequestMessage> _parser = new pb::MessageParser<GetBlockRequestMessage>(() => new GetBlockRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequestMessage(GetBlockRequestMessage other) : this() {
      hash_ = other.hash_;
      includeTransactions_ = other.includeTransactions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequestMessage Clone() {
      return new GetBlockRequestMessage(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private string hash_ = "";
    /// <summary>
    /// The hash of the requested block
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "includeTransactions" field.</summary>
    public const int IncludeTransactionsFieldNumber = 3;
    private bool includeTransactions_;
    /// <summary>
    /// Whether to include transaction data in the response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeTransactions {
      get { return includeTransactions_; }
      set {
        includeTransactions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (IncludeTransactions != other.IncludeTransactions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (IncludeTransactions != false) hash ^= IncludeTransactions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hash);
      }
      if (IncludeTransactions != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (IncludeTransactions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.IncludeTransactions != false) {
        IncludeTransactions = other.IncludeTransactions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadString();
            break;
          }
          case 24: {
            IncludeTransactions = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlockResponseMessage : pb::IMessage<GetBlockResponseMessage> {
    private static readonly pb::MessageParser<GetBlockResponseMessage> _parser = new pb::MessageParser<GetBlockResponseMessage>(() => new GetBlockResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponseMessage(GetBlockResponseMessage other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponseMessage Clone() {
      return new GetBlockResponseMessage(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock block_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (block_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Block);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
        }
        Block.MergeFrom(other.Block);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (block_ == null) {
              Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock();
            }
            input.ReadMessage(Block);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetSubnetworkRequestMessage requests information about a specific subnetwork
  ///
  /// Currently unimplemented
  /// </summary>
  public sealed partial class GetSubnetworkRequestMessage : pb::IMessage<GetSubnetworkRequestMessage> {
    private static readonly pb::MessageParser<GetSubnetworkRequestMessage> _parser = new pb::MessageParser<GetSubnetworkRequestMessage>(() => new GetSubnetworkRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSubnetworkRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkRequestMessage(GetSubnetworkRequestMessage other) : this() {
      subnetworkId_ = other.subnetworkId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkRequestMessage Clone() {
      return new GetSubnetworkRequestMessage(this);
    }

    /// <summary>Field number for the "subnetworkId" field.</summary>
    public const int SubnetworkIdFieldNumber = 1;
    private string subnetworkId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetworkId {
      get { return subnetworkId_; }
      set {
        subnetworkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSubnetworkRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSubnetworkRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubnetworkId != other.SubnetworkId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubnetworkId.Length != 0) hash ^= SubnetworkId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubnetworkId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubnetworkId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubnetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetworkId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSubnetworkRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.SubnetworkId.Length != 0) {
        SubnetworkId = other.SubnetworkId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SubnetworkId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSubnetworkResponseMessage : pb::IMessage<GetSubnetworkResponseMessage> {
    private static readonly pb::MessageParser<GetSubnetworkResponseMessage> _parser = new pb::MessageParser<GetSubnetworkResponseMessage>(() => new GetSubnetworkResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSubnetworkResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkResponseMessage(GetSubnetworkResponseMessage other) : this() {
      gasLimit_ = other.gasLimit_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubnetworkResponseMessage Clone() {
      return new GetSubnetworkResponseMessage(this);
    }

    /// <summary>Field number for the "gasLimit" field.</summary>
    public const int GasLimitFieldNumber = 1;
    private ulong gasLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GasLimit {
      get { return gasLimit_; }
      set {
        gasLimit_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSubnetworkResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSubnetworkResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GasLimit != other.GasLimit) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GasLimit != 0UL) hash ^= GasLimit.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GasLimit != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GasLimit);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GasLimit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GasLimit);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSubnetworkResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.GasLimit != 0UL) {
        GasLimit = other.GasLimit;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GasLimit = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetVirtualSelectedParentChainFromBlockRequestMessage requests the virtual selected
  /// parent chain from some startHash to this kaspad's current virtual
  /// </summary>
  public sealed partial class GetVirtualSelectedParentChainFromBlockRequestMessage : pb::IMessage<GetVirtualSelectedParentChainFromBlockRequestMessage> {
    private static readonly pb::MessageParser<GetVirtualSelectedParentChainFromBlockRequestMessage> _parser = new pb::MessageParser<GetVirtualSelectedParentChainFromBlockRequestMessage>(() => new GetVirtualSelectedParentChainFromBlockRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVirtualSelectedParentChainFromBlockRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockRequestMessage(GetVirtualSelectedParentChainFromBlockRequestMessage other) : this() {
      startHash_ = other.startHash_;
      includeAcceptedTransactionIds_ = other.includeAcceptedTransactionIds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockRequestMessage Clone() {
      return new GetVirtualSelectedParentChainFromBlockRequestMessage(this);
    }

    /// <summary>Field number for the "startHash" field.</summary>
    public const int StartHashFieldNumber = 1;
    private string startHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartHash {
      get { return startHash_; }
      set {
        startHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "includeAcceptedTransactionIds" field.</summary>
    public const int IncludeAcceptedTransactionIdsFieldNumber = 2;
    private bool includeAcceptedTransactionIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeAcceptedTransactionIds {
      get { return includeAcceptedTransactionIds_; }
      set {
        includeAcceptedTransactionIds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVirtualSelectedParentChainFromBlockRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVirtualSelectedParentChainFromBlockRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartHash != other.StartHash) return false;
      if (IncludeAcceptedTransactionIds != other.IncludeAcceptedTransactionIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartHash.Length != 0) hash ^= StartHash.GetHashCode();
      if (IncludeAcceptedTransactionIds != false) hash ^= IncludeAcceptedTransactionIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartHash);
      }
      if (IncludeAcceptedTransactionIds != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeAcceptedTransactionIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartHash);
      }
      if (IncludeAcceptedTransactionIds != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVirtualSelectedParentChainFromBlockRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.StartHash.Length != 0) {
        StartHash = other.StartHash;
      }
      if (other.IncludeAcceptedTransactionIds != false) {
        IncludeAcceptedTransactionIds = other.IncludeAcceptedTransactionIds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartHash = input.ReadString();
            break;
          }
          case 16: {
            IncludeAcceptedTransactionIds = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AcceptedTransactionIds : pb::IMessage<AcceptedTransactionIds> {
    private static readonly pb::MessageParser<AcceptedTransactionIds> _parser = new pb::MessageParser<AcceptedTransactionIds>(() => new AcceptedTransactionIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceptedTransactionIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptedTransactionIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptedTransactionIds(AcceptedTransactionIds other) : this() {
      acceptingBlockHash_ = other.acceptingBlockHash_;
      acceptedTransactionIds_ = other.acceptedTransactionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceptedTransactionIds Clone() {
      return new AcceptedTransactionIds(this);
    }

    /// <summary>Field number for the "acceptingBlockHash" field.</summary>
    public const int AcceptingBlockHashFieldNumber = 1;
    private string acceptingBlockHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceptingBlockHash {
      get { return acceptingBlockHash_; }
      set {
        acceptingBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "acceptedTransactionIds" field.</summary>
    public const int AcceptedTransactionIds_FieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_acceptedTransactionIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> acceptedTransactionIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AcceptedTransactionIds_ {
      get { return acceptedTransactionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceptedTransactionIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceptedTransactionIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AcceptingBlockHash != other.AcceptingBlockHash) return false;
      if(!acceptedTransactionIds_.Equals(other.acceptedTransactionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AcceptingBlockHash.Length != 0) hash ^= AcceptingBlockHash.GetHashCode();
      hash ^= acceptedTransactionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AcceptingBlockHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AcceptingBlockHash);
      }
      acceptedTransactionIds_.WriteTo(output, _repeated_acceptedTransactionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AcceptingBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceptingBlockHash);
      }
      size += acceptedTransactionIds_.CalculateSize(_repeated_acceptedTransactionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceptedTransactionIds other) {
      if (other == null) {
        return;
      }
      if (other.AcceptingBlockHash.Length != 0) {
        AcceptingBlockHash = other.AcceptingBlockHash;
      }
      acceptedTransactionIds_.Add(other.acceptedTransactionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AcceptingBlockHash = input.ReadString();
            break;
          }
          case 18: {
            acceptedTransactionIds_.AddEntriesFrom(input, _repeated_acceptedTransactionIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetVirtualSelectedParentChainFromBlockResponseMessage : pb::IMessage<GetVirtualSelectedParentChainFromBlockResponseMessage> {
    private static readonly pb::MessageParser<GetVirtualSelectedParentChainFromBlockResponseMessage> _parser = new pb::MessageParser<GetVirtualSelectedParentChainFromBlockResponseMessage>(() => new GetVirtualSelectedParentChainFromBlockResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVirtualSelectedParentChainFromBlockResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockResponseMessage(GetVirtualSelectedParentChainFromBlockResponseMessage other) : this() {
      removedChainBlockHashes_ = other.removedChainBlockHashes_.Clone();
      addedChainBlockHashes_ = other.addedChainBlockHashes_.Clone();
      acceptedTransactionIds_ = other.acceptedTransactionIds_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentChainFromBlockResponseMessage Clone() {
      return new GetVirtualSelectedParentChainFromBlockResponseMessage(this);
    }

    /// <summary>Field number for the "removedChainBlockHashes" field.</summary>
    public const int RemovedChainBlockHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_removedChainBlockHashes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> removedChainBlockHashes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The chain blocks that were removed, in high-to-low order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RemovedChainBlockHashes {
      get { return removedChainBlockHashes_; }
    }

    /// <summary>Field number for the "addedChainBlockHashes" field.</summary>
    public const int AddedChainBlockHashesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_addedChainBlockHashes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> addedChainBlockHashes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The chain blocks that were added, in low-to-high order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AddedChainBlockHashes {
      get { return addedChainBlockHashes_; }
    }

    /// <summary>Field number for the "acceptedTransactionIds" field.</summary>
    public const int AcceptedTransactionIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> _repeated_acceptedTransactionIds_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> acceptedTransactionIds_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds>();
    /// <summary>
    /// The transactions accepted by each block in addedChainBlockHashes.
    /// Will be filled only if `includeAcceptedTransactionIds = true` in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.AcceptedTransactionIds> AcceptedTransactionIds {
      get { return acceptedTransactionIds_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVirtualSelectedParentChainFromBlockResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVirtualSelectedParentChainFromBlockResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!removedChainBlockHashes_.Equals(other.removedChainBlockHashes_)) return false;
      if(!addedChainBlockHashes_.Equals(other.addedChainBlockHashes_)) return false;
      if(!acceptedTransactionIds_.Equals(other.acceptedTransactionIds_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= removedChainBlockHashes_.GetHashCode();
      hash ^= addedChainBlockHashes_.GetHashCode();
      hash ^= acceptedTransactionIds_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      removedChainBlockHashes_.WriteTo(output, _repeated_removedChainBlockHashes_codec);
      acceptedTransactionIds_.WriteTo(output, _repeated_acceptedTransactionIds_codec);
      addedChainBlockHashes_.WriteTo(output, _repeated_addedChainBlockHashes_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += removedChainBlockHashes_.CalculateSize(_repeated_removedChainBlockHashes_codec);
      size += addedChainBlockHashes_.CalculateSize(_repeated_addedChainBlockHashes_codec);
      size += acceptedTransactionIds_.CalculateSize(_repeated_acceptedTransactionIds_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVirtualSelectedParentChainFromBlockResponseMessage other) {
      if (other == null) {
        return;
      }
      removedChainBlockHashes_.Add(other.removedChainBlockHashes_);
      addedChainBlockHashes_.Add(other.addedChainBlockHashes_);
      acceptedTransactionIds_.Add(other.acceptedTransactionIds_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            removedChainBlockHashes_.AddEntriesFrom(input, _repeated_removedChainBlockHashes_codec);
            break;
          }
          case 18: {
            acceptedTransactionIds_.AddEntriesFrom(input, _repeated_acceptedTransactionIds_codec);
            break;
          }
          case 26: {
            addedChainBlockHashes_.AddEntriesFrom(input, _repeated_addedChainBlockHashes_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetBlocksRequestMessage requests blocks between a certain block lowHash up to this
  /// kaspad's current virtual.
  /// </summary>
  public sealed partial class GetBlocksRequestMessage : pb::IMessage<GetBlocksRequestMessage> {
    private static readonly pb::MessageParser<GetBlocksRequestMessage> _parser = new pb::MessageParser<GetBlocksRequestMessage>(() => new GetBlocksRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlocksRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksRequestMessage(GetBlocksRequestMessage other) : this() {
      lowHash_ = other.lowHash_;
      includeBlocks_ = other.includeBlocks_;
      includeTransactions_ = other.includeTransactions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksRequestMessage Clone() {
      return new GetBlocksRequestMessage(this);
    }

    /// <summary>Field number for the "lowHash" field.</summary>
    public const int LowHashFieldNumber = 1;
    private string lowHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LowHash {
      get { return lowHash_; }
      set {
        lowHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "includeBlocks" field.</summary>
    public const int IncludeBlocksFieldNumber = 2;
    private bool includeBlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeBlocks {
      get { return includeBlocks_; }
      set {
        includeBlocks_ = value;
      }
    }

    /// <summary>Field number for the "includeTransactions" field.</summary>
    public const int IncludeTransactionsFieldNumber = 3;
    private bool includeTransactions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeTransactions {
      get { return includeTransactions_; }
      set {
        includeTransactions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlocksRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlocksRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LowHash != other.LowHash) return false;
      if (IncludeBlocks != other.IncludeBlocks) return false;
      if (IncludeTransactions != other.IncludeTransactions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LowHash.Length != 0) hash ^= LowHash.GetHashCode();
      if (IncludeBlocks != false) hash ^= IncludeBlocks.GetHashCode();
      if (IncludeTransactions != false) hash ^= IncludeTransactions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LowHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LowHash);
      }
      if (IncludeBlocks != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeBlocks);
      }
      if (IncludeTransactions != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LowHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LowHash);
      }
      if (IncludeBlocks != false) {
        size += 1 + 1;
      }
      if (IncludeTransactions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlocksRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.LowHash.Length != 0) {
        LowHash = other.LowHash;
      }
      if (other.IncludeBlocks != false) {
        IncludeBlocks = other.IncludeBlocks;
      }
      if (other.IncludeTransactions != false) {
        IncludeTransactions = other.IncludeTransactions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LowHash = input.ReadString();
            break;
          }
          case 16: {
            IncludeBlocks = input.ReadBool();
            break;
          }
          case 24: {
            IncludeTransactions = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBlocksResponseMessage : pb::IMessage<GetBlocksResponseMessage> {
    private static readonly pb::MessageParser<GetBlocksResponseMessage> _parser = new pb::MessageParser<GetBlocksResponseMessage>(() => new GetBlocksResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlocksResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksResponseMessage(GetBlocksResponseMessage other) : this() {
      blockHashes_ = other.blockHashes_.Clone();
      blocks_ = other.blocks_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlocksResponseMessage Clone() {
      return new GetBlocksResponseMessage(this);
    }

    /// <summary>Field number for the "blockHashes" field.</summary>
    public const int BlockHashesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_blockHashes_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> blockHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlockHashes {
      get { return blockHashes_; }
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock> blocks_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.RpcBlock> Blocks {
      get { return blocks_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlocksResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlocksResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockHashes_.Equals(other.blockHashes_)) return false;
      if(!blocks_.Equals(other.blocks_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockHashes_.GetHashCode();
      hash ^= blocks_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      blocks_.WriteTo(output, _repeated_blocks_codec);
      blockHashes_.WriteTo(output, _repeated_blockHashes_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockHashes_.CalculateSize(_repeated_blockHashes_codec);
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlocksResponseMessage other) {
      if (other == null) {
        return;
      }
      blockHashes_.Add(other.blockHashes_);
      blocks_.Add(other.blocks_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
          case 34: {
            blockHashes_.AddEntriesFrom(input, _repeated_blockHashes_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetBlockCountRequestMessage requests the current number of blocks in this kaspad.
  /// Note that this number may decrease as pruning occurs.
  /// </summary>
  public sealed partial class GetBlockCountRequestMessage : pb::IMessage<GetBlockCountRequestMessage> {
    private static readonly pb::MessageParser<GetBlockCountRequestMessage> _parser = new pb::MessageParser<GetBlockCountRequestMessage>(() => new GetBlockCountRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockCountRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountRequestMessage(GetBlockCountRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountRequestMessage Clone() {
      return new GetBlockCountRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockCountRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockCountRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockCountRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetBlockCountResponseMessage : pb::IMessage<GetBlockCountResponseMessage> {
    private static readonly pb::MessageParser<GetBlockCountResponseMessage> _parser = new pb::MessageParser<GetBlockCountResponseMessage>(() => new GetBlockCountResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockCountResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountResponseMessage(GetBlockCountResponseMessage other) : this() {
      blockCount_ = other.blockCount_;
      headerCount_ = other.headerCount_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockCountResponseMessage Clone() {
      return new GetBlockCountResponseMessage(this);
    }

    /// <summary>Field number for the "blockCount" field.</summary>
    public const int BlockCountFieldNumber = 1;
    private ulong blockCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockCount {
      get { return blockCount_; }
      set {
        blockCount_ = value;
      }
    }

    /// <summary>Field number for the "headerCount" field.</summary>
    public const int HeaderCountFieldNumber = 2;
    private ulong headerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong HeaderCount {
      get { return headerCount_; }
      set {
        headerCount_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockCountResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockCountResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockCount != other.BlockCount) return false;
      if (HeaderCount != other.HeaderCount) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockCount != 0UL) hash ^= BlockCount.GetHashCode();
      if (HeaderCount != 0UL) hash ^= HeaderCount.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockCount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BlockCount);
      }
      if (HeaderCount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(HeaderCount);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockCount);
      }
      if (HeaderCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HeaderCount);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockCountResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.BlockCount != 0UL) {
        BlockCount = other.BlockCount;
      }
      if (other.HeaderCount != 0UL) {
        HeaderCount = other.HeaderCount;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockCount = input.ReadUInt64();
            break;
          }
          case 16: {
            HeaderCount = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetBlockDagInfoRequestMessage requests general information about the current state
  /// of this kaspad's DAG.
  /// </summary>
  public sealed partial class GetBlockDagInfoRequestMessage : pb::IMessage<GetBlockDagInfoRequestMessage> {
    private static readonly pb::MessageParser<GetBlockDagInfoRequestMessage> _parser = new pb::MessageParser<GetBlockDagInfoRequestMessage>(() => new GetBlockDagInfoRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockDagInfoRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoRequestMessage(GetBlockDagInfoRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoRequestMessage Clone() {
      return new GetBlockDagInfoRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockDagInfoRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockDagInfoRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockDagInfoRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetBlockDagInfoResponseMessage : pb::IMessage<GetBlockDagInfoResponseMessage> {
    private static readonly pb::MessageParser<GetBlockDagInfoResponseMessage> _parser = new pb::MessageParser<GetBlockDagInfoResponseMessage>(() => new GetBlockDagInfoResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockDagInfoResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoResponseMessage(GetBlockDagInfoResponseMessage other) : this() {
      networkName_ = other.networkName_;
      blockCount_ = other.blockCount_;
      headerCount_ = other.headerCount_;
      tipHashes_ = other.tipHashes_.Clone();
      difficulty_ = other.difficulty_;
      pastMedianTime_ = other.pastMedianTime_;
      virtualParentHashes_ = other.virtualParentHashes_.Clone();
      pruningPointHash_ = other.pruningPointHash_;
      virtualDaaScore_ = other.virtualDaaScore_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockDagInfoResponseMessage Clone() {
      return new GetBlockDagInfoResponseMessage(this);
    }

    /// <summary>Field number for the "networkName" field.</summary>
    public const int NetworkNameFieldNumber = 1;
    private string networkName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkName {
      get { return networkName_; }
      set {
        networkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blockCount" field.</summary>
    public const int BlockCountFieldNumber = 2;
    private ulong blockCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlockCount {
      get { return blockCount_; }
      set {
        blockCount_ = value;
      }
    }

    /// <summary>Field number for the "headerCount" field.</summary>
    public const int HeaderCountFieldNumber = 3;
    private ulong headerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong HeaderCount {
      get { return headerCount_; }
      set {
        headerCount_ = value;
      }
    }

    /// <summary>Field number for the "tipHashes" field.</summary>
    public const int TipHashesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tipHashes_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tipHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TipHashes {
      get { return tipHashes_; }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 5;
    private double difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "pastMedianTime" field.</summary>
    public const int PastMedianTimeFieldNumber = 6;
    private long pastMedianTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PastMedianTime {
      get { return pastMedianTime_; }
      set {
        pastMedianTime_ = value;
      }
    }

    /// <summary>Field number for the "virtualParentHashes" field.</summary>
    public const int VirtualParentHashesFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_virtualParentHashes_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> virtualParentHashes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> VirtualParentHashes {
      get { return virtualParentHashes_; }
    }

    /// <summary>Field number for the "pruningPointHash" field.</summary>
    public const int PruningPointHashFieldNumber = 8;
    private string pruningPointHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PruningPointHash {
      get { return pruningPointHash_; }
      set {
        pruningPointHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "virtualDaaScore" field.</summary>
    public const int VirtualDaaScoreFieldNumber = 9;
    private ulong virtualDaaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VirtualDaaScore {
      get { return virtualDaaScore_; }
      set {
        virtualDaaScore_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockDagInfoResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockDagInfoResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkName != other.NetworkName) return false;
      if (BlockCount != other.BlockCount) return false;
      if (HeaderCount != other.HeaderCount) return false;
      if(!tipHashes_.Equals(other.tipHashes_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Difficulty, other.Difficulty)) return false;
      if (PastMedianTime != other.PastMedianTime) return false;
      if(!virtualParentHashes_.Equals(other.virtualParentHashes_)) return false;
      if (PruningPointHash != other.PruningPointHash) return false;
      if (VirtualDaaScore != other.VirtualDaaScore) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkName.Length != 0) hash ^= NetworkName.GetHashCode();
      if (BlockCount != 0UL) hash ^= BlockCount.GetHashCode();
      if (HeaderCount != 0UL) hash ^= HeaderCount.GetHashCode();
      hash ^= tipHashes_.GetHashCode();
      if (Difficulty != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Difficulty);
      if (PastMedianTime != 0L) hash ^= PastMedianTime.GetHashCode();
      hash ^= virtualParentHashes_.GetHashCode();
      if (PruningPointHash.Length != 0) hash ^= PruningPointHash.GetHashCode();
      if (VirtualDaaScore != 0UL) hash ^= VirtualDaaScore.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkName);
      }
      if (BlockCount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(BlockCount);
      }
      if (HeaderCount != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(HeaderCount);
      }
      tipHashes_.WriteTo(output, _repeated_tipHashes_codec);
      if (Difficulty != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Difficulty);
      }
      if (PastMedianTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PastMedianTime);
      }
      virtualParentHashes_.WriteTo(output, _repeated_virtualParentHashes_codec);
      if (PruningPointHash.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PruningPointHash);
      }
      if (VirtualDaaScore != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(VirtualDaaScore);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkName);
      }
      if (BlockCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlockCount);
      }
      if (HeaderCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HeaderCount);
      }
      size += tipHashes_.CalculateSize(_repeated_tipHashes_codec);
      if (Difficulty != 0D) {
        size += 1 + 8;
      }
      if (PastMedianTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PastMedianTime);
      }
      size += virtualParentHashes_.CalculateSize(_repeated_virtualParentHashes_codec);
      if (PruningPointHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PruningPointHash);
      }
      if (VirtualDaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VirtualDaaScore);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockDagInfoResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.NetworkName.Length != 0) {
        NetworkName = other.NetworkName;
      }
      if (other.BlockCount != 0UL) {
        BlockCount = other.BlockCount;
      }
      if (other.HeaderCount != 0UL) {
        HeaderCount = other.HeaderCount;
      }
      tipHashes_.Add(other.tipHashes_);
      if (other.Difficulty != 0D) {
        Difficulty = other.Difficulty;
      }
      if (other.PastMedianTime != 0L) {
        PastMedianTime = other.PastMedianTime;
      }
      virtualParentHashes_.Add(other.virtualParentHashes_);
      if (other.PruningPointHash.Length != 0) {
        PruningPointHash = other.PruningPointHash;
      }
      if (other.VirtualDaaScore != 0UL) {
        VirtualDaaScore = other.VirtualDaaScore;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkName = input.ReadString();
            break;
          }
          case 16: {
            BlockCount = input.ReadUInt64();
            break;
          }
          case 24: {
            HeaderCount = input.ReadUInt64();
            break;
          }
          case 34: {
            tipHashes_.AddEntriesFrom(input, _repeated_tipHashes_codec);
            break;
          }
          case 41: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 48: {
            PastMedianTime = input.ReadInt64();
            break;
          }
          case 58: {
            virtualParentHashes_.AddEntriesFrom(input, _repeated_virtualParentHashes_codec);
            break;
          }
          case 66: {
            PruningPointHash = input.ReadString();
            break;
          }
          case 72: {
            VirtualDaaScore = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResolveFinalityConflictRequestMessage : pb::IMessage<ResolveFinalityConflictRequestMessage> {
    private static readonly pb::MessageParser<ResolveFinalityConflictRequestMessage> _parser = new pb::MessageParser<ResolveFinalityConflictRequestMessage>(() => new ResolveFinalityConflictRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveFinalityConflictRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictRequestMessage(ResolveFinalityConflictRequestMessage other) : this() {
      finalityBlockHash_ = other.finalityBlockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictRequestMessage Clone() {
      return new ResolveFinalityConflictRequestMessage(this);
    }

    /// <summary>Field number for the "finalityBlockHash" field.</summary>
    public const int FinalityBlockHashFieldNumber = 1;
    private string finalityBlockHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalityBlockHash {
      get { return finalityBlockHash_; }
      set {
        finalityBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveFinalityConflictRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveFinalityConflictRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FinalityBlockHash != other.FinalityBlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FinalityBlockHash.Length != 0) hash ^= FinalityBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FinalityBlockHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FinalityBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FinalityBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FinalityBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveFinalityConflictRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.FinalityBlockHash.Length != 0) {
        FinalityBlockHash = other.FinalityBlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FinalityBlockHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResolveFinalityConflictResponseMessage : pb::IMessage<ResolveFinalityConflictResponseMessage> {
    private static readonly pb::MessageParser<ResolveFinalityConflictResponseMessage> _parser = new pb::MessageParser<ResolveFinalityConflictResponseMessage>(() => new ResolveFinalityConflictResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveFinalityConflictResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictResponseMessage(ResolveFinalityConflictResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveFinalityConflictResponseMessage Clone() {
      return new ResolveFinalityConflictResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveFinalityConflictResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveFinalityConflictResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveFinalityConflictResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotifyFinalityConflictsRequestMessage : pb::IMessage<NotifyFinalityConflictsRequestMessage> {
    private static readonly pb::MessageParser<NotifyFinalityConflictsRequestMessage> _parser = new pb::MessageParser<NotifyFinalityConflictsRequestMessage>(() => new NotifyFinalityConflictsRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyFinalityConflictsRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsRequestMessage(NotifyFinalityConflictsRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsRequestMessage Clone() {
      return new NotifyFinalityConflictsRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyFinalityConflictsRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyFinalityConflictsRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyFinalityConflictsRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyFinalityConflictsResponseMessage : pb::IMessage<NotifyFinalityConflictsResponseMessage> {
    private static readonly pb::MessageParser<NotifyFinalityConflictsResponseMessage> _parser = new pb::MessageParser<NotifyFinalityConflictsResponseMessage>(() => new NotifyFinalityConflictsResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyFinalityConflictsResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsResponseMessage(NotifyFinalityConflictsResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyFinalityConflictsResponseMessage Clone() {
      return new NotifyFinalityConflictsResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyFinalityConflictsResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyFinalityConflictsResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyFinalityConflictsResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FinalityConflictNotificationMessage : pb::IMessage<FinalityConflictNotificationMessage> {
    private static readonly pb::MessageParser<FinalityConflictNotificationMessage> _parser = new pb::MessageParser<FinalityConflictNotificationMessage>(() => new FinalityConflictNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinalityConflictNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictNotificationMessage(FinalityConflictNotificationMessage other) : this() {
      violatingBlockHash_ = other.violatingBlockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictNotificationMessage Clone() {
      return new FinalityConflictNotificationMessage(this);
    }

    /// <summary>Field number for the "violatingBlockHash" field.</summary>
    public const int ViolatingBlockHashFieldNumber = 1;
    private string violatingBlockHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ViolatingBlockHash {
      get { return violatingBlockHash_; }
      set {
        violatingBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinalityConflictNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinalityConflictNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ViolatingBlockHash != other.ViolatingBlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ViolatingBlockHash.Length != 0) hash ^= ViolatingBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ViolatingBlockHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ViolatingBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ViolatingBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ViolatingBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinalityConflictNotificationMessage other) {
      if (other == null) {
        return;
      }
      if (other.ViolatingBlockHash.Length != 0) {
        ViolatingBlockHash = other.ViolatingBlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ViolatingBlockHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FinalityConflictResolvedNotificationMessage : pb::IMessage<FinalityConflictResolvedNotificationMessage> {
    private static readonly pb::MessageParser<FinalityConflictResolvedNotificationMessage> _parser = new pb::MessageParser<FinalityConflictResolvedNotificationMessage>(() => new FinalityConflictResolvedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FinalityConflictResolvedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictResolvedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictResolvedNotificationMessage(FinalityConflictResolvedNotificationMessage other) : this() {
      finalityBlockHash_ = other.finalityBlockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FinalityConflictResolvedNotificationMessage Clone() {
      return new FinalityConflictResolvedNotificationMessage(this);
    }

    /// <summary>Field number for the "finalityBlockHash" field.</summary>
    public const int FinalityBlockHashFieldNumber = 1;
    private string finalityBlockHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FinalityBlockHash {
      get { return finalityBlockHash_; }
      set {
        finalityBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FinalityConflictResolvedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FinalityConflictResolvedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FinalityBlockHash != other.FinalityBlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FinalityBlockHash.Length != 0) hash ^= FinalityBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FinalityBlockHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FinalityBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FinalityBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FinalityBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FinalityConflictResolvedNotificationMessage other) {
      if (other == null) {
        return;
      }
      if (other.FinalityBlockHash.Length != 0) {
        FinalityBlockHash = other.FinalityBlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FinalityBlockHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ShutDownRequestMessage shuts down this kaspad.
  /// </summary>
  public sealed partial class ShutDownRequestMessage : pb::IMessage<ShutDownRequestMessage> {
    private static readonly pb::MessageParser<ShutDownRequestMessage> _parser = new pb::MessageParser<ShutDownRequestMessage>(() => new ShutDownRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutDownRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownRequestMessage(ShutDownRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownRequestMessage Clone() {
      return new ShutDownRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutDownRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutDownRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutDownRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ShutDownResponseMessage : pb::IMessage<ShutDownResponseMessage> {
    private static readonly pb::MessageParser<ShutDownResponseMessage> _parser = new pb::MessageParser<ShutDownResponseMessage>(() => new ShutDownResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutDownResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownResponseMessage(ShutDownResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutDownResponseMessage Clone() {
      return new ShutDownResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutDownResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutDownResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutDownResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetHeadersRequestMessage requests headers between the given startHash and the
  /// current virtual, up to the given limit.
  /// </summary>
  public sealed partial class GetHeadersRequestMessage : pb::IMessage<GetHeadersRequestMessage> {
    private static readonly pb::MessageParser<GetHeadersRequestMessage> _parser = new pb::MessageParser<GetHeadersRequestMessage>(() => new GetHeadersRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHeadersRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequestMessage(GetHeadersRequestMessage other) : this() {
      startHash_ = other.startHash_;
      limit_ = other.limit_;
      isAscending_ = other.isAscending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequestMessage Clone() {
      return new GetHeadersRequestMessage(this);
    }

    /// <summary>Field number for the "startHash" field.</summary>
    public const int StartHashFieldNumber = 1;
    private string startHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartHash {
      get { return startHash_; }
      set {
        startHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "isAscending" field.</summary>
    public const int IsAscendingFieldNumber = 3;
    private bool isAscending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAscending {
      get { return isAscending_; }
      set {
        isAscending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHeadersRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHeadersRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartHash != other.StartHash) return false;
      if (Limit != other.Limit) return false;
      if (IsAscending != other.IsAscending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartHash.Length != 0) hash ^= StartHash.GetHashCode();
      if (Limit != 0UL) hash ^= Limit.GetHashCode();
      if (IsAscending != false) hash ^= IsAscending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartHash);
      }
      if (Limit != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Limit);
      }
      if (IsAscending != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAscending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartHash);
      }
      if (Limit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (IsAscending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHeadersRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.StartHash.Length != 0) {
        StartHash = other.StartHash;
      }
      if (other.Limit != 0UL) {
        Limit = other.Limit;
      }
      if (other.IsAscending != false) {
        IsAscending = other.IsAscending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartHash = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadUInt64();
            break;
          }
          case 24: {
            IsAscending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHeadersResponseMessage : pb::IMessage<GetHeadersResponseMessage> {
    private static readonly pb::MessageParser<GetHeadersResponseMessage> _parser = new pb::MessageParser<GetHeadersResponseMessage>(() => new GetHeadersResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHeadersResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponseMessage(GetHeadersResponseMessage other) : this() {
      headers_ = other.headers_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponseMessage Clone() {
      return new GetHeadersResponseMessage(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_headers_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> headers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHeadersResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHeadersResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      headers_.WriteTo(output, _repeated_headers_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHeadersResponseMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyUtxosChangedRequestMessage registers this connection for utxoChanged notifications
  /// for the given addresses.
  ///
  /// This call is only available when this kaspad was started with `--utxoindex`
  ///
  /// See: UtxosChangedNotificationMessage
  /// </summary>
  public sealed partial class NotifyUtxosChangedRequestMessage : pb::IMessage<NotifyUtxosChangedRequestMessage> {
    private static readonly pb::MessageParser<NotifyUtxosChangedRequestMessage> _parser = new pb::MessageParser<NotifyUtxosChangedRequestMessage>(() => new NotifyUtxosChangedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyUtxosChangedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedRequestMessage(NotifyUtxosChangedRequestMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedRequestMessage Clone() {
      return new NotifyUtxosChangedRequestMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Leave empty to get all updates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyUtxosChangedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyUtxosChangedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyUtxosChangedRequestMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotifyUtxosChangedResponseMessage : pb::IMessage<NotifyUtxosChangedResponseMessage> {
    private static readonly pb::MessageParser<NotifyUtxosChangedResponseMessage> _parser = new pb::MessageParser<NotifyUtxosChangedResponseMessage>(() => new NotifyUtxosChangedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyUtxosChangedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedResponseMessage(NotifyUtxosChangedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyUtxosChangedResponseMessage Clone() {
      return new NotifyUtxosChangedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyUtxosChangedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyUtxosChangedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyUtxosChangedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UtxosChangedNotificationMessage is sent whenever the UTXO index had been updated.
  ///
  /// See: NotifyUtxosChangedRequestMessage
  /// </summary>
  public sealed partial class UtxosChangedNotificationMessage : pb::IMessage<UtxosChangedNotificationMessage> {
    private static readonly pb::MessageParser<UtxosChangedNotificationMessage> _parser = new pb::MessageParser<UtxosChangedNotificationMessage>(() => new UtxosChangedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UtxosChangedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosChangedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosChangedNotificationMessage(UtxosChangedNotificationMessage other) : this() {
      added_ = other.added_.Clone();
      removed_ = other.removed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosChangedNotificationMessage Clone() {
      return new UtxosChangedNotificationMessage(this);
    }

    /// <summary>Field number for the "added" field.</summary>
    public const int AddedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> _repeated_added_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> added_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> Added {
      get { return added_; }
    }

    /// <summary>Field number for the "removed" field.</summary>
    public const int RemovedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> _repeated_removed_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> removed_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> Removed {
      get { return removed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UtxosChangedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UtxosChangedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!added_.Equals(other.added_)) return false;
      if(!removed_.Equals(other.removed_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= added_.GetHashCode();
      hash ^= removed_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      added_.WriteTo(output, _repeated_added_codec);
      removed_.WriteTo(output, _repeated_removed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += added_.CalculateSize(_repeated_added_codec);
      size += removed_.CalculateSize(_repeated_removed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UtxosChangedNotificationMessage other) {
      if (other == null) {
        return;
      }
      added_.Add(other.added_);
      removed_.Add(other.removed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            added_.AddEntriesFrom(input, _repeated_added_codec);
            break;
          }
          case 18: {
            removed_.AddEntriesFrom(input, _repeated_removed_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UtxosByAddressesEntry : pb::IMessage<UtxosByAddressesEntry> {
    private static readonly pb::MessageParser<UtxosByAddressesEntry> _parser = new pb::MessageParser<UtxosByAddressesEntry>(() => new UtxosByAddressesEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UtxosByAddressesEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry(UtxosByAddressesEntry other) : this() {
      address_ = other.address_;
      outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
      utxoEntry_ = other.utxoEntry_ != null ? other.utxoEntry_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UtxosByAddressesEntry Clone() {
      return new UtxosByAddressesEntry(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "outpoint" field.</summary>
    public const int OutpointFieldNumber = 2;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint outpoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint Outpoint {
      get { return outpoint_; }
      set {
        outpoint_ = value;
      }
    }

    /// <summary>Field number for the "utxoEntry" field.</summary>
    public const int UtxoEntryFieldNumber = 3;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry utxoEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry UtxoEntry {
      get { return utxoEntry_; }
      set {
        utxoEntry_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UtxosByAddressesEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UtxosByAddressesEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (!object.Equals(Outpoint, other.Outpoint)) return false;
      if (!object.Equals(UtxoEntry, other.UtxoEntry)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
      if (utxoEntry_ != null) hash ^= UtxoEntry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (outpoint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Outpoint);
      }
      if (utxoEntry_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UtxoEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (outpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
      }
      if (utxoEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UtxoEntry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UtxosByAddressesEntry other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.outpoint_ != null) {
        if (outpoint_ == null) {
          Outpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint();
        }
        Outpoint.MergeFrom(other.Outpoint);
      }
      if (other.utxoEntry_ != null) {
        if (utxoEntry_ == null) {
          UtxoEntry = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry();
        }
        UtxoEntry.MergeFrom(other.UtxoEntry);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (outpoint_ == null) {
              Outpoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcOutpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 26: {
            if (utxoEntry_ == null) {
              UtxoEntry = new global::Miningcore.Blockchain.Kaspa.Kaspad.RpcUtxoEntry();
            }
            input.ReadMessage(UtxoEntry);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StopNotifyingUtxosChangedRequestMessage unregisters this connection for utxoChanged notifications
  /// for the given addresses.
  ///
  /// This call is only available when this kaspad was started with `--utxoindex`
  ///
  /// See: UtxosChangedNotificationMessage
  /// </summary>
  public sealed partial class StopNotifyingUtxosChangedRequestMessage : pb::IMessage<StopNotifyingUtxosChangedRequestMessage> {
    private static readonly pb::MessageParser<StopNotifyingUtxosChangedRequestMessage> _parser = new pb::MessageParser<StopNotifyingUtxosChangedRequestMessage>(() => new StopNotifyingUtxosChangedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNotifyingUtxosChangedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedRequestMessage(StopNotifyingUtxosChangedRequestMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedRequestMessage Clone() {
      return new StopNotifyingUtxosChangedRequestMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNotifyingUtxosChangedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNotifyingUtxosChangedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNotifyingUtxosChangedRequestMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopNotifyingUtxosChangedResponseMessage : pb::IMessage<StopNotifyingUtxosChangedResponseMessage> {
    private static readonly pb::MessageParser<StopNotifyingUtxosChangedResponseMessage> _parser = new pb::MessageParser<StopNotifyingUtxosChangedResponseMessage>(() => new StopNotifyingUtxosChangedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNotifyingUtxosChangedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedResponseMessage(StopNotifyingUtxosChangedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingUtxosChangedResponseMessage Clone() {
      return new StopNotifyingUtxosChangedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNotifyingUtxosChangedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNotifyingUtxosChangedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNotifyingUtxosChangedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetUtxosByAddressesRequestMessage requests all current UTXOs for the given kaspad addresses
  ///
  /// This call is only available when this kaspad was started with `--utxoindex`
  /// </summary>
  public sealed partial class GetUtxosByAddressesRequestMessage : pb::IMessage<GetUtxosByAddressesRequestMessage> {
    private static readonly pb::MessageParser<GetUtxosByAddressesRequestMessage> _parser = new pb::MessageParser<GetUtxosByAddressesRequestMessage>(() => new GetUtxosByAddressesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUtxosByAddressesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesRequestMessage(GetUtxosByAddressesRequestMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesRequestMessage Clone() {
      return new GetUtxosByAddressesRequestMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUtxosByAddressesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUtxosByAddressesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUtxosByAddressesRequestMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUtxosByAddressesResponseMessage : pb::IMessage<GetUtxosByAddressesResponseMessage> {
    private static readonly pb::MessageParser<GetUtxosByAddressesResponseMessage> _parser = new pb::MessageParser<GetUtxosByAddressesResponseMessage>(() => new GetUtxosByAddressesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUtxosByAddressesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesResponseMessage(GetUtxosByAddressesResponseMessage other) : this() {
      entries_ = other.entries_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUtxosByAddressesResponseMessage Clone() {
      return new GetUtxosByAddressesResponseMessage(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> entries_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosByAddressesEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUtxosByAddressesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUtxosByAddressesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUtxosByAddressesResponseMessage other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetBalanceByAddressRequest returns the total balance in unspent transactions towards a given address
  /// 
  /// This call is only available when this kaspad was started with `--utxoindex`
  /// </summary>
  public sealed partial class GetBalanceByAddressRequestMessage : pb::IMessage<GetBalanceByAddressRequestMessage> {
    private static readonly pb::MessageParser<GetBalanceByAddressRequestMessage> _parser = new pb::MessageParser<GetBalanceByAddressRequestMessage>(() => new GetBalanceByAddressRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceByAddressRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressRequestMessage(GetBalanceByAddressRequestMessage other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressRequestMessage Clone() {
      return new GetBalanceByAddressRequestMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceByAddressRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceByAddressRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceByAddressRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalanceByAddressResponseMessage : pb::IMessage<GetBalanceByAddressResponseMessage> {
    private static readonly pb::MessageParser<GetBalanceByAddressResponseMessage> _parser = new pb::MessageParser<GetBalanceByAddressResponseMessage>(() => new GetBalanceByAddressResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalanceByAddressResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressResponseMessage(GetBalanceByAddressResponseMessage other) : this() {
      balance_ = other.balance_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalanceByAddressResponseMessage Clone() {
      return new GetBalanceByAddressResponseMessage(this);
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private ulong balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalanceByAddressResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalanceByAddressResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Balance != other.Balance) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Balance != 0UL) hash ^= Balance.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Balance != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Balance);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Balance != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Balance);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalanceByAddressResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.Balance != 0UL) {
        Balance = other.Balance;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Balance = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalancesByAddressesRequestMessage : pb::IMessage<GetBalancesByAddressesRequestMessage> {
    private static readonly pb::MessageParser<GetBalancesByAddressesRequestMessage> _parser = new pb::MessageParser<GetBalancesByAddressesRequestMessage>(() => new GetBalancesByAddressesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalancesByAddressesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesRequestMessage(GetBalancesByAddressesRequestMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesRequestMessage Clone() {
      return new GetBalancesByAddressesRequestMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalancesByAddressesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalancesByAddressesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalancesByAddressesRequestMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalancesByAddressEntry : pb::IMessage<BalancesByAddressEntry> {
    private static readonly pb::MessageParser<BalancesByAddressEntry> _parser = new pb::MessageParser<BalancesByAddressEntry>(() => new BalancesByAddressEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalancesByAddressEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalancesByAddressEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalancesByAddressEntry(BalancesByAddressEntry other) : this() {
      address_ = other.address_;
      balance_ = other.balance_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalancesByAddressEntry Clone() {
      return new BalancesByAddressEntry(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private ulong balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalancesByAddressEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalancesByAddressEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (Balance != other.Balance) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Balance != 0UL) hash ^= Balance.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (Balance != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Balance);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Balance != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Balance);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalancesByAddressEntry other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Balance != 0UL) {
        Balance = other.Balance;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            Balance = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBalancesByAddressesResponseMessage : pb::IMessage<GetBalancesByAddressesResponseMessage> {
    private static readonly pb::MessageParser<GetBalancesByAddressesResponseMessage> _parser = new pb::MessageParser<GetBalancesByAddressesResponseMessage>(() => new GetBalancesByAddressesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBalancesByAddressesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesResponseMessage(GetBalancesByAddressesResponseMessage other) : this() {
      entries_ = other.entries_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBalancesByAddressesResponseMessage Clone() {
      return new GetBalancesByAddressesResponseMessage(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry> entries_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.BalancesByAddressEntry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBalancesByAddressesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBalancesByAddressesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBalancesByAddressesResponseMessage other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetVirtualSelectedParentBlueScoreRequestMessage requests the blue score of the current selected parent
  /// of the virtual block.
  /// </summary>
  public sealed partial class GetVirtualSelectedParentBlueScoreRequestMessage : pb::IMessage<GetVirtualSelectedParentBlueScoreRequestMessage> {
    private static readonly pb::MessageParser<GetVirtualSelectedParentBlueScoreRequestMessage> _parser = new pb::MessageParser<GetVirtualSelectedParentBlueScoreRequestMessage>(() => new GetVirtualSelectedParentBlueScoreRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVirtualSelectedParentBlueScoreRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreRequestMessage(GetVirtualSelectedParentBlueScoreRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreRequestMessage Clone() {
      return new GetVirtualSelectedParentBlueScoreRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVirtualSelectedParentBlueScoreRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVirtualSelectedParentBlueScoreRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVirtualSelectedParentBlueScoreRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetVirtualSelectedParentBlueScoreResponseMessage : pb::IMessage<GetVirtualSelectedParentBlueScoreResponseMessage> {
    private static readonly pb::MessageParser<GetVirtualSelectedParentBlueScoreResponseMessage> _parser = new pb::MessageParser<GetVirtualSelectedParentBlueScoreResponseMessage>(() => new GetVirtualSelectedParentBlueScoreResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVirtualSelectedParentBlueScoreResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreResponseMessage(GetVirtualSelectedParentBlueScoreResponseMessage other) : this() {
      blueScore_ = other.blueScore_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVirtualSelectedParentBlueScoreResponseMessage Clone() {
      return new GetVirtualSelectedParentBlueScoreResponseMessage(this);
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 1;
    private ulong blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVirtualSelectedParentBlueScoreResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVirtualSelectedParentBlueScoreResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlueScore != other.BlueScore) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlueScore != 0UL) hash ^= BlueScore.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlueScore != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BlueScore);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlueScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BlueScore);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVirtualSelectedParentBlueScoreResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.BlueScore != 0UL) {
        BlueScore = other.BlueScore;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlueScore = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyVirtualSelectedParentBlueScoreChangedRequestMessage registers this connection for
  /// virtualSelectedParentBlueScoreChanged notifications.
  ///
  /// See: VirtualSelectedParentBlueScoreChangedNotificationMessage
  /// </summary>
  public sealed partial class NotifyVirtualSelectedParentBlueScoreChangedRequestMessage : pb::IMessage<NotifyVirtualSelectedParentBlueScoreChangedRequestMessage> {
    private static readonly pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedRequestMessage> _parser = new pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedRequestMessage>(() => new NotifyVirtualSelectedParentBlueScoreChangedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedRequestMessage(NotifyVirtualSelectedParentBlueScoreChangedRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedRequestMessage Clone() {
      return new NotifyVirtualSelectedParentBlueScoreChangedRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualSelectedParentBlueScoreChangedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualSelectedParentBlueScoreChangedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualSelectedParentBlueScoreChangedRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyVirtualSelectedParentBlueScoreChangedResponseMessage : pb::IMessage<NotifyVirtualSelectedParentBlueScoreChangedResponseMessage> {
    private static readonly pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedResponseMessage> _parser = new pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedResponseMessage>(() => new NotifyVirtualSelectedParentBlueScoreChangedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualSelectedParentBlueScoreChangedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedResponseMessage(NotifyVirtualSelectedParentBlueScoreChangedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualSelectedParentBlueScoreChangedResponseMessage Clone() {
      return new NotifyVirtualSelectedParentBlueScoreChangedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualSelectedParentBlueScoreChangedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualSelectedParentBlueScoreChangedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualSelectedParentBlueScoreChangedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// VirtualSelectedParentBlueScoreChangedNotificationMessage is sent whenever the blue score
  /// of the virtual's selected parent changes.
  ///
  /// See NotifyVirtualSelectedParentBlueScoreChangedRequestMessage
  /// </summary>
  public sealed partial class VirtualSelectedParentBlueScoreChangedNotificationMessage : pb::IMessage<VirtualSelectedParentBlueScoreChangedNotificationMessage> {
    private static readonly pb::MessageParser<VirtualSelectedParentBlueScoreChangedNotificationMessage> _parser = new pb::MessageParser<VirtualSelectedParentBlueScoreChangedNotificationMessage>(() => new VirtualSelectedParentBlueScoreChangedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualSelectedParentBlueScoreChangedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentBlueScoreChangedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentBlueScoreChangedNotificationMessage(VirtualSelectedParentBlueScoreChangedNotificationMessage other) : this() {
      virtualSelectedParentBlueScore_ = other.virtualSelectedParentBlueScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualSelectedParentBlueScoreChangedNotificationMessage Clone() {
      return new VirtualSelectedParentBlueScoreChangedNotificationMessage(this);
    }

    /// <summary>Field number for the "virtualSelectedParentBlueScore" field.</summary>
    public const int VirtualSelectedParentBlueScoreFieldNumber = 1;
    private ulong virtualSelectedParentBlueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VirtualSelectedParentBlueScore {
      get { return virtualSelectedParentBlueScore_; }
      set {
        virtualSelectedParentBlueScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualSelectedParentBlueScoreChangedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualSelectedParentBlueScoreChangedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VirtualSelectedParentBlueScore != other.VirtualSelectedParentBlueScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VirtualSelectedParentBlueScore != 0UL) hash ^= VirtualSelectedParentBlueScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VirtualSelectedParentBlueScore != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VirtualSelectedParentBlueScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VirtualSelectedParentBlueScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VirtualSelectedParentBlueScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualSelectedParentBlueScoreChangedNotificationMessage other) {
      if (other == null) {
        return;
      }
      if (other.VirtualSelectedParentBlueScore != 0UL) {
        VirtualSelectedParentBlueScore = other.VirtualSelectedParentBlueScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VirtualSelectedParentBlueScore = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyVirtualDaaScoreChangedRequestMessage registers this connection for
  /// virtualDaaScoreChanged notifications.
  ///
  /// See: VirtualDaaScoreChangedNotificationMessage
  /// </summary>
  public sealed partial class NotifyVirtualDaaScoreChangedRequestMessage : pb::IMessage<NotifyVirtualDaaScoreChangedRequestMessage> {
    private static readonly pb::MessageParser<NotifyVirtualDaaScoreChangedRequestMessage> _parser = new pb::MessageParser<NotifyVirtualDaaScoreChangedRequestMessage>(() => new NotifyVirtualDaaScoreChangedRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualDaaScoreChangedRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedRequestMessage(NotifyVirtualDaaScoreChangedRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedRequestMessage Clone() {
      return new NotifyVirtualDaaScoreChangedRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualDaaScoreChangedRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualDaaScoreChangedRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualDaaScoreChangedRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyVirtualDaaScoreChangedResponseMessage : pb::IMessage<NotifyVirtualDaaScoreChangedResponseMessage> {
    private static readonly pb::MessageParser<NotifyVirtualDaaScoreChangedResponseMessage> _parser = new pb::MessageParser<NotifyVirtualDaaScoreChangedResponseMessage>(() => new NotifyVirtualDaaScoreChangedResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyVirtualDaaScoreChangedResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedResponseMessage(NotifyVirtualDaaScoreChangedResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyVirtualDaaScoreChangedResponseMessage Clone() {
      return new NotifyVirtualDaaScoreChangedResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyVirtualDaaScoreChangedResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyVirtualDaaScoreChangedResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyVirtualDaaScoreChangedResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// VirtualDaaScoreChangedNotificationMessage is sent whenever the DAA score
  /// of the virtual changes.
  ///
  /// See NotifyVirtualDaaScoreChangedRequestMessage
  /// </summary>
  public sealed partial class VirtualDaaScoreChangedNotificationMessage : pb::IMessage<VirtualDaaScoreChangedNotificationMessage> {
    private static readonly pb::MessageParser<VirtualDaaScoreChangedNotificationMessage> _parser = new pb::MessageParser<VirtualDaaScoreChangedNotificationMessage>(() => new VirtualDaaScoreChangedNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VirtualDaaScoreChangedNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualDaaScoreChangedNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualDaaScoreChangedNotificationMessage(VirtualDaaScoreChangedNotificationMessage other) : this() {
      virtualDaaScore_ = other.virtualDaaScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VirtualDaaScoreChangedNotificationMessage Clone() {
      return new VirtualDaaScoreChangedNotificationMessage(this);
    }

    /// <summary>Field number for the "virtualDaaScore" field.</summary>
    public const int VirtualDaaScoreFieldNumber = 1;
    private ulong virtualDaaScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong VirtualDaaScore {
      get { return virtualDaaScore_; }
      set {
        virtualDaaScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VirtualDaaScoreChangedNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VirtualDaaScoreChangedNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VirtualDaaScore != other.VirtualDaaScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VirtualDaaScore != 0UL) hash ^= VirtualDaaScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VirtualDaaScore != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(VirtualDaaScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VirtualDaaScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VirtualDaaScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VirtualDaaScoreChangedNotificationMessage other) {
      if (other == null) {
        return;
      }
      if (other.VirtualDaaScore != 0UL) {
        VirtualDaaScore = other.VirtualDaaScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VirtualDaaScore = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyPruningPointUTXOSetOverrideRequestMessage registers this connection for
  /// pruning point UTXO set override notifications.
  ///
  /// This call is only available when this kaspad was started with `--utxoindex`
  ///
  /// See: NotifyPruningPointUTXOSetOverrideResponseMessage
  /// </summary>
  public sealed partial class NotifyPruningPointUTXOSetOverrideRequestMessage : pb::IMessage<NotifyPruningPointUTXOSetOverrideRequestMessage> {
    private static readonly pb::MessageParser<NotifyPruningPointUTXOSetOverrideRequestMessage> _parser = new pb::MessageParser<NotifyPruningPointUTXOSetOverrideRequestMessage>(() => new NotifyPruningPointUTXOSetOverrideRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyPruningPointUTXOSetOverrideRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideRequestMessage(NotifyPruningPointUTXOSetOverrideRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideRequestMessage Clone() {
      return new NotifyPruningPointUTXOSetOverrideRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyPruningPointUTXOSetOverrideRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyPruningPointUTXOSetOverrideRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyPruningPointUTXOSetOverrideRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyPruningPointUTXOSetOverrideResponseMessage : pb::IMessage<NotifyPruningPointUTXOSetOverrideResponseMessage> {
    private static readonly pb::MessageParser<NotifyPruningPointUTXOSetOverrideResponseMessage> _parser = new pb::MessageParser<NotifyPruningPointUTXOSetOverrideResponseMessage>(() => new NotifyPruningPointUTXOSetOverrideResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyPruningPointUTXOSetOverrideResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideResponseMessage(NotifyPruningPointUTXOSetOverrideResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyPruningPointUTXOSetOverrideResponseMessage Clone() {
      return new NotifyPruningPointUTXOSetOverrideResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyPruningPointUTXOSetOverrideResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyPruningPointUTXOSetOverrideResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyPruningPointUTXOSetOverrideResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PruningPointUTXOSetOverrideNotificationMessage is sent whenever the UTXO index
  /// resets due to pruning point change via IBD.
  ///
  /// See NotifyPruningPointUTXOSetOverrideRequestMessage
  /// </summary>
  public sealed partial class PruningPointUTXOSetOverrideNotificationMessage : pb::IMessage<PruningPointUTXOSetOverrideNotificationMessage> {
    private static readonly pb::MessageParser<PruningPointUTXOSetOverrideNotificationMessage> _parser = new pb::MessageParser<PruningPointUTXOSetOverrideNotificationMessage>(() => new PruningPointUTXOSetOverrideNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PruningPointUTXOSetOverrideNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUTXOSetOverrideNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUTXOSetOverrideNotificationMessage(PruningPointUTXOSetOverrideNotificationMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PruningPointUTXOSetOverrideNotificationMessage Clone() {
      return new PruningPointUTXOSetOverrideNotificationMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PruningPointUTXOSetOverrideNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PruningPointUTXOSetOverrideNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PruningPointUTXOSetOverrideNotificationMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// StopNotifyingPruningPointUTXOSetOverrideRequestMessage unregisters this connection for
  /// pruning point UTXO set override notifications.
  ///
  /// This call is only available when this kaspad was started with `--utxoindex`
  ///
  /// See: PruningPointUTXOSetOverrideNotificationMessage
  /// </summary>
  public sealed partial class StopNotifyingPruningPointUTXOSetOverrideRequestMessage : pb::IMessage<StopNotifyingPruningPointUTXOSetOverrideRequestMessage> {
    private static readonly pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideRequestMessage> _parser = new pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideRequestMessage>(() => new StopNotifyingPruningPointUTXOSetOverrideRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideRequestMessage(StopNotifyingPruningPointUTXOSetOverrideRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideRequestMessage Clone() {
      return new StopNotifyingPruningPointUTXOSetOverrideRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNotifyingPruningPointUTXOSetOverrideRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNotifyingPruningPointUTXOSetOverrideRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNotifyingPruningPointUTXOSetOverrideRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class StopNotifyingPruningPointUTXOSetOverrideResponseMessage : pb::IMessage<StopNotifyingPruningPointUTXOSetOverrideResponseMessage> {
    private static readonly pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideResponseMessage> _parser = new pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideResponseMessage>(() => new StopNotifyingPruningPointUTXOSetOverrideResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNotifyingPruningPointUTXOSetOverrideResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideResponseMessage(StopNotifyingPruningPointUTXOSetOverrideResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNotifyingPruningPointUTXOSetOverrideResponseMessage Clone() {
      return new StopNotifyingPruningPointUTXOSetOverrideResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNotifyingPruningPointUTXOSetOverrideResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNotifyingPruningPointUTXOSetOverrideResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNotifyingPruningPointUTXOSetOverrideResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// BanRequestMessage bans the given ip.
  /// </summary>
  public sealed partial class BanRequestMessage : pb::IMessage<BanRequestMessage> {
    private static readonly pb::MessageParser<BanRequestMessage> _parser = new pb::MessageParser<BanRequestMessage>(() => new BanRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BanRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequestMessage(BanRequestMessage other) : this() {
      ip_ = other.ip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRequestMessage Clone() {
      return new BanRequestMessage(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BanRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BanRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BanRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BanResponseMessage : pb::IMessage<BanResponseMessage> {
    private static readonly pb::MessageParser<BanResponseMessage> _parser = new pb::MessageParser<BanResponseMessage>(() => new BanResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BanResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponseMessage(BanResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanResponseMessage Clone() {
      return new BanResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BanResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BanResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BanResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UnbanRequestMessage unbans the given ip.
  /// </summary>
  public sealed partial class UnbanRequestMessage : pb::IMessage<UnbanRequestMessage> {
    private static readonly pb::MessageParser<UnbanRequestMessage> _parser = new pb::MessageParser<UnbanRequestMessage>(() => new UnbanRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnbanRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanRequestMessage(UnbanRequestMessage other) : this() {
      ip_ = other.ip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanRequestMessage Clone() {
      return new UnbanRequestMessage(this);
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 1;
    private string ip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnbanRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnbanRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ip != other.Ip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ip.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnbanRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnbanResponseMessage : pb::IMessage<UnbanResponseMessage> {
    private static readonly pb::MessageParser<UnbanResponseMessage> _parser = new pb::MessageParser<UnbanResponseMessage>(() => new UnbanResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnbanResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanResponseMessage(UnbanResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnbanResponseMessage Clone() {
      return new UnbanResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnbanResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnbanResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnbanResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetInfoRequestMessage returns info about the node.
  /// </summary>
  public sealed partial class GetInfoRequestMessage : pb::IMessage<GetInfoRequestMessage> {
    private static readonly pb::MessageParser<GetInfoRequestMessage> _parser = new pb::MessageParser<GetInfoRequestMessage>(() => new GetInfoRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequestMessage(GetInfoRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoRequestMessage Clone() {
      return new GetInfoRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetInfoResponseMessage : pb::IMessage<GetInfoResponseMessage> {
    private static readonly pb::MessageParser<GetInfoResponseMessage> _parser = new pb::MessageParser<GetInfoResponseMessage>(() => new GetInfoResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInfoResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponseMessage(GetInfoResponseMessage other) : this() {
      p2PId_ = other.p2PId_;
      mempoolSize_ = other.mempoolSize_;
      serverVersion_ = other.serverVersion_;
      isUtxoIndexed_ = other.isUtxoIndexed_;
      isSynced_ = other.isSynced_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInfoResponseMessage Clone() {
      return new GetInfoResponseMessage(this);
    }

    /// <summary>Field number for the "p2pId" field.</summary>
    public const int P2PIdFieldNumber = 1;
    private string p2PId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string P2PId {
      get { return p2PId_; }
      set {
        p2PId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mempoolSize" field.</summary>
    public const int MempoolSizeFieldNumber = 2;
    private ulong mempoolSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MempoolSize {
      get { return mempoolSize_; }
      set {
        mempoolSize_ = value;
      }
    }

    /// <summary>Field number for the "serverVersion" field.</summary>
    public const int ServerVersionFieldNumber = 3;
    private string serverVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerVersion {
      get { return serverVersion_; }
      set {
        serverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isUtxoIndexed" field.</summary>
    public const int IsUtxoIndexedFieldNumber = 4;
    private bool isUtxoIndexed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUtxoIndexed {
      get { return isUtxoIndexed_; }
      set {
        isUtxoIndexed_ = value;
      }
    }

    /// <summary>Field number for the "isSynced" field.</summary>
    public const int IsSyncedFieldNumber = 5;
    private bool isSynced_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSynced {
      get { return isSynced_; }
      set {
        isSynced_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInfoResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInfoResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (P2PId != other.P2PId) return false;
      if (MempoolSize != other.MempoolSize) return false;
      if (ServerVersion != other.ServerVersion) return false;
      if (IsUtxoIndexed != other.IsUtxoIndexed) return false;
      if (IsSynced != other.IsSynced) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (P2PId.Length != 0) hash ^= P2PId.GetHashCode();
      if (MempoolSize != 0UL) hash ^= MempoolSize.GetHashCode();
      if (ServerVersion.Length != 0) hash ^= ServerVersion.GetHashCode();
      if (IsUtxoIndexed != false) hash ^= IsUtxoIndexed.GetHashCode();
      if (IsSynced != false) hash ^= IsSynced.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (P2PId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(P2PId);
      }
      if (MempoolSize != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MempoolSize);
      }
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerVersion);
      }
      if (IsUtxoIndexed != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsUtxoIndexed);
      }
      if (IsSynced != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsSynced);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (P2PId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(P2PId);
      }
      if (MempoolSize != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MempoolSize);
      }
      if (ServerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerVersion);
      }
      if (IsUtxoIndexed != false) {
        size += 1 + 1;
      }
      if (IsSynced != false) {
        size += 1 + 1;
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInfoResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.P2PId.Length != 0) {
        P2PId = other.P2PId;
      }
      if (other.MempoolSize != 0UL) {
        MempoolSize = other.MempoolSize;
      }
      if (other.ServerVersion.Length != 0) {
        ServerVersion = other.ServerVersion;
      }
      if (other.IsUtxoIndexed != false) {
        IsUtxoIndexed = other.IsUtxoIndexed;
      }
      if (other.IsSynced != false) {
        IsSynced = other.IsSynced;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            P2PId = input.ReadString();
            break;
          }
          case 16: {
            MempoolSize = input.ReadUInt64();
            break;
          }
          case 26: {
            ServerVersion = input.ReadString();
            break;
          }
          case 32: {
            IsUtxoIndexed = input.ReadBool();
            break;
          }
          case 40: {
            IsSynced = input.ReadBool();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EstimateNetworkHashesPerSecondRequestMessage : pb::IMessage<EstimateNetworkHashesPerSecondRequestMessage> {
    private static readonly pb::MessageParser<EstimateNetworkHashesPerSecondRequestMessage> _parser = new pb::MessageParser<EstimateNetworkHashesPerSecondRequestMessage>(() => new EstimateNetworkHashesPerSecondRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstimateNetworkHashesPerSecondRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondRequestMessage(EstimateNetworkHashesPerSecondRequestMessage other) : this() {
      windowSize_ = other.windowSize_;
      startHash_ = other.startHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondRequestMessage Clone() {
      return new EstimateNetworkHashesPerSecondRequestMessage(this);
    }

    /// <summary>Field number for the "windowSize" field.</summary>
    public const int WindowSizeFieldNumber = 1;
    private uint windowSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WindowSize {
      get { return windowSize_; }
      set {
        windowSize_ = value;
      }
    }

    /// <summary>Field number for the "startHash" field.</summary>
    public const int StartHashFieldNumber = 2;
    private string startHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartHash {
      get { return startHash_; }
      set {
        startHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstimateNetworkHashesPerSecondRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstimateNetworkHashesPerSecondRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WindowSize != other.WindowSize) return false;
      if (StartHash != other.StartHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WindowSize != 0) hash ^= WindowSize.GetHashCode();
      if (StartHash.Length != 0) hash ^= StartHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WindowSize != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(WindowSize);
      }
      if (StartHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WindowSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WindowSize);
      }
      if (StartHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstimateNetworkHashesPerSecondRequestMessage other) {
      if (other == null) {
        return;
      }
      if (other.WindowSize != 0) {
        WindowSize = other.WindowSize;
      }
      if (other.StartHash.Length != 0) {
        StartHash = other.StartHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WindowSize = input.ReadUInt32();
            break;
          }
          case 18: {
            StartHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EstimateNetworkHashesPerSecondResponseMessage : pb::IMessage<EstimateNetworkHashesPerSecondResponseMessage> {
    private static readonly pb::MessageParser<EstimateNetworkHashesPerSecondResponseMessage> _parser = new pb::MessageParser<EstimateNetworkHashesPerSecondResponseMessage>(() => new EstimateNetworkHashesPerSecondResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstimateNetworkHashesPerSecondResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondResponseMessage(EstimateNetworkHashesPerSecondResponseMessage other) : this() {
      networkHashesPerSecond_ = other.networkHashesPerSecond_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstimateNetworkHashesPerSecondResponseMessage Clone() {
      return new EstimateNetworkHashesPerSecondResponseMessage(this);
    }

    /// <summary>Field number for the "networkHashesPerSecond" field.</summary>
    public const int NetworkHashesPerSecondFieldNumber = 1;
    private ulong networkHashesPerSecond_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NetworkHashesPerSecond {
      get { return networkHashesPerSecond_; }
      set {
        networkHashesPerSecond_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstimateNetworkHashesPerSecondResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstimateNetworkHashesPerSecondResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkHashesPerSecond != other.NetworkHashesPerSecond) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkHashesPerSecond != 0UL) hash ^= NetworkHashesPerSecond.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkHashesPerSecond != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(NetworkHashesPerSecond);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkHashesPerSecond != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NetworkHashesPerSecond);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstimateNetworkHashesPerSecondResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.NetworkHashesPerSecond != 0UL) {
        NetworkHashesPerSecond = other.NetworkHashesPerSecond;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NetworkHashesPerSecond = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NotifyNewBlockTemplateRequestMessage registers this connection for
  /// NewBlockTemplate notifications.
  ///
  /// See: NewBlockTemplateNotificationMessage
  /// </summary>
  public sealed partial class NotifyNewBlockTemplateRequestMessage : pb::IMessage<NotifyNewBlockTemplateRequestMessage> {
    private static readonly pb::MessageParser<NotifyNewBlockTemplateRequestMessage> _parser = new pb::MessageParser<NotifyNewBlockTemplateRequestMessage>(() => new NotifyNewBlockTemplateRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyNewBlockTemplateRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateRequestMessage(NotifyNewBlockTemplateRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateRequestMessage Clone() {
      return new NotifyNewBlockTemplateRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyNewBlockTemplateRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyNewBlockTemplateRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyNewBlockTemplateRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NotifyNewBlockTemplateResponseMessage : pb::IMessage<NotifyNewBlockTemplateResponseMessage> {
    private static readonly pb::MessageParser<NotifyNewBlockTemplateResponseMessage> _parser = new pb::MessageParser<NotifyNewBlockTemplateResponseMessage>(() => new NotifyNewBlockTemplateResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotifyNewBlockTemplateResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateResponseMessage(NotifyNewBlockTemplateResponseMessage other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotifyNewBlockTemplateResponseMessage Clone() {
      return new NotifyNewBlockTemplateResponseMessage(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotifyNewBlockTemplateResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotifyNewBlockTemplateResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotifyNewBlockTemplateResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NewBlockTemplateNotificationMessage is sent whenever a new updated block template is
  /// available for miners.
  ///
  /// See NotifyNewBlockTemplateRequestMessage
  /// </summary>
  public sealed partial class NewBlockTemplateNotificationMessage : pb::IMessage<NewBlockTemplateNotificationMessage> {
    private static readonly pb::MessageParser<NewBlockTemplateNotificationMessage> _parser = new pb::MessageParser<NewBlockTemplateNotificationMessage>(() => new NewBlockTemplateNotificationMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewBlockTemplateNotificationMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewBlockTemplateNotificationMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewBlockTemplateNotificationMessage(NewBlockTemplateNotificationMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewBlockTemplateNotificationMessage Clone() {
      return new NewBlockTemplateNotificationMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewBlockTemplateNotificationMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewBlockTemplateNotificationMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewBlockTemplateNotificationMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class MempoolEntryByAddress : pb::IMessage<MempoolEntryByAddress> {
    private static readonly pb::MessageParser<MempoolEntryByAddress> _parser = new pb::MessageParser<MempoolEntryByAddress>(() => new MempoolEntryByAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MempoolEntryByAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntryByAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntryByAddress(MempoolEntryByAddress other) : this() {
      address_ = other.address_;
      sending_ = other.sending_.Clone();
      receiving_ = other.receiving_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolEntryByAddress Clone() {
      return new MempoolEntryByAddress(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sending" field.</summary>
    public const int SendingFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> _repeated_sending_codec
        = pb::FieldCodec.ForMessage(18, global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> sending_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> Sending {
      get { return sending_; }
    }

    /// <summary>Field number for the "receiving" field.</summary>
    public const int ReceivingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> _repeated_receiving_codec
        = pb::FieldCodec.ForMessage(26, global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> receiving_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntry> Receiving {
      get { return receiving_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MempoolEntryByAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MempoolEntryByAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if(!sending_.Equals(other.sending_)) return false;
      if(!receiving_.Equals(other.receiving_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      hash ^= sending_.GetHashCode();
      hash ^= receiving_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      sending_.WriteTo(output, _repeated_sending_codec);
      receiving_.WriteTo(output, _repeated_receiving_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      size += sending_.CalculateSize(_repeated_sending_codec);
      size += receiving_.CalculateSize(_repeated_receiving_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MempoolEntryByAddress other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      sending_.Add(other.sending_);
      receiving_.Add(other.receiving_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            sending_.AddEntriesFrom(input, _repeated_sending_codec);
            break;
          }
          case 26: {
            receiving_.AddEntriesFrom(input, _repeated_receiving_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMempoolEntriesByAddressesRequestMessage : pb::IMessage<GetMempoolEntriesByAddressesRequestMessage> {
    private static readonly pb::MessageParser<GetMempoolEntriesByAddressesRequestMessage> _parser = new pb::MessageParser<GetMempoolEntriesByAddressesRequestMessage>(() => new GetMempoolEntriesByAddressesRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntriesByAddressesRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesRequestMessage(GetMempoolEntriesByAddressesRequestMessage other) : this() {
      addresses_ = other.addresses_.Clone();
      includeOrphanPool_ = other.includeOrphanPool_;
      filterTransactionPool_ = other.filterTransactionPool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesRequestMessage Clone() {
      return new GetMempoolEntriesByAddressesRequestMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    /// <summary>Field number for the "includeOrphanPool" field.</summary>
    public const int IncludeOrphanPoolFieldNumber = 2;
    private bool includeOrphanPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeOrphanPool {
      get { return includeOrphanPool_; }
      set {
        includeOrphanPool_ = value;
      }
    }

    /// <summary>Field number for the "filterTransactionPool" field.</summary>
    public const int FilterTransactionPoolFieldNumber = 3;
    private bool filterTransactionPool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FilterTransactionPool {
      get { return filterTransactionPool_; }
      set {
        filterTransactionPool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntriesByAddressesRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntriesByAddressesRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      if (IncludeOrphanPool != other.IncludeOrphanPool) return false;
      if (FilterTransactionPool != other.FilterTransactionPool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (IncludeOrphanPool != false) hash ^= IncludeOrphanPool.GetHashCode();
      if (FilterTransactionPool != false) hash ^= FilterTransactionPool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (IncludeOrphanPool != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeOrphanPool);
      }
      if (FilterTransactionPool != false) {
        output.WriteRawTag(24);
        output.WriteBool(FilterTransactionPool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (IncludeOrphanPool != false) {
        size += 1 + 1;
      }
      if (FilterTransactionPool != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntriesByAddressesRequestMessage other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      if (other.IncludeOrphanPool != false) {
        IncludeOrphanPool = other.IncludeOrphanPool;
      }
      if (other.FilterTransactionPool != false) {
        FilterTransactionPool = other.FilterTransactionPool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
          case 16: {
            IncludeOrphanPool = input.ReadBool();
            break;
          }
          case 24: {
            FilterTransactionPool = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMempoolEntriesByAddressesResponseMessage : pb::IMessage<GetMempoolEntriesByAddressesResponseMessage> {
    private static readonly pb::MessageParser<GetMempoolEntriesByAddressesResponseMessage> _parser = new pb::MessageParser<GetMempoolEntriesByAddressesResponseMessage>(() => new GetMempoolEntriesByAddressesResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolEntriesByAddressesResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesResponseMessage(GetMempoolEntriesByAddressesResponseMessage other) : this() {
      entries_ = other.entries_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolEntriesByAddressesResponseMessage Clone() {
      return new GetMempoolEntriesByAddressesResponseMessage(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress.Parser);
    private readonly pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress> entries_ = new pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Miningcore.Blockchain.Kaspa.Kaspad.MempoolEntryByAddress> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolEntriesByAddressesResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolEntriesByAddressesResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolEntriesByAddressesResponseMessage other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCoinSupplyRequestMessage : pb::IMessage<GetCoinSupplyRequestMessage> {
    private static readonly pb::MessageParser<GetCoinSupplyRequestMessage> _parser = new pb::MessageParser<GetCoinSupplyRequestMessage>(() => new GetCoinSupplyRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCoinSupplyRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyRequestMessage(GetCoinSupplyRequestMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyRequestMessage Clone() {
      return new GetCoinSupplyRequestMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCoinSupplyRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCoinSupplyRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCoinSupplyRequestMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetCoinSupplyResponseMessage : pb::IMessage<GetCoinSupplyResponseMessage> {
    private static readonly pb::MessageParser<GetCoinSupplyResponseMessage> _parser = new pb::MessageParser<GetCoinSupplyResponseMessage>(() => new GetCoinSupplyResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCoinSupplyResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyResponseMessage(GetCoinSupplyResponseMessage other) : this() {
      maxSompi_ = other.maxSompi_;
      circulatingSompi_ = other.circulatingSompi_;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCoinSupplyResponseMessage Clone() {
      return new GetCoinSupplyResponseMessage(this);
    }

    /// <summary>Field number for the "maxSompi" field.</summary>
    public const int MaxSompiFieldNumber = 1;
    private ulong maxSompi_;
    /// <summary>
    /// note: this is a hard coded maxSupply, actual maxSupply is expected to deviate by upto -5%, but cannot be measured exactly.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxSompi {
      get { return maxSompi_; }
      set {
        maxSompi_ = value;
      }
    }

    /// <summary>Field number for the "circulatingSompi" field.</summary>
    public const int CirculatingSompiFieldNumber = 2;
    private ulong circulatingSompi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CirculatingSompi {
      get { return circulatingSompi_; }
      set {
        circulatingSompi_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1000;
    private global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCoinSupplyResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCoinSupplyResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxSompi != other.MaxSompi) return false;
      if (CirculatingSompi != other.CirculatingSompi) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxSompi != 0UL) hash ^= MaxSompi.GetHashCode();
      if (CirculatingSompi != 0UL) hash ^= CirculatingSompi.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxSompi != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MaxSompi);
      }
      if (CirculatingSompi != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(CirculatingSompi);
      }
      if (error_ != null) {
        output.WriteRawTag(194, 62);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxSompi != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxSompi);
      }
      if (CirculatingSompi != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CirculatingSompi);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCoinSupplyResponseMessage other) {
      if (other == null) {
        return;
      }
      if (other.MaxSompi != 0UL) {
        MaxSompi = other.MaxSompi;
      }
      if (other.CirculatingSompi != 0UL) {
        CirculatingSompi = other.CirculatingSompi;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxSompi = input.ReadUInt64();
            break;
          }
          case 16: {
            CirculatingSompi = input.ReadUInt64();
            break;
          }
          case 8002: {
            if (error_ == null) {
              Error = new global::Miningcore.Blockchain.Kaspa.Kaspad.RPCError();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

namespace Miningcore.Blockchain.Kaspa.Kaspad {

  using pb = global::Google.Protobuf;
  using pbc = global::Google.Protobuf.Collections;
  using pbr = global::Google.Protobuf.Reflection;
  using scg = global::System.Collections.Generic;

  /// <summary>Holder for reflection information generated from messages.proto</summary>
  public static partial class MessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXNzYWdlcy5wcm90bxIJcHJvdG93aXJlGglwMnAucHJvdG8aCXJwYy5w",
            "cm90byLRUgoNS2FzcGFkTWVzc2FnZRIwCglhZGRyZXNzZXMYASABKAsyGy5w",
            "cm90b3dpcmUuQWRkcmVzc2VzTWVzc2FnZUgAEigKBWJsb2NrGAIgASgLMhcu",
            "cHJvdG93aXJlLkJsb2NrTWVzc2FnZUgAEjQKC3RyYW5zYWN0aW9uGAMgASgL",
            "Mh0ucHJvdG93aXJlLlRyYW5zYWN0aW9uTWVzc2FnZUgAEjYKDGJsb2NrTG9j",
            "YXRvchgFIAEoCzIeLnByb3Rvd2lyZS5CbG9ja0xvY2F0b3JNZXNzYWdlSAAS",
            "PgoQcmVxdWVzdEFkZHJlc3NlcxgGIAEoCzIiLnByb3Rvd2lyZS5SZXF1ZXN0",
            "QWRkcmVzc2VzTWVzc2FnZUgAEkIKEnJlcXVlc3RSZWxheUJsb2NrcxgKIAEo",
            "CzIkLnByb3Rvd2lyZS5SZXF1ZXN0UmVsYXlCbG9ja3NNZXNzYWdlSAASRAoT",
            "cmVxdWVzdFRyYW5zYWN0aW9ucxgMIAEoCzIlLnByb3Rvd2lyZS5SZXF1ZXN0",
            "VHJhbnNhY3Rpb25zTWVzc2FnZUgAEisKCGliZEJsb2NrGA0gASgLMhcucHJv",
            "dG93aXJlLkJsb2NrTWVzc2FnZUgAEjgKDWludlJlbGF5QmxvY2sYDiABKAsy",
            "Hy5wcm90b3dpcmUuSW52UmVsYXlCbG9ja01lc3NhZ2VIABI8Cg9pbnZUcmFu",
            "c2FjdGlvbnMYDyABKAsyIS5wcm90b3dpcmUuSW52VHJhbnNhY3Rpb25zTWVz",
            "c2FnZUgAEiYKBHBpbmcYECABKAsyFi5wcm90b3dpcmUuUGluZ01lc3NhZ2VI",
            "ABImCgRwb25nGBEgASgLMhYucHJvdG93aXJlLlBvbmdNZXNzYWdlSAASKgoG",
            "dmVyYWNrGBMgASgLMhgucHJvdG93aXJlLlZlcmFja01lc3NhZ2VIABIsCgd2",
            "ZXJzaW9uGBQgASgLMhkucHJvdG93aXJlLlZlcnNpb25NZXNzYWdlSAASRAoT",
            "dHJhbnNhY3Rpb25Ob3RGb3VuZBgVIAEoCzIlLnByb3Rvd2lyZS5UcmFuc2Fj",
            "dGlvbk5vdEZvdW5kTWVzc2FnZUgAEioKBnJlamVjdBgWIAEoCzIYLnByb3Rv",
            "d2lyZS5SZWplY3RNZXNzYWdlSAASTgoYcHJ1bmluZ1BvaW50VXR4b1NldENo",
            "dW5rGBkgASgLMioucHJvdG93aXJlLlBydW5pbmdQb2ludFV0eG9TZXRDaHVu",
            "a01lc3NhZ2VIABI+ChByZXF1ZXN0SUJEQmxvY2tzGBogASgLMiIucHJvdG93",
            "aXJlLlJlcXVlc3RJQkRCbG9ja3NNZXNzYWdlSAASSgoWdW5leHBlY3RlZFBy",
            "dW5pbmdQb2ludBgbIAEoCzIoLnByb3Rvd2lyZS5VbmV4cGVjdGVkUHJ1bmlu",
            "Z1BvaW50TWVzc2FnZUgAEjwKD2liZEJsb2NrTG9jYXRvchgeIAEoCzIhLnBy",
            "b3Rvd2lyZS5JYmRCbG9ja0xvY2F0b3JNZXNzYWdlSAASUgoaaWJkQmxvY2tM",
            "b2NhdG9ySGlnaGVzdEhhc2gYHyABKAsyLC5wcm90b3dpcmUuSWJkQmxvY2tM",
            "b2NhdG9ySGlnaGVzdEhhc2hNZXNzYWdlSAASZAojcmVxdWVzdE5leHRQcnVu",
            "aW5nUG9pbnRVdHhvU2V0Q2h1bmsYISABKAsyNS5wcm90b3dpcmUuUmVxdWVz",
            "dE5leHRQcnVuaW5nUG9pbnRVdHhvU2V0Q2h1bmtNZXNzYWdlSAASWAodZG9u",
            "ZVBydW5pbmdQb2ludFV0eG9TZXRDaHVua3MYIiABKAsyLy5wcm90b3dpcmUu",
            "RG9uZVBydW5pbmdQb2ludFV0eG9TZXRDaHVua3NNZXNzYWdlSAASYgoiaWJk",
            "QmxvY2tMb2NhdG9ySGlnaGVzdEhhc2hOb3RGb3VuZBgjIAEoCzI0LnByb3Rv",
            "d2lyZS5JYmRCbG9ja0xvY2F0b3JIaWdoZXN0SGFzaE5vdEZvdW5kTWVzc2Fn",
            "ZUgAEkYKFGJsb2NrV2l0aFRydXN0ZWREYXRhGCQgASgLMiYucHJvdG93aXJl",
            "LkJsb2NrV2l0aFRydXN0ZWREYXRhTWVzc2FnZUgAElAKGWRvbmVCbG9ja3NX",
            "aXRoVHJ1c3RlZERhdGEYJSABKAsyKy5wcm90b3dpcmUuRG9uZUJsb2Nrc1dp",
            "dGhUcnVzdGVkRGF0YU1lc3NhZ2VIABJgCiFyZXF1ZXN0UHJ1bmluZ1BvaW50",
            "QW5kSXRzQW50aWNvbmUYKCABKAsyMy5wcm90b3dpcmUuUmVxdWVzdFBydW5p",
            "bmdQb2ludEFuZEl0c0FudGljb25lTWVzc2FnZUgAEjYKDGJsb2NrSGVhZGVy",
            "cxgpIAEoCzIeLnByb3Rvd2lyZS5CbG9ja0hlYWRlcnNNZXNzYWdlSAASQgoS",
            "cmVxdWVzdE5leHRIZWFkZXJzGCogASgLMiQucHJvdG93aXJlLlJlcXVlc3RO",
            "ZXh0SGVhZGVyc01lc3NhZ2VIABI0CgtEb25lSGVhZGVycxgrIAEoCzIdLnBy",
            "b3Rvd2lyZS5Eb25lSGVhZGVyc01lc3NhZ2VIABJSChpyZXF1ZXN0UHJ1bmlu",
            "Z1BvaW50VVRYT1NldBgsIAEoCzIsLnByb3Rvd2lyZS5SZXF1ZXN0UHJ1bmlu",
            "Z1BvaW50VVRYT1NldE1lc3NhZ2VIABI6Cg5yZXF1ZXN0SGVhZGVycxgtIAEo",
            "CzIgLnByb3Rvd2lyZS5SZXF1ZXN0SGVhZGVyc01lc3NhZ2VIABJEChNyZXF1",
            "ZXN0QmxvY2tMb2NhdG9yGC4gASgLMiUucHJvdG93aXJlLlJlcXVlc3RCbG9j",
            "a0xvY2F0b3JNZXNzYWdlSAASOAoNcHJ1bmluZ1BvaW50cxgvIAEoCzIfLnBy",
            "b3Rvd2lyZS5QcnVuaW5nUG9pbnRzTWVzc2FnZUgAEk4KGHJlcXVlc3RQcnVu",
            "aW5nUG9pbnRQcm9vZhgwIAEoCzIqLnByb3Rvd2lyZS5SZXF1ZXN0UHJ1bmlu",
            "Z1BvaW50UHJvb2ZNZXNzYWdlSAASQAoRcHJ1bmluZ1BvaW50UHJvb2YYMSAB",
            "KAsyIy5wcm90b3dpcmUuUHJ1bmluZ1BvaW50UHJvb2ZNZXNzYWdlSAASKAoF",
            "cmVhZHkYMiABKAsyFy5wcm90b3dpcmUuUmVhZHlNZXNzYWdlSAASSgoWYmxv",
            "Y2tXaXRoVHJ1c3RlZERhdGFWNBgzIAEoCzIoLnByb3Rvd2lyZS5CbG9ja1dp",
            "dGhUcnVzdGVkRGF0YVY0TWVzc2FnZUgAEjQKC3RydXN0ZWREYXRhGDQgASgL",
            "Mh0ucHJvdG93aXJlLlRydXN0ZWREYXRhTWVzc2FnZUgAElQKG3JlcXVlc3RJ",
            "QkRDaGFpbkJsb2NrTG9jYXRvchg1IAEoCzItLnByb3Rvd2lyZS5SZXF1ZXN0",
            "SUJEQ2hhaW5CbG9ja0xvY2F0b3JNZXNzYWdlSAASRgoUaWJkQ2hhaW5CbG9j",
            "a0xvY2F0b3IYNiABKAsyJi5wcm90b3dpcmUuSWJkQ2hhaW5CbG9ja0xvY2F0",
            "b3JNZXNzYWdlSAASPAoPcmVxdWVzdEFudGljb25lGDcgASgLMiEucHJvdG93",
            "aXJlLlJlcXVlc3RBbnRpY29uZU1lc3NhZ2VIABJ0CityZXF1ZXN0TmV4dFBy",
            "dW5pbmdQb2ludEFuZEl0c0FudGljb25lQmxvY2tzGDggASgLMj0ucHJvdG93",
            "aXJlLlJlcXVlc3ROZXh0UHJ1bmluZ1BvaW50QW5kSXRzQW50aWNvbmVCbG9j",
            "a3NNZXNzYWdlSAASTwoYZ2V0Q3VycmVudE5ldHdvcmtSZXF1ZXN0GOkHIAEo",
            "CzIqLnByb3Rvd2lyZS5HZXRDdXJyZW50TmV0d29ya1JlcXVlc3RNZXNzYWdl",
            "SAASUQoZZ2V0Q3VycmVudE5ldHdvcmtSZXNwb25zZRjqByABKAsyKy5wcm90",
            "b3dpcmUuR2V0Q3VycmVudE5ldHdvcmtSZXNwb25zZU1lc3NhZ2VIABJDChJz",
            "dWJtaXRCbG9ja1JlcXVlc3QY6wcgASgLMiQucHJvdG93aXJlLlN1Ym1pdEJs",
            "b2NrUmVxdWVzdE1lc3NhZ2VIABJFChNzdWJtaXRCbG9ja1Jlc3BvbnNlGOwH",
            "IAEoCzIlLnByb3Rvd2lyZS5TdWJtaXRCbG9ja1Jlc3BvbnNlTWVzc2FnZUgA",
            "Ek0KF2dldEJsb2NrVGVtcGxhdGVSZXF1ZXN0GO0HIAEoCzIpLnByb3Rvd2ly",
            "ZS5HZXRCbG9ja1RlbXBsYXRlUmVxdWVzdE1lc3NhZ2VIABJPChhnZXRCbG9j",
            "a1RlbXBsYXRlUmVzcG9uc2UY7gcgASgLMioucHJvdG93aXJlLkdldEJsb2Nr",
            "VGVtcGxhdGVSZXNwb25zZU1lc3NhZ2VIABJNChdub3RpZnlCbG9ja0FkZGVk",
            "UmVxdWVzdBjvByABKAsyKS5wcm90b3dpcmUuTm90aWZ5QmxvY2tBZGRlZFJl",
            "cXVlc3RNZXNzYWdlSAASTwoYbm90aWZ5QmxvY2tBZGRlZFJlc3BvbnNlGPAH",
            "IAEoCzIqLnByb3Rvd2lyZS5Ob3RpZnlCbG9ja0FkZGVkUmVzcG9uc2VNZXNz",
            "YWdlSAASSwoWYmxvY2tBZGRlZE5vdGlmaWNhdGlvbhjxByABKAsyKC5wcm90",
            "b3dpcmUuQmxvY2tBZGRlZE5vdGlmaWNhdGlvbk1lc3NhZ2VIABJNChdnZXRQ",
            "ZWVyQWRkcmVzc2VzUmVxdWVzdBjyByABKAsyKS5wcm90b3dpcmUuR2V0UGVl",
            "ckFkZHJlc3Nlc1JlcXVlc3RNZXNzYWdlSAASTwoYZ2V0UGVlckFkZHJlc3Nl",
            "c1Jlc3BvbnNlGPMHIAEoCzIqLnByb3Rvd2lyZS5HZXRQZWVyQWRkcmVzc2Vz",
            "UmVzcG9uc2VNZXNzYWdlSAASUQoZZ2V0U2VsZWN0ZWRUaXBIYXNoUmVxdWVz",
            "dBj0ByABKAsyKy5wcm90b3dpcmUuR2V0U2VsZWN0ZWRUaXBIYXNoUmVxdWVz",
            "dE1lc3NhZ2VIABJTChpnZXRTZWxlY3RlZFRpcEhhc2hSZXNwb25zZRj1ByAB",
            "KAsyLC5wcm90b3dpcmUuR2V0U2VsZWN0ZWRUaXBIYXNoUmVzcG9uc2VNZXNz",
            "YWdlSAASSwoWZ2V0TWVtcG9vbEVudHJ5UmVxdWVzdBj2ByABKAsyKC5wcm90",
            "b3dpcmUuR2V0TWVtcG9vbEVudHJ5UmVxdWVzdE1lc3NhZ2VIABJNChdnZXRN",
            "ZW1wb29sRW50cnlSZXNwb25zZRj3ByABKAsyKS5wcm90b3dpcmUuR2V0TWVt",
            "cG9vbEVudHJ5UmVzcG9uc2VNZXNzYWdlSAASVQobZ2V0Q29ubmVjdGVkUGVl",
            "ckluZm9SZXF1ZXN0GPgHIAEoCzItLnByb3Rvd2lyZS5HZXRDb25uZWN0ZWRQ",
            "ZWVySW5mb1JlcXVlc3RNZXNzYWdlSAASVwocZ2V0Q29ubmVjdGVkUGVlcklu",
            "Zm9SZXNwb25zZRj5ByABKAsyLi5wcm90b3dpcmUuR2V0Q29ubmVjdGVkUGVl",
            "ckluZm9SZXNwb25zZU1lc3NhZ2VIABI7Cg5hZGRQZWVyUmVxdWVzdBj6ByAB",
            "KAsyIC5wcm90b3dpcmUuQWRkUGVlclJlcXVlc3RNZXNzYWdlSAASPQoPYWRk",
            "UGVlclJlc3BvbnNlGPsHIAEoCzIhLnByb3Rvd2lyZS5BZGRQZWVyUmVzcG9u",
            "c2VNZXNzYWdlSAASTwoYc3VibWl0VHJhbnNhY3Rpb25SZXF1ZXN0GPwHIAEo",
            "CzIqLnByb3Rvd2lyZS5TdWJtaXRUcmFuc2FjdGlvblJlcXVlc3RNZXNzYWdl",
            "SAASUQoZc3VibWl0VHJhbnNhY3Rpb25SZXNwb25zZRj9ByABKAsyKy5wcm90",
            "b3dpcmUuU3VibWl0VHJhbnNhY3Rpb25SZXNwb25zZU1lc3NhZ2VIABJ7Ci5u",
            "b3RpZnlWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRDaGFpbkNoYW5nZWRSZXF1ZXN0",
            "GP4HIAEoCzJALnByb3Rvd2lyZS5Ob3RpZnlWaXJ0dWFsU2VsZWN0ZWRQYXJl",
            "bnRDaGFpbkNoYW5nZWRSZXF1ZXN0TWVzc2FnZUgAEn0KL25vdGlmeVZpcnR1",
            "YWxTZWxlY3RlZFBhcmVudENoYWluQ2hhbmdlZFJlc3BvbnNlGP8HIAEoCzJB",
            "LnByb3Rvd2lyZS5Ob3RpZnlWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRDaGFpbkNo",
            "YW5nZWRSZXNwb25zZU1lc3NhZ2VIABJ5Ci12aXJ0dWFsU2VsZWN0ZWRQYXJl",
            "bnRDaGFpbkNoYW5nZWROb3RpZmljYXRpb24YgAggASgLMj8ucHJvdG93aXJl",
            "LlZpcnR1YWxTZWxlY3RlZFBhcmVudENoYWluQ2hhbmdlZE5vdGlmaWNhdGlv",
            "bk1lc3NhZ2VIABI9Cg9nZXRCbG9ja1JlcXVlc3QYgQggASgLMiEucHJvdG93",
            "aXJlLkdldEJsb2NrUmVxdWVzdE1lc3NhZ2VIABI/ChBnZXRCbG9ja1Jlc3Bv",
            "bnNlGIIIIAEoCzIiLnByb3Rvd2lyZS5HZXRCbG9ja1Jlc3BvbnNlTWVzc2Fn",
            "ZUgAEkcKFGdldFN1Ym5ldHdvcmtSZXF1ZXN0GIMIIAEoCzImLnByb3Rvd2ly",
            "ZS5HZXRTdWJuZXR3b3JrUmVxdWVzdE1lc3NhZ2VIABJJChVnZXRTdWJuZXR3",
            "b3JrUmVzcG9uc2UYhAggASgLMicucHJvdG93aXJlLkdldFN1Ym5ldHdvcmtS",
            "ZXNwb25zZU1lc3NhZ2VIABJ5Ci1nZXRWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRD",
            "aGFpbkZyb21CbG9ja1JlcXVlc3QYhQggASgLMj8ucHJvdG93aXJlLkdldFZp",
            "cnR1YWxTZWxlY3RlZFBhcmVudENoYWluRnJvbUJsb2NrUmVxdWVzdE1lc3Nh",
            "Z2VIABJ7Ci5nZXRWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRDaGFpbkZyb21CbG9j",
            "a1Jlc3BvbnNlGIYIIAEoCzJALnByb3Rvd2lyZS5HZXRWaXJ0dWFsU2VsZWN0",
            "ZWRQYXJlbnRDaGFpbkZyb21CbG9ja1Jlc3BvbnNlTWVzc2FnZUgAEj8KEGdl",
            "dEJsb2Nrc1JlcXVlc3QYhwggASgLMiIucHJvdG93aXJlLkdldEJsb2Nrc1Jl",
            "cXVlc3RNZXNzYWdlSAASQQoRZ2V0QmxvY2tzUmVzcG9uc2UYiAggASgLMiMu",
            "cHJvdG93aXJlLkdldEJsb2Nrc1Jlc3BvbnNlTWVzc2FnZUgAEkcKFGdldEJs",
            "b2NrQ291bnRSZXF1ZXN0GIkIIAEoCzImLnByb3Rvd2lyZS5HZXRCbG9ja0Nv",
            "dW50UmVxdWVzdE1lc3NhZ2VIABJJChVnZXRCbG9ja0NvdW50UmVzcG9uc2UY",
            "igggASgLMicucHJvdG93aXJlLkdldEJsb2NrQ291bnRSZXNwb25zZU1lc3Nh",
            "Z2VIABJLChZnZXRCbG9ja0RhZ0luZm9SZXF1ZXN0GIsIIAEoCzIoLnByb3Rv",
            "d2lyZS5HZXRCbG9ja0RhZ0luZm9SZXF1ZXN0TWVzc2FnZUgAEk0KF2dldEJs",
            "b2NrRGFnSW5mb1Jlc3BvbnNlGIwIIAEoCzIpLnByb3Rvd2lyZS5HZXRCbG9j",
            "a0RhZ0luZm9SZXNwb25zZU1lc3NhZ2VIABJbCh5yZXNvbHZlRmluYWxpdHlD",
            "b25mbGljdFJlcXVlc3QYjQggASgLMjAucHJvdG93aXJlLlJlc29sdmVGaW5h",
            "bGl0eUNvbmZsaWN0UmVxdWVzdE1lc3NhZ2VIABJdCh9yZXNvbHZlRmluYWxp",
            "dHlDb25mbGljdFJlc3BvbnNlGI4IIAEoCzIxLnByb3Rvd2lyZS5SZXNvbHZl",
            "RmluYWxpdHlDb25mbGljdFJlc3BvbnNlTWVzc2FnZUgAElsKHm5vdGlmeUZp",
            "bmFsaXR5Q29uZmxpY3RzUmVxdWVzdBiPCCABKAsyMC5wcm90b3dpcmUuTm90",
            "aWZ5RmluYWxpdHlDb25mbGljdHNSZXF1ZXN0TWVzc2FnZUgAEl0KH25vdGlm",
            "eUZpbmFsaXR5Q29uZmxpY3RzUmVzcG9uc2UYkAggASgLMjEucHJvdG93aXJl",
            "Lk5vdGlmeUZpbmFsaXR5Q29uZmxpY3RzUmVzcG9uc2VNZXNzYWdlSAASVwoc",
            "ZmluYWxpdHlDb25mbGljdE5vdGlmaWNhdGlvbhiRCCABKAsyLi5wcm90b3dp",
            "cmUuRmluYWxpdHlDb25mbGljdE5vdGlmaWNhdGlvbk1lc3NhZ2VIABJnCiRm",
            "aW5hbGl0eUNvbmZsaWN0UmVzb2x2ZWROb3RpZmljYXRpb24YkgggASgLMjYu",
            "cHJvdG93aXJlLkZpbmFsaXR5Q29uZmxpY3RSZXNvbHZlZE5vdGlmaWNhdGlv",
            "bk1lc3NhZ2VIABJPChhnZXRNZW1wb29sRW50cmllc1JlcXVlc3QYkwggASgL",
            "MioucHJvdG93aXJlLkdldE1lbXBvb2xFbnRyaWVzUmVxdWVzdE1lc3NhZ2VI",
            "ABJRChlnZXRNZW1wb29sRW50cmllc1Jlc3BvbnNlGJQIIAEoCzIrLnByb3Rv",
            "d2lyZS5HZXRNZW1wb29sRW50cmllc1Jlc3BvbnNlTWVzc2FnZUgAEj0KD3No",
            "dXREb3duUmVxdWVzdBiVCCABKAsyIS5wcm90b3dpcmUuU2h1dERvd25SZXF1",
            "ZXN0TWVzc2FnZUgAEj8KEHNodXREb3duUmVzcG9uc2UYlgggASgLMiIucHJv",
            "dG93aXJlLlNodXREb3duUmVzcG9uc2VNZXNzYWdlSAASQQoRZ2V0SGVhZGVy",
            "c1JlcXVlc3QYlwggASgLMiMucHJvdG93aXJlLkdldEhlYWRlcnNSZXF1ZXN0",
            "TWVzc2FnZUgAEkMKEmdldEhlYWRlcnNSZXNwb25zZRiYCCABKAsyJC5wcm90",
            "b3dpcmUuR2V0SGVhZGVyc1Jlc3BvbnNlTWVzc2FnZUgAElEKGW5vdGlmeVV0",
            "eG9zQ2hhbmdlZFJlcXVlc3QYmQggASgLMisucHJvdG93aXJlLk5vdGlmeVV0",
            "eG9zQ2hhbmdlZFJlcXVlc3RNZXNzYWdlSAASUwoabm90aWZ5VXR4b3NDaGFu",
            "Z2VkUmVzcG9uc2UYmgggASgLMiwucHJvdG93aXJlLk5vdGlmeVV0eG9zQ2hh",
            "bmdlZFJlc3BvbnNlTWVzc2FnZUgAEk8KGHV0eG9zQ2hhbmdlZE5vdGlmaWNh",
            "dGlvbhibCCABKAsyKi5wcm90b3dpcmUuVXR4b3NDaGFuZ2VkTm90aWZpY2F0",
            "aW9uTWVzc2FnZUgAElMKGmdldFV0eG9zQnlBZGRyZXNzZXNSZXF1ZXN0GJwI",
            "IAEoCzIsLnByb3Rvd2lyZS5HZXRVdHhvc0J5QWRkcmVzc2VzUmVxdWVzdE1l",
            "c3NhZ2VIABJVChtnZXRVdHhvc0J5QWRkcmVzc2VzUmVzcG9uc2UYnQggASgL",
            "Mi0ucHJvdG93aXJlLkdldFV0eG9zQnlBZGRyZXNzZXNSZXNwb25zZU1lc3Nh",
            "Z2VIABJvCihnZXRWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRCbHVlU2NvcmVSZXF1",
            "ZXN0GJ4IIAEoCzI6LnByb3Rvd2lyZS5HZXRWaXJ0dWFsU2VsZWN0ZWRQYXJl",
            "bnRCbHVlU2NvcmVSZXF1ZXN0TWVzc2FnZUgAEnEKKWdldFZpcnR1YWxTZWxl",
            "Y3RlZFBhcmVudEJsdWVTY29yZVJlc3BvbnNlGJ8IIAEoCzI7LnByb3Rvd2ly",
            "ZS5HZXRWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRCbHVlU2NvcmVSZXNwb25zZU1l",
            "c3NhZ2VIABKDAQoybm90aWZ5VmlydHVhbFNlbGVjdGVkUGFyZW50Qmx1ZVNj",
            "b3JlQ2hhbmdlZFJlcXVlc3QYoAggASgLMkQucHJvdG93aXJlLk5vdGlmeVZp",
            "cnR1YWxTZWxlY3RlZFBhcmVudEJsdWVTY29yZUNoYW5nZWRSZXF1ZXN0TWVz",
            "c2FnZUgAEoUBCjNub3RpZnlWaXJ0dWFsU2VsZWN0ZWRQYXJlbnRCbHVlU2Nv",
            "cmVDaGFuZ2VkUmVzcG9uc2UYoQggASgLMkUucHJvdG93aXJlLk5vdGlmeVZp",
            "cnR1YWxTZWxlY3RlZFBhcmVudEJsdWVTY29yZUNoYW5nZWRSZXNwb25zZU1l",
            "c3NhZ2VIABKBAQoxdmlydHVhbFNlbGVjdGVkUGFyZW50Qmx1ZVNjb3JlQ2hh",
            "bmdlZE5vdGlmaWNhdGlvbhiiCCABKAsyQy5wcm90b3dpcmUuVmlydHVhbFNl",
            "bGVjdGVkUGFyZW50Qmx1ZVNjb3JlQ2hhbmdlZE5vdGlmaWNhdGlvbk1lc3Nh",
            "Z2VIABIzCgpiYW5SZXF1ZXN0GKMIIAEoCzIcLnByb3Rvd2lyZS5CYW5SZXF1",
            "ZXN0TWVzc2FnZUgAEjUKC2JhblJlc3BvbnNlGKQIIAEoCzIdLnByb3Rvd2ly",
            "ZS5CYW5SZXNwb25zZU1lc3NhZ2VIABI3Cgx1bmJhblJlcXVlc3QYpQggASgL",
            "Mh4ucHJvdG93aXJlLlVuYmFuUmVxdWVzdE1lc3NhZ2VIABI5Cg11bmJhblJl",
            "c3BvbnNlGKYIIAEoCzIfLnByb3Rvd2lyZS5VbmJhblJlc3BvbnNlTWVzc2Fn",
            "ZUgAEjsKDmdldEluZm9SZXF1ZXN0GKcIIAEoCzIgLnByb3Rvd2lyZS5HZXRJ",
            "bmZvUmVxdWVzdE1lc3NhZ2VIABI9Cg9nZXRJbmZvUmVzcG9uc2UYqAggASgL",
            "MiEucHJvdG93aXJlLkdldEluZm9SZXNwb25zZU1lc3NhZ2VIABJfCiBzdG9w",
            "Tm90aWZ5aW5nVXR4b3NDaGFuZ2VkUmVxdWVzdBipCCABKAsyMi5wcm90b3dp",
            "cmUuU3RvcE5vdGlmeWluZ1V0eG9zQ2hhbmdlZFJlcXVlc3RNZXNzYWdlSAAS",
            "YQohc3RvcE5vdGlmeWluZ1V0eG9zQ2hhbmdlZFJlc3BvbnNlGKoIIAEoCzIz",
            "LnByb3Rvd2lyZS5TdG9wTm90aWZ5aW5nVXR4b3NDaGFuZ2VkUmVzcG9uc2VN",
            "ZXNzYWdlSAASbwoobm90aWZ5UHJ1bmluZ1BvaW50VVRYT1NldE92ZXJyaWRl",
            "UmVxdWVzdBirCCABKAsyOi5wcm90b3dpcmUuTm90aWZ5UHJ1bmluZ1BvaW50",
            "VVRYT1NldE92ZXJyaWRlUmVxdWVzdE1lc3NhZ2VIABJxCilub3RpZnlQcnVu",
            "aW5nUG9pbnRVVFhPU2V0T3ZlcnJpZGVSZXNwb25zZRisCCABKAsyOy5wcm90",
            "b3dpcmUuTm90aWZ5UHJ1bmluZ1BvaW50VVRYT1NldE92ZXJyaWRlUmVzcG9u",
            "c2VNZXNzYWdlSAASbQoncHJ1bmluZ1BvaW50VVRYT1NldE92ZXJyaWRlTm90",
            "aWZpY2F0aW9uGK0IIAEoCzI5LnByb3Rvd2lyZS5QcnVuaW5nUG9pbnRVVFhP",
            "U2V0T3ZlcnJpZGVOb3RpZmljYXRpb25NZXNzYWdlSAASfQovc3RvcE5vdGlm",
            "eWluZ1BydW5pbmdQb2ludFVUWE9TZXRPdmVycmlkZVJlcXVlc3QYrgggASgL",
            "MkEucHJvdG93aXJlLlN0b3BOb3RpZnlpbmdQcnVuaW5nUG9pbnRVVFhPU2V0",
            "T3ZlcnJpZGVSZXF1ZXN0TWVzc2FnZUgAEn8KMHN0b3BOb3RpZnlpbmdQcnVu",
            "aW5nUG9pbnRVVFhPU2V0T3ZlcnJpZGVSZXNwb25zZRivCCABKAsyQi5wcm90",
            "b3dpcmUuU3RvcE5vdGlmeWluZ1BydW5pbmdQb2ludFVUWE9TZXRPdmVycmlk",
            "ZVJlc3BvbnNlTWVzc2FnZUgAEmkKJWVzdGltYXRlTmV0d29ya0hhc2hlc1Bl",
            "clNlY29uZFJlcXVlc3QYsAggASgLMjcucHJvdG93aXJlLkVzdGltYXRlTmV0",
            "d29ya0hhc2hlc1BlclNlY29uZFJlcXVlc3RNZXNzYWdlSAASawomZXN0aW1h",
            "dGVOZXR3b3JrSGFzaGVzUGVyU2Vjb25kUmVzcG9uc2UYsQggASgLMjgucHJv",
            "dG93aXJlLkVzdGltYXRlTmV0d29ya0hhc2hlc1BlclNlY29uZFJlc3BvbnNl",
            "TWVzc2FnZUgAEmUKI25vdGlmeVZpcnR1YWxEYWFTY29yZUNoYW5nZWRSZXF1",
            "ZXN0GLIIIAEoCzI1LnByb3Rvd2lyZS5Ob3RpZnlWaXJ0dWFsRGFhU2NvcmVD",
            "aGFuZ2VkUmVxdWVzdE1lc3NhZ2VIABJnCiRub3RpZnlWaXJ0dWFsRGFhU2Nv",
            "cmVDaGFuZ2VkUmVzcG9uc2UYswggASgLMjYucHJvdG93aXJlLk5vdGlmeVZp",
            "cnR1YWxEYWFTY29yZUNoYW5nZWRSZXNwb25zZU1lc3NhZ2VIABJjCiJ2aXJ0",
            "dWFsRGFhU2NvcmVDaGFuZ2VkTm90aWZpY2F0aW9uGLQIIAEoCzI0LnByb3Rv",
            "d2lyZS5WaXJ0dWFsRGFhU2NvcmVDaGFuZ2VkTm90aWZpY2F0aW9uTWVzc2Fn",
            "ZUgAElMKGmdldEJhbGFuY2VCeUFkZHJlc3NSZXF1ZXN0GLUIIAEoCzIsLnBy",
            "b3Rvd2lyZS5HZXRCYWxhbmNlQnlBZGRyZXNzUmVxdWVzdE1lc3NhZ2VIABJV",
            "ChtnZXRCYWxhbmNlQnlBZGRyZXNzUmVzcG9uc2UYtgggASgLMi0ucHJvdG93",
            "aXJlLkdldEJhbGFuY2VCeUFkZHJlc3NSZXNwb25zZU1lc3NhZ2VIABJZCh1n",
            "ZXRCYWxhbmNlc0J5QWRkcmVzc2VzUmVxdWVzdBi3CCABKAsyLy5wcm90b3dp",
            "cmUuR2V0QmFsYW5jZXNCeUFkZHJlc3Nlc1JlcXVlc3RNZXNzYWdlSAASWwoe",
            "Z2V0QmFsYW5jZXNCeUFkZHJlc3Nlc1Jlc3BvbnNlGLgIIAEoCzIwLnByb3Rv",
            "d2lyZS5HZXRCYWxhbmNlc0J5QWRkcmVzc2VzUmVzcG9uc2VNZXNzYWdlSAAS",
            "WQodbm90aWZ5TmV3QmxvY2tUZW1wbGF0ZVJlcXVlc3QYuQggASgLMi8ucHJv",
            "dG93aXJlLk5vdGlmeU5ld0Jsb2NrVGVtcGxhdGVSZXF1ZXN0TWVzc2FnZUgA",
            "ElsKHm5vdGlmeU5ld0Jsb2NrVGVtcGxhdGVSZXNwb25zZRi6CCABKAsyMC5w",
            "cm90b3dpcmUuTm90aWZ5TmV3QmxvY2tUZW1wbGF0ZVJlc3BvbnNlTWVzc2Fn",
            "ZUgAElcKHG5ld0Jsb2NrVGVtcGxhdGVOb3RpZmljYXRpb24YuwggASgLMi4u",
            "cHJvdG93aXJlLk5ld0Jsb2NrVGVtcGxhdGVOb3RpZmljYXRpb25NZXNzYWdl",
            "SAASZQojZ2V0TWVtcG9vbEVudHJpZXNCeUFkZHJlc3Nlc1JlcXVlc3QYvAgg",
            "ASgLMjUucHJvdG93aXJlLkdldE1lbXBvb2xFbnRyaWVzQnlBZGRyZXNzZXNS",
            "ZXF1ZXN0TWVzc2FnZUgAEmcKJGdldE1lbXBvb2xFbnRyaWVzQnlBZGRyZXNz",
            "ZXNSZXNwb25zZRi9CCABKAsyNi5wcm90b3dpcmUuR2V0TWVtcG9vbEVudHJp",
            "ZXNCeUFkZHJlc3Nlc1Jlc3BvbnNlTWVzc2FnZUgAEkcKFGdldENvaW5TdXBw",
            "bHlSZXF1ZXN0GL4IIAEoCzImLnByb3Rvd2lyZS5HZXRDb2luU3VwcGx5UmVx",
            "dWVzdE1lc3NhZ2VIABJJChVnZXRDb2luU3VwcGx5UmVzcG9uc2UYvwggASgL",
            "MicucHJvdG93aXJlLkdldENvaW5TdXBwbHlSZXNwb25zZU1lc3NhZ2VIAEIJ",
            "CgdwYXlsb2FkMlAKA1AyUBJJCg1NZXNzYWdlU3RyZWFtEhgucHJvdG93aXJl",
            "Lkthc3BhZE1lc3NhZ2UaGC5wcm90b3dpcmUuS2FzcGFkTWVzc2FnZSIAKAEw",
            "ATJQCgNSUEMSSQoNTWVzc2FnZVN0cmVhbRIYLnByb3Rvd2lyZS5LYXNwYWRN",
            "ZXNzYWdlGhgucHJvdG93aXJlLkthc3BhZE1lc3NhZ2UiACgBMAFCJaoCIk1p",
            "bmluZ2NvcmUuQmxvY2tjaGFpbi5LYXNwYS5LYXNwYWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Miningcore.Blockchain.Kaspa.Kaspad.P2PReflection.Descriptor, global::Miningcore.Blockchain.Kaspa.Kaspad.RpcReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Miningcore.Blockchain.Kaspa.Kaspad.KaspadMessage), global::Miningcore.Blockchain.Kaspa.Kaspad.KaspadMessage.Parser, new[]{ "Addresses", "Block", "Transaction", "BlockLocator", "RequestAddresses", "RequestRelayBlocks", "RequestTransactions", "IbdBlock", "InvRelayBlock", "InvTransactions", "Ping", "Pong", "Verack", "Version", "TransactionNotFound", "Reject", "PruningPointUtxoSetChunk", "RequestIBDBlocks", "UnexpectedPruningPoint", "IbdBlockLocator", "IbdBlockLocatorHighestHash", "RequestNextPruningPointUtxoSetChunk", "DonePruningPointUtxoSetChunks", "IbdBlockLocatorHighestHashNotFound", "BlockWithTrustedData", "DoneBlocksWithTrustedData", "RequestPruningPointAndItsAnticone", "BlockHeaders", "RequestNextHeaders", "DoneHeaders", "RequestPruningPointUTXOSet", "RequestHeaders", "RequestBlockLocator", "PruningPoints", "RequestPruningPointProof", "PruningPointProof", "Ready", "BlockWithTrustedDataV4", "TrustedData", "RequestIBDChainBlockLocator", "IbdChainBlockLocator", "RequestAnticone", "RequestNextPruningPointAndItsAnticoneBlocks", "GetCurrentNetworkRequest", "GetCurrentNetworkResponse", "SubmitBlockRequest", "SubmitBlockResponse", "GetBlockTemplateRequest", "GetBlockTemplateResponse", "NotifyBlockAddedRequest", "NotifyBlockAddedResponse", "BlockAddedNotification", "GetPeerAddressesRequest", "GetPeerAddressesResponse", "GetSelectedTipHashRequest", "GetSelectedTipHashResponse", "GetMempoolEntryRequest", "GetMempoolEntryResponse", "GetConnectedPeerInfoRequest", "GetConnectedPeerInfoResponse", "AddPeerRequest", "AddPeerResponse", "SubmitTransactionRequest", "SubmitTransactionResponse", "NotifyVirtualSelectedParentChainChangedRequest", "NotifyVirtualSelectedParentChainChangedResponse", "VirtualSelectedParentChainChangedNotification", "GetBlockRequest", "GetBlockResponse", "GetSubnetworkRequest", "GetSubnetworkResponse", "GetVirtualSelectedParentChainFromBlockRequest", "GetVirtualSelectedParentChainFromBlockResponse", "GetBlocksRequest", "GetBlocksResponse", "GetBlockCountRequest", "GetBlockCountResponse", "GetBlockDagInfoRequest", "GetBlockDagInfoResponse", "ResolveFinalityConflictRequest", "ResolveFinalityConflictResponse", "NotifyFinalityConflictsRequest", "NotifyFinalityConflictsResponse", "FinalityConflictNotification", "FinalityConflictResolvedNotification", "GetMempoolEntriesRequest", "GetMempoolEntriesResponse", "ShutDownRequest", "ShutDownResponse", "GetHeadersRequest", "GetHeadersResponse", "NotifyUtxosChangedRequest", "NotifyUtxosChangedResponse", "UtxosChangedNotification", "GetUtxosByAddressesRequest", "GetUtxosByAddressesResponse", "GetVirtualSelectedParentBlueScoreRequest", "GetVirtualSelectedParentBlueScoreResponse", "NotifyVirtualSelectedParentBlueScoreChangedRequest", "NotifyVirtualSelectedParentBlueScoreChangedResponse", "VirtualSelectedParentBlueScoreChangedNotification", "BanRequest", "BanResponse", "UnbanRequest", "UnbanResponse", "GetInfoRequest", "GetInfoResponse", "StopNotifyingUtxosChangedRequest", "StopNotifyingUtxosChangedResponse", "NotifyPruningPointUTXOSetOverrideRequest", "NotifyPruningPointUTXOSetOverrideResponse", "PruningPointUTXOSetOverrideNotification", "StopNotifyingPruningPointUTXOSetOverrideRequest", "StopNotifyingPruningPointUTXOSetOverrideResponse", "EstimateNetworkHashesPerSecondRequest", "EstimateNetworkHashesPerSecondResponse", "NotifyVirtualDaaScoreChangedRequest", "NotifyVirtualDaaScoreChangedResponse", "VirtualDaaScoreChangedNotification", "GetBalanceByAddressRequest", "GetBalanceByAddressResponse", "GetBalancesByAddressesRequest", "GetBalancesByAddressesResponse", "NotifyNewBlockTemplateRequest", "NotifyNewBlockTemplateResponse", "NewBlockTemplateNotification", "GetMempoolEntriesByAddressesRequest", "GetMempoolEntriesByAddressesResponse", "GetCoinSupplyRequest", "GetCoinSupplyResponse" }, new[]{ "Payload" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KaspadMessage : pb::IMessage<KaspadMessage> {
    private static readonly pb::MessageParser<KaspadMessage> _parser = new pb::MessageParser<KaspadMessage>(() => new KaspadMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KaspadMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Miningcore.Blockchain.Kaspa.Kaspad.MessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KaspadMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KaspadMessage(KaspadMessage other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.Addresses:
          Addresses = other.Addresses.Clone();
          break;
        case PayloadOneofCase.Block:
          Block = other.Block.Clone();
          break;
        case PayloadOneofCase.Transaction:
          Transaction = other.Transaction.Clone();
          break;
        case PayloadOneofCase.BlockLocator:
          BlockLocator = other.BlockLocator.Clone();
          break;
        case PayloadOneofCase.RequestAddresses:
          RequestAddresses = other.RequestAddresses.Clone();
          break;
        case PayloadOneofCase.RequestRelayBlocks:
          RequestRelayBlocks = other.RequestRelayBlocks.Clone();
          break;
        case PayloadOneofCase.RequestTransactions:
          RequestTransactions = other.RequestTransactions.Clone();
          break;
        case PayloadOneofCase.IbdBlock:
          IbdBlock = other.IbdBlock.Clone();
          break;
        case PayloadOneofCase.InvRelayBlock:
          InvRelayBlock = other.InvRelayBlock.Clone();
          break;
        case PayloadOneofCase.InvTransactions:
          InvTransactions = other.InvTransactions.Clone();
          break;
        case PayloadOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case PayloadOneofCase.Pong:
          Pong = other.Pong.Clone();
          break;
        case PayloadOneofCase.Verack:
          Verack = other.Verack.Clone();
          break;
        case PayloadOneofCase.Version:
          Version = other.Version.Clone();
          break;
        case PayloadOneofCase.TransactionNotFound:
          TransactionNotFound = other.TransactionNotFound.Clone();
          break;
        case PayloadOneofCase.Reject:
          Reject = other.Reject.Clone();
          break;
        case PayloadOneofCase.PruningPointUtxoSetChunk:
          PruningPointUtxoSetChunk = other.PruningPointUtxoSetChunk.Clone();
          break;
        case PayloadOneofCase.RequestIBDBlocks:
          RequestIBDBlocks = other.RequestIBDBlocks.Clone();
          break;
        case PayloadOneofCase.UnexpectedPruningPoint:
          UnexpectedPruningPoint = other.UnexpectedPruningPoint.Clone();
          break;
        case PayloadOneofCase.IbdBlockLocator:
          IbdBlockLocator = other.IbdBlockLocator.Clone();
          break;
        case PayloadOneofCase.IbdBlockLocatorHighestHash:
          IbdBlockLocatorHighestHash = other.IbdBlockLocatorHighestHash.Clone();
          break;
        case PayloadOneofCase.RequestNextPruningPointUtxoSetChunk:
          RequestNextPruningPointUtxoSetChunk = other.RequestNextPruningPointUtxoSetChunk.Clone();
          break;
        case PayloadOneofCase.DonePruningPointUtxoSetChunks:
          DonePruningPointUtxoSetChunks = other.DonePruningPointUtxoSetChunks.Clone();
          break;
        case PayloadOneofCase.IbdBlockLocatorHighestHashNotFound:
          IbdBlockLocatorHighestHashNotFound = other.IbdBlockLocatorHighestHashNotFound.Clone();
          break;
        case PayloadOneofCase.BlockWithTrustedData:
          BlockWithTrustedData = other.BlockWithTrustedData.Clone();
          break;
        case PayloadOneofCase.DoneBlocksWithTrustedData:
          DoneBlocksWithTrustedData = other.DoneBlocksWithTrustedData.Clone();
          break;
        case PayloadOneofCase.RequestPruningPointAndItsAnticone:
          RequestPruningPointAndItsAnticone = other.RequestPruningPointAndItsAnticone.Clone();
          break;
        case PayloadOneofCase.BlockHeaders:
          BlockHeaders = other.BlockHeaders.Clone();
          break;
        case PayloadOneofCase.RequestNextHeaders:
          RequestNextHeaders = other.RequestNextHeaders.Clone();
          break;
        case PayloadOneofCase.DoneHeaders:
          DoneHeaders = other.DoneHeaders.Clone();
          break;
        case PayloadOneofCase.RequestPruningPointUTXOSet:
          RequestPruningPointUTXOSet = other.RequestPruningPointUTXOSet.Clone();
          break;
        case PayloadOneofCase.RequestHeaders:
          RequestHeaders = other.RequestHeaders.Clone();
          break;
        case PayloadOneofCase.RequestBlockLocator:
          RequestBlockLocator = other.RequestBlockLocator.Clone();
          break;
        case PayloadOneofCase.PruningPoints:
          PruningPoints = other.PruningPoints.Clone();
          break;
        case PayloadOneofCase.RequestPruningPointProof:
          RequestPruningPointProof = other.RequestPruningPointProof.Clone();
          break;
        case PayloadOneofCase.PruningPointProof:
          PruningPointProof = other.PruningPointProof.Clone();
          break;
        case PayloadOneofCase.Ready:
          Ready = other.Ready.Clone();
          break;
        case PayloadOneofCase.BlockWithTrustedDataV4:
          BlockWithTrustedDataV4 = other.BlockWithTrustedDataV4.Clone();
          break;
        case PayloadOneofCase.TrustedData:
          TrustedData = other.TrustedData.Clone();
          break;
        case PayloadOneofCase.RequestIBDChainBlockLocator:
          RequestIBDChainBlockLocator = other.RequestIBDChainBlockLocator.Clone();
          break;
        case PayloadOneofCase.IbdChainBlockLocator:
          IbdChainBlockLocator = other.IbdChainBlockLocator.Clone();
          break;
        case PayloadOneofCase.RequestAnticone:
          RequestAnticone = other.RequestAnticone.Clone();
          break;
        case PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks:
          RequestNextPruningPointAndItsAnticoneBlocks = other.RequestNextPruningPointAndItsAnticoneBlocks.Clone();
          break;
        case PayloadOneofCase.GetCurrentNetworkRequest:
          GetCurrentNetworkRequest = other.GetCurrentNetworkRequest.Clone();
          break;
        case PayloadOneofCase.GetCurrentNetworkResponse:
          GetCurrentNetworkResponse = other.GetCurrentNetworkResponse.Clone();
          break;
        case PayloadOneofCase.SubmitBlockRequest:
          SubmitBlockRequest = other.SubmitBlockRequest.Clone();
          break;
        case PayloadOneofCase.SubmitBlockResponse:
          SubmitBlockResponse = other.SubmitBlockResponse.Clone();
          break;
        case PayloadOneofCase.GetBlockTemplateRequest:
          GetBlockTemplateRequest = other.GetBlockTemplateRequest.Clone();
          break;
        case PayloadOneofCase.GetBlockTemplateResponse:
          GetBlockTemplateResponse = other.GetBlockTemplateResponse.Clone();
          break;
        case PayloadOneofCase.NotifyBlockAddedRequest:
          NotifyBlockAddedRequest = other.NotifyBlockAddedRequest.Clone();
          break;
        case PayloadOneofCase.NotifyBlockAddedResponse:
          NotifyBlockAddedResponse = other.NotifyBlockAddedResponse.Clone();
          break;
        case PayloadOneofCase.BlockAddedNotification:
          BlockAddedNotification = other.BlockAddedNotification.Clone();
          break;
        case PayloadOneofCase.GetPeerAddressesRequest:
          GetPeerAddressesRequest = other.GetPeerAddressesRequest.Clone();
          break;
        case PayloadOneofCase.GetPeerAddressesResponse:
          GetPeerAddressesResponse = other.GetPeerAddressesResponse.Clone();
          break;
        case PayloadOneofCase.GetSelectedTipHashRequest:
          GetSelectedTipHashRequest = other.GetSelectedTipHashRequest.Clone();
          break;
        case PayloadOneofCase.GetSelectedTipHashResponse:
          GetSelectedTipHashResponse = other.GetSelectedTipHashResponse.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntryRequest:
          GetMempoolEntryRequest = other.GetMempoolEntryRequest.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntryResponse:
          GetMempoolEntryResponse = other.GetMempoolEntryResponse.Clone();
          break;
        case PayloadOneofCase.GetConnectedPeerInfoRequest:
          GetConnectedPeerInfoRequest = other.GetConnectedPeerInfoRequest.Clone();
          break;
        case PayloadOneofCase.GetConnectedPeerInfoResponse:
          GetConnectedPeerInfoResponse = other.GetConnectedPeerInfoResponse.Clone();
          break;
        case PayloadOneofCase.AddPeerRequest:
          AddPeerRequest = other.AddPeerRequest.Clone();
          break;
        case PayloadOneofCase.AddPeerResponse:
          AddPeerResponse = other.AddPeerResponse.Clone();
          break;
        case PayloadOneofCase.SubmitTransactionRequest:
          SubmitTransactionRequest = other.SubmitTransactionRequest.Clone();
          break;
        case PayloadOneofCase.SubmitTransactionResponse:
          SubmitTransactionResponse = other.SubmitTransactionResponse.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest:
          NotifyVirtualSelectedParentChainChangedRequest = other.NotifyVirtualSelectedParentChainChangedRequest.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse:
          NotifyVirtualSelectedParentChainChangedResponse = other.NotifyVirtualSelectedParentChainChangedResponse.Clone();
          break;
        case PayloadOneofCase.VirtualSelectedParentChainChangedNotification:
          VirtualSelectedParentChainChangedNotification = other.VirtualSelectedParentChainChangedNotification.Clone();
          break;
        case PayloadOneofCase.GetBlockRequest:
          GetBlockRequest = other.GetBlockRequest.Clone();
          break;
        case PayloadOneofCase.GetBlockResponse:
          GetBlockResponse = other.GetBlockResponse.Clone();
          break;
        case PayloadOneofCase.GetSubnetworkRequest:
          GetSubnetworkRequest = other.GetSubnetworkRequest.Clone();
          break;
        case PayloadOneofCase.GetSubnetworkResponse:
          GetSubnetworkResponse = other.GetSubnetworkResponse.Clone();
          break;
        case PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest:
          GetVirtualSelectedParentChainFromBlockRequest = other.GetVirtualSelectedParentChainFromBlockRequest.Clone();
          break;
        case PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse:
          GetVirtualSelectedParentChainFromBlockResponse = other.GetVirtualSelectedParentChainFromBlockResponse.Clone();
          break;
        case PayloadOneofCase.GetBlocksRequest:
          GetBlocksRequest = other.GetBlocksRequest.Clone();
          break;
        case PayloadOneofCase.GetBlocksResponse:
          GetBlocksResponse = other.GetBlocksResponse.Clone();
          break;
        case PayloadOneofCase.GetBlockCountRequest:
          GetBlockCountRequest = other.GetBlockCountRequest.Clone();
          break;
        case PayloadOneofCase.GetBlockCountResponse:
          GetBlockCountResponse = other.GetBlockCountResponse.Clone();
          break;
        case PayloadOneofCase.GetBlockDagInfoRequest:
          GetBlockDagInfoRequest = other.GetBlockDagInfoRequest.Clone();
          break;
        case PayloadOneofCase.GetBlockDagInfoResponse:
          GetBlockDagInfoResponse = other.GetBlockDagInfoResponse.Clone();
          break;
        case PayloadOneofCase.ResolveFinalityConflictRequest:
          ResolveFinalityConflictRequest = other.ResolveFinalityConflictRequest.Clone();
          break;
        case PayloadOneofCase.ResolveFinalityConflictResponse:
          ResolveFinalityConflictResponse = other.ResolveFinalityConflictResponse.Clone();
          break;
        case PayloadOneofCase.NotifyFinalityConflictsRequest:
          NotifyFinalityConflictsRequest = other.NotifyFinalityConflictsRequest.Clone();
          break;
        case PayloadOneofCase.NotifyFinalityConflictsResponse:
          NotifyFinalityConflictsResponse = other.NotifyFinalityConflictsResponse.Clone();
          break;
        case PayloadOneofCase.FinalityConflictNotification:
          FinalityConflictNotification = other.FinalityConflictNotification.Clone();
          break;
        case PayloadOneofCase.FinalityConflictResolvedNotification:
          FinalityConflictResolvedNotification = other.FinalityConflictResolvedNotification.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntriesRequest:
          GetMempoolEntriesRequest = other.GetMempoolEntriesRequest.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntriesResponse:
          GetMempoolEntriesResponse = other.GetMempoolEntriesResponse.Clone();
          break;
        case PayloadOneofCase.ShutDownRequest:
          ShutDownRequest = other.ShutDownRequest.Clone();
          break;
        case PayloadOneofCase.ShutDownResponse:
          ShutDownResponse = other.ShutDownResponse.Clone();
          break;
        case PayloadOneofCase.GetHeadersRequest:
          GetHeadersRequest = other.GetHeadersRequest.Clone();
          break;
        case PayloadOneofCase.GetHeadersResponse:
          GetHeadersResponse = other.GetHeadersResponse.Clone();
          break;
        case PayloadOneofCase.NotifyUtxosChangedRequest:
          NotifyUtxosChangedRequest = other.NotifyUtxosChangedRequest.Clone();
          break;
        case PayloadOneofCase.NotifyUtxosChangedResponse:
          NotifyUtxosChangedResponse = other.NotifyUtxosChangedResponse.Clone();
          break;
        case PayloadOneofCase.UtxosChangedNotification:
          UtxosChangedNotification = other.UtxosChangedNotification.Clone();
          break;
        case PayloadOneofCase.GetUtxosByAddressesRequest:
          GetUtxosByAddressesRequest = other.GetUtxosByAddressesRequest.Clone();
          break;
        case PayloadOneofCase.GetUtxosByAddressesResponse:
          GetUtxosByAddressesResponse = other.GetUtxosByAddressesResponse.Clone();
          break;
        case PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest:
          GetVirtualSelectedParentBlueScoreRequest = other.GetVirtualSelectedParentBlueScoreRequest.Clone();
          break;
        case PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse:
          GetVirtualSelectedParentBlueScoreResponse = other.GetVirtualSelectedParentBlueScoreResponse.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest:
          NotifyVirtualSelectedParentBlueScoreChangedRequest = other.NotifyVirtualSelectedParentBlueScoreChangedRequest.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse:
          NotifyVirtualSelectedParentBlueScoreChangedResponse = other.NotifyVirtualSelectedParentBlueScoreChangedResponse.Clone();
          break;
        case PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification:
          VirtualSelectedParentBlueScoreChangedNotification = other.VirtualSelectedParentBlueScoreChangedNotification.Clone();
          break;
        case PayloadOneofCase.BanRequest:
          BanRequest = other.BanRequest.Clone();
          break;
        case PayloadOneofCase.BanResponse:
          BanResponse = other.BanResponse.Clone();
          break;
        case PayloadOneofCase.UnbanRequest:
          UnbanRequest = other.UnbanRequest.Clone();
          break;
        case PayloadOneofCase.UnbanResponse:
          UnbanResponse = other.UnbanResponse.Clone();
          break;
        case PayloadOneofCase.GetInfoRequest:
          GetInfoRequest = other.GetInfoRequest.Clone();
          break;
        case PayloadOneofCase.GetInfoResponse:
          GetInfoResponse = other.GetInfoResponse.Clone();
          break;
        case PayloadOneofCase.StopNotifyingUtxosChangedRequest:
          StopNotifyingUtxosChangedRequest = other.StopNotifyingUtxosChangedRequest.Clone();
          break;
        case PayloadOneofCase.StopNotifyingUtxosChangedResponse:
          StopNotifyingUtxosChangedResponse = other.StopNotifyingUtxosChangedResponse.Clone();
          break;
        case PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest:
          NotifyPruningPointUTXOSetOverrideRequest = other.NotifyPruningPointUTXOSetOverrideRequest.Clone();
          break;
        case PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse:
          NotifyPruningPointUTXOSetOverrideResponse = other.NotifyPruningPointUTXOSetOverrideResponse.Clone();
          break;
        case PayloadOneofCase.PruningPointUTXOSetOverrideNotification:
          PruningPointUTXOSetOverrideNotification = other.PruningPointUTXOSetOverrideNotification.Clone();
          break;
        case PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest:
          StopNotifyingPruningPointUTXOSetOverrideRequest = other.StopNotifyingPruningPointUTXOSetOverrideRequest.Clone();
          break;
        case PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse:
          StopNotifyingPruningPointUTXOSetOverrideResponse = other.StopNotifyingPruningPointUTXOSetOverrideResponse.Clone();
          break;
        case PayloadOneofCase.EstimateNetworkHashesPerSecondRequest:
          EstimateNetworkHashesPerSecondRequest = other.EstimateNetworkHashesPerSecondRequest.Clone();
          break;
        case PayloadOneofCase.EstimateNetworkHashesPerSecondResponse:
          EstimateNetworkHashesPerSecondResponse = other.EstimateNetworkHashesPerSecondResponse.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest:
          NotifyVirtualDaaScoreChangedRequest = other.NotifyVirtualDaaScoreChangedRequest.Clone();
          break;
        case PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse:
          NotifyVirtualDaaScoreChangedResponse = other.NotifyVirtualDaaScoreChangedResponse.Clone();
          break;
        case PayloadOneofCase.VirtualDaaScoreChangedNotification:
          VirtualDaaScoreChangedNotification = other.VirtualDaaScoreChangedNotification.Clone();
          break;
        case PayloadOneofCase.GetBalanceByAddressRequest:
          GetBalanceByAddressRequest = other.GetBalanceByAddressRequest.Clone();
          break;
        case PayloadOneofCase.GetBalanceByAddressResponse:
          GetBalanceByAddressResponse = other.GetBalanceByAddressResponse.Clone();
          break;
        case PayloadOneofCase.GetBalancesByAddressesRequest:
          GetBalancesByAddressesRequest = other.GetBalancesByAddressesRequest.Clone();
          break;
        case PayloadOneofCase.GetBalancesByAddressesResponse:
          GetBalancesByAddressesResponse = other.GetBalancesByAddressesResponse.Clone();
          break;
        case PayloadOneofCase.NotifyNewBlockTemplateRequest:
          NotifyNewBlockTemplateRequest = other.NotifyNewBlockTemplateRequest.Clone();
          break;
        case PayloadOneofCase.NotifyNewBlockTemplateResponse:
          NotifyNewBlockTemplateResponse = other.NotifyNewBlockTemplateResponse.Clone();
          break;
        case PayloadOneofCase.NewBlockTemplateNotification:
          NewBlockTemplateNotification = other.NewBlockTemplateNotification.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntriesByAddressesRequest:
          GetMempoolEntriesByAddressesRequest = other.GetMempoolEntriesByAddressesRequest.Clone();
          break;
        case PayloadOneofCase.GetMempoolEntriesByAddressesResponse:
          GetMempoolEntriesByAddressesResponse = other.GetMempoolEntriesByAddressesResponse.Clone();
          break;
        case PayloadOneofCase.GetCoinSupplyRequest:
          GetCoinSupplyRequest = other.GetCoinSupplyRequest.Clone();
          break;
        case PayloadOneofCase.GetCoinSupplyResponse:
          GetCoinSupplyResponse = other.GetCoinSupplyResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KaspadMessage Clone() {
      return new KaspadMessage(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage Addresses {
      get { return payloadCase_ == PayloadOneofCase.Addresses ? (global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Addresses;
      }
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage Block {
      get { return payloadCase_ == PayloadOneofCase.Block ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Block;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage Transaction {
      get { return payloadCase_ == PayloadOneofCase.Transaction ? (global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Transaction;
      }
    }

    /// <summary>Field number for the "blockLocator" field.</summary>
    public const int BlockLocatorFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage BlockLocator {
      get { return payloadCase_ == PayloadOneofCase.BlockLocator ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockLocator;
      }
    }

    /// <summary>Field number for the "requestAddresses" field.</summary>
    public const int RequestAddressesFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage RequestAddresses {
      get { return payloadCase_ == PayloadOneofCase.RequestAddresses ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestAddresses;
      }
    }

    /// <summary>Field number for the "requestRelayBlocks" field.</summary>
    public const int RequestRelayBlocksFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage RequestRelayBlocks {
      get { return payloadCase_ == PayloadOneofCase.RequestRelayBlocks ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestRelayBlocks;
      }
    }

    /// <summary>Field number for the "requestTransactions" field.</summary>
    public const int RequestTransactionsFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage RequestTransactions {
      get { return payloadCase_ == PayloadOneofCase.RequestTransactions ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestTransactions;
      }
    }

    /// <summary>Field number for the "ibdBlock" field.</summary>
    public const int IbdBlockFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage IbdBlock {
      get { return payloadCase_ == PayloadOneofCase.IbdBlock ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IbdBlock;
      }
    }

    /// <summary>Field number for the "invRelayBlock" field.</summary>
    public const int InvRelayBlockFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage InvRelayBlock {
      get { return payloadCase_ == PayloadOneofCase.InvRelayBlock ? (global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.InvRelayBlock;
      }
    }

    /// <summary>Field number for the "invTransactions" field.</summary>
    public const int InvTransactionsFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage InvTransactions {
      get { return payloadCase_ == PayloadOneofCase.InvTransactions ? (global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.InvTransactions;
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage Ping {
      get { return payloadCase_ == PayloadOneofCase.Ping ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "pong" field.</summary>
    public const int PongFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage Pong {
      get { return payloadCase_ == PayloadOneofCase.Pong ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Pong;
      }
    }

    /// <summary>Field number for the "verack" field.</summary>
    public const int VerackFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage Verack {
      get { return payloadCase_ == PayloadOneofCase.Verack ? (global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Verack;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage Version {
      get { return payloadCase_ == PayloadOneofCase.Version ? (global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Version;
      }
    }

    /// <summary>Field number for the "transactionNotFound" field.</summary>
    public const int TransactionNotFoundFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage TransactionNotFound {
      get { return payloadCase_ == PayloadOneofCase.TransactionNotFound ? (global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.TransactionNotFound;
      }
    }

    /// <summary>Field number for the "reject" field.</summary>
    public const int RejectFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage Reject {
      get { return payloadCase_ == PayloadOneofCase.Reject ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Reject;
      }
    }

    /// <summary>Field number for the "pruningPointUtxoSetChunk" field.</summary>
    public const int PruningPointUtxoSetChunkFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage PruningPointUtxoSetChunk {
      get { return payloadCase_ == PayloadOneofCase.PruningPointUtxoSetChunk ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PruningPointUtxoSetChunk;
      }
    }

    /// <summary>Field number for the "requestIBDBlocks" field.</summary>
    public const int RequestIBDBlocksFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage RequestIBDBlocks {
      get { return payloadCase_ == PayloadOneofCase.RequestIBDBlocks ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestIBDBlocks;
      }
    }

    /// <summary>Field number for the "unexpectedPruningPoint" field.</summary>
    public const int UnexpectedPruningPointFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage UnexpectedPruningPoint {
      get { return payloadCase_ == PayloadOneofCase.UnexpectedPruningPoint ? (global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.UnexpectedPruningPoint;
      }
    }

    /// <summary>Field number for the "ibdBlockLocator" field.</summary>
    public const int IbdBlockLocatorFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage IbdBlockLocator {
      get { return payloadCase_ == PayloadOneofCase.IbdBlockLocator ? (global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IbdBlockLocator;
      }
    }

    /// <summary>Field number for the "ibdBlockLocatorHighestHash" field.</summary>
    public const int IbdBlockLocatorHighestHashFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage IbdBlockLocatorHighestHash {
      get { return payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHash ? (global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IbdBlockLocatorHighestHash;
      }
    }

    /// <summary>Field number for the "requestNextPruningPointUtxoSetChunk" field.</summary>
    public const int RequestNextPruningPointUtxoSetChunkFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage RequestNextPruningPointUtxoSetChunk {
      get { return payloadCase_ == PayloadOneofCase.RequestNextPruningPointUtxoSetChunk ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestNextPruningPointUtxoSetChunk;
      }
    }

    /// <summary>Field number for the "donePruningPointUtxoSetChunks" field.</summary>
    public const int DonePruningPointUtxoSetChunksFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage DonePruningPointUtxoSetChunks {
      get { return payloadCase_ == PayloadOneofCase.DonePruningPointUtxoSetChunks ? (global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DonePruningPointUtxoSetChunks;
      }
    }

    /// <summary>Field number for the "ibdBlockLocatorHighestHashNotFound" field.</summary>
    public const int IbdBlockLocatorHighestHashNotFoundFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage IbdBlockLocatorHighestHashNotFound {
      get { return payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHashNotFound ? (global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IbdBlockLocatorHighestHashNotFound;
      }
    }

    /// <summary>Field number for the "blockWithTrustedData" field.</summary>
    public const int BlockWithTrustedDataFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage BlockWithTrustedData {
      get { return payloadCase_ == PayloadOneofCase.BlockWithTrustedData ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockWithTrustedData;
      }
    }

    /// <summary>Field number for the "doneBlocksWithTrustedData" field.</summary>
    public const int DoneBlocksWithTrustedDataFieldNumber = 37;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage DoneBlocksWithTrustedData {
      get { return payloadCase_ == PayloadOneofCase.DoneBlocksWithTrustedData ? (global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DoneBlocksWithTrustedData;
      }
    }

    /// <summary>Field number for the "requestPruningPointAndItsAnticone" field.</summary>
    public const int RequestPruningPointAndItsAnticoneFieldNumber = 40;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage RequestPruningPointAndItsAnticone {
      get { return payloadCase_ == PayloadOneofCase.RequestPruningPointAndItsAnticone ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestPruningPointAndItsAnticone;
      }
    }

    /// <summary>Field number for the "blockHeaders" field.</summary>
    public const int BlockHeadersFieldNumber = 41;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage BlockHeaders {
      get { return payloadCase_ == PayloadOneofCase.BlockHeaders ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockHeaders;
      }
    }

    /// <summary>Field number for the "requestNextHeaders" field.</summary>
    public const int RequestNextHeadersFieldNumber = 42;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage RequestNextHeaders {
      get { return payloadCase_ == PayloadOneofCase.RequestNextHeaders ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestNextHeaders;
      }
    }

    /// <summary>Field number for the "DoneHeaders" field.</summary>
    public const int DoneHeadersFieldNumber = 43;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage DoneHeaders {
      get { return payloadCase_ == PayloadOneofCase.DoneHeaders ? (global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DoneHeaders;
      }
    }

    /// <summary>Field number for the "requestPruningPointUTXOSet" field.</summary>
    public const int RequestPruningPointUTXOSetFieldNumber = 44;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage RequestPruningPointUTXOSet {
      get { return payloadCase_ == PayloadOneofCase.RequestPruningPointUTXOSet ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestPruningPointUTXOSet;
      }
    }

    /// <summary>Field number for the "requestHeaders" field.</summary>
    public const int RequestHeadersFieldNumber = 45;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage RequestHeaders {
      get { return payloadCase_ == PayloadOneofCase.RequestHeaders ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestHeaders;
      }
    }

    /// <summary>Field number for the "requestBlockLocator" field.</summary>
    public const int RequestBlockLocatorFieldNumber = 46;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage RequestBlockLocator {
      get { return payloadCase_ == PayloadOneofCase.RequestBlockLocator ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestBlockLocator;
      }
    }

    /// <summary>Field number for the "pruningPoints" field.</summary>
    public const int PruningPointsFieldNumber = 47;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage PruningPoints {
      get { return payloadCase_ == PayloadOneofCase.PruningPoints ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PruningPoints;
      }
    }

    /// <summary>Field number for the "requestPruningPointProof" field.</summary>
    public const int RequestPruningPointProofFieldNumber = 48;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage RequestPruningPointProof {
      get { return payloadCase_ == PayloadOneofCase.RequestPruningPointProof ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestPruningPointProof;
      }
    }

    /// <summary>Field number for the "pruningPointProof" field.</summary>
    public const int PruningPointProofFieldNumber = 49;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage PruningPointProof {
      get { return payloadCase_ == PayloadOneofCase.PruningPointProof ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PruningPointProof;
      }
    }

    /// <summary>Field number for the "ready" field.</summary>
    public const int ReadyFieldNumber = 50;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage Ready {
      get { return payloadCase_ == PayloadOneofCase.Ready ? (global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ready;
      }
    }

    /// <summary>Field number for the "blockWithTrustedDataV4" field.</summary>
    public const int BlockWithTrustedDataV4FieldNumber = 51;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message BlockWithTrustedDataV4 {
      get { return payloadCase_ == PayloadOneofCase.BlockWithTrustedDataV4 ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockWithTrustedDataV4;
      }
    }

    /// <summary>Field number for the "trustedData" field.</summary>
    public const int TrustedDataFieldNumber = 52;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage TrustedData {
      get { return payloadCase_ == PayloadOneofCase.TrustedData ? (global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.TrustedData;
      }
    }

    /// <summary>Field number for the "requestIBDChainBlockLocator" field.</summary>
    public const int RequestIBDChainBlockLocatorFieldNumber = 53;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage RequestIBDChainBlockLocator {
      get { return payloadCase_ == PayloadOneofCase.RequestIBDChainBlockLocator ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestIBDChainBlockLocator;
      }
    }

    /// <summary>Field number for the "ibdChainBlockLocator" field.</summary>
    public const int IbdChainBlockLocatorFieldNumber = 54;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage IbdChainBlockLocator {
      get { return payloadCase_ == PayloadOneofCase.IbdChainBlockLocator ? (global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IbdChainBlockLocator;
      }
    }

    /// <summary>Field number for the "requestAnticone" field.</summary>
    public const int RequestAnticoneFieldNumber = 55;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage RequestAnticone {
      get { return payloadCase_ == PayloadOneofCase.RequestAnticone ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestAnticone;
      }
    }

    /// <summary>Field number for the "requestNextPruningPointAndItsAnticoneBlocks" field.</summary>
    public const int RequestNextPruningPointAndItsAnticoneBlocksFieldNumber = 56;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage RequestNextPruningPointAndItsAnticoneBlocks {
      get { return payloadCase_ == PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks ? (global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks;
      }
    }

    /// <summary>Field number for the "getCurrentNetworkRequest" field.</summary>
    public const int GetCurrentNetworkRequestFieldNumber = 1001;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage GetCurrentNetworkRequest {
      get { return payloadCase_ == PayloadOneofCase.GetCurrentNetworkRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetCurrentNetworkRequest;
      }
    }

    /// <summary>Field number for the "getCurrentNetworkResponse" field.</summary>
    public const int GetCurrentNetworkResponseFieldNumber = 1002;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage GetCurrentNetworkResponse {
      get { return payloadCase_ == PayloadOneofCase.GetCurrentNetworkResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetCurrentNetworkResponse;
      }
    }

    /// <summary>Field number for the "submitBlockRequest" field.</summary>
    public const int SubmitBlockRequestFieldNumber = 1003;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage SubmitBlockRequest {
      get { return payloadCase_ == PayloadOneofCase.SubmitBlockRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubmitBlockRequest;
      }
    }

    /// <summary>Field number for the "submitBlockResponse" field.</summary>
    public const int SubmitBlockResponseFieldNumber = 1004;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage SubmitBlockResponse {
      get { return payloadCase_ == PayloadOneofCase.SubmitBlockResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubmitBlockResponse;
      }
    }

    /// <summary>Field number for the "getBlockTemplateRequest" field.</summary>
    public const int GetBlockTemplateRequestFieldNumber = 1005;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage GetBlockTemplateRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBlockTemplateRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockTemplateRequest;
      }
    }

    /// <summary>Field number for the "getBlockTemplateResponse" field.</summary>
    public const int GetBlockTemplateResponseFieldNumber = 1006;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage GetBlockTemplateResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBlockTemplateResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockTemplateResponse;
      }
    }

    /// <summary>Field number for the "notifyBlockAddedRequest" field.</summary>
    public const int NotifyBlockAddedRequestFieldNumber = 1007;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage NotifyBlockAddedRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyBlockAddedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyBlockAddedRequest;
      }
    }

    /// <summary>Field number for the "notifyBlockAddedResponse" field.</summary>
    public const int NotifyBlockAddedResponseFieldNumber = 1008;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage NotifyBlockAddedResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyBlockAddedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyBlockAddedResponse;
      }
    }

    /// <summary>Field number for the "blockAddedNotification" field.</summary>
    public const int BlockAddedNotificationFieldNumber = 1009;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage BlockAddedNotification {
      get { return payloadCase_ == PayloadOneofCase.BlockAddedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BlockAddedNotification;
      }
    }

    /// <summary>Field number for the "getPeerAddressesRequest" field.</summary>
    public const int GetPeerAddressesRequestFieldNumber = 1010;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage GetPeerAddressesRequest {
      get { return payloadCase_ == PayloadOneofCase.GetPeerAddressesRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetPeerAddressesRequest;
      }
    }

    /// <summary>Field number for the "getPeerAddressesResponse" field.</summary>
    public const int GetPeerAddressesResponseFieldNumber = 1011;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage GetPeerAddressesResponse {
      get { return payloadCase_ == PayloadOneofCase.GetPeerAddressesResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetPeerAddressesResponse;
      }
    }

    /// <summary>Field number for the "getSelectedTipHashRequest" field.</summary>
    public const int GetSelectedTipHashRequestFieldNumber = 1012;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage GetSelectedTipHashRequest {
      get { return payloadCase_ == PayloadOneofCase.GetSelectedTipHashRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetSelectedTipHashRequest;
      }
    }

    /// <summary>Field number for the "getSelectedTipHashResponse" field.</summary>
    public const int GetSelectedTipHashResponseFieldNumber = 1013;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage GetSelectedTipHashResponse {
      get { return payloadCase_ == PayloadOneofCase.GetSelectedTipHashResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetSelectedTipHashResponse;
      }
    }

    /// <summary>Field number for the "getMempoolEntryRequest" field.</summary>
    public const int GetMempoolEntryRequestFieldNumber = 1014;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage GetMempoolEntryRequest {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntryRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntryRequest;
      }
    }

    /// <summary>Field number for the "getMempoolEntryResponse" field.</summary>
    public const int GetMempoolEntryResponseFieldNumber = 1015;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage GetMempoolEntryResponse {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntryResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntryResponse;
      }
    }

    /// <summary>Field number for the "getConnectedPeerInfoRequest" field.</summary>
    public const int GetConnectedPeerInfoRequestFieldNumber = 1016;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage GetConnectedPeerInfoRequest {
      get { return payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetConnectedPeerInfoRequest;
      }
    }

    /// <summary>Field number for the "getConnectedPeerInfoResponse" field.</summary>
    public const int GetConnectedPeerInfoResponseFieldNumber = 1017;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage GetConnectedPeerInfoResponse {
      get { return payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetConnectedPeerInfoResponse;
      }
    }

    /// <summary>Field number for the "addPeerRequest" field.</summary>
    public const int AddPeerRequestFieldNumber = 1018;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage AddPeerRequest {
      get { return payloadCase_ == PayloadOneofCase.AddPeerRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.AddPeerRequest;
      }
    }

    /// <summary>Field number for the "addPeerResponse" field.</summary>
    public const int AddPeerResponseFieldNumber = 1019;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage AddPeerResponse {
      get { return payloadCase_ == PayloadOneofCase.AddPeerResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.AddPeerResponse;
      }
    }

    /// <summary>Field number for the "submitTransactionRequest" field.</summary>
    public const int SubmitTransactionRequestFieldNumber = 1020;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage SubmitTransactionRequest {
      get { return payloadCase_ == PayloadOneofCase.SubmitTransactionRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubmitTransactionRequest;
      }
    }

    /// <summary>Field number for the "submitTransactionResponse" field.</summary>
    public const int SubmitTransactionResponseFieldNumber = 1021;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage SubmitTransactionResponse {
      get { return payloadCase_ == PayloadOneofCase.SubmitTransactionResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubmitTransactionResponse;
      }
    }

    /// <summary>Field number for the "notifyVirtualSelectedParentChainChangedRequest" field.</summary>
    public const int NotifyVirtualSelectedParentChainChangedRequestFieldNumber = 1022;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage NotifyVirtualSelectedParentChainChangedRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest;
      }
    }

    /// <summary>Field number for the "notifyVirtualSelectedParentChainChangedResponse" field.</summary>
    public const int NotifyVirtualSelectedParentChainChangedResponseFieldNumber = 1023;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage NotifyVirtualSelectedParentChainChangedResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse;
      }
    }

    /// <summary>Field number for the "virtualSelectedParentChainChangedNotification" field.</summary>
    public const int VirtualSelectedParentChainChangedNotificationFieldNumber = 1024;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage VirtualSelectedParentChainChangedNotification {
      get { return payloadCase_ == PayloadOneofCase.VirtualSelectedParentChainChangedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.VirtualSelectedParentChainChangedNotification;
      }
    }

    /// <summary>Field number for the "getBlockRequest" field.</summary>
    public const int GetBlockRequestFieldNumber = 1025;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage GetBlockRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBlockRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockRequest;
      }
    }

    /// <summary>Field number for the "getBlockResponse" field.</summary>
    public const int GetBlockResponseFieldNumber = 1026;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage GetBlockResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBlockResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockResponse;
      }
    }

    /// <summary>Field number for the "getSubnetworkRequest" field.</summary>
    public const int GetSubnetworkRequestFieldNumber = 1027;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage GetSubnetworkRequest {
      get { return payloadCase_ == PayloadOneofCase.GetSubnetworkRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetSubnetworkRequest;
      }
    }

    /// <summary>Field number for the "getSubnetworkResponse" field.</summary>
    public const int GetSubnetworkResponseFieldNumber = 1028;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage GetSubnetworkResponse {
      get { return payloadCase_ == PayloadOneofCase.GetSubnetworkResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetSubnetworkResponse;
      }
    }

    /// <summary>Field number for the "getVirtualSelectedParentChainFromBlockRequest" field.</summary>
    public const int GetVirtualSelectedParentChainFromBlockRequestFieldNumber = 1029;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage GetVirtualSelectedParentChainFromBlockRequest {
      get { return payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest;
      }
    }

    /// <summary>Field number for the "getVirtualSelectedParentChainFromBlockResponse" field.</summary>
    public const int GetVirtualSelectedParentChainFromBlockResponseFieldNumber = 1030;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage GetVirtualSelectedParentChainFromBlockResponse {
      get { return payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse;
      }
    }

    /// <summary>Field number for the "getBlocksRequest" field.</summary>
    public const int GetBlocksRequestFieldNumber = 1031;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage GetBlocksRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBlocksRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlocksRequest;
      }
    }

    /// <summary>Field number for the "getBlocksResponse" field.</summary>
    public const int GetBlocksResponseFieldNumber = 1032;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage GetBlocksResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBlocksResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlocksResponse;
      }
    }

    /// <summary>Field number for the "getBlockCountRequest" field.</summary>
    public const int GetBlockCountRequestFieldNumber = 1033;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage GetBlockCountRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBlockCountRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockCountRequest;
      }
    }

    /// <summary>Field number for the "getBlockCountResponse" field.</summary>
    public const int GetBlockCountResponseFieldNumber = 1034;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage GetBlockCountResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBlockCountResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockCountResponse;
      }
    }

    /// <summary>Field number for the "getBlockDagInfoRequest" field.</summary>
    public const int GetBlockDagInfoRequestFieldNumber = 1035;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage GetBlockDagInfoRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBlockDagInfoRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockDagInfoRequest;
      }
    }

    /// <summary>Field number for the "getBlockDagInfoResponse" field.</summary>
    public const int GetBlockDagInfoResponseFieldNumber = 1036;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage GetBlockDagInfoResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBlockDagInfoResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBlockDagInfoResponse;
      }
    }

    /// <summary>Field number for the "resolveFinalityConflictRequest" field.</summary>
    public const int ResolveFinalityConflictRequestFieldNumber = 1037;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage ResolveFinalityConflictRequest {
      get { return payloadCase_ == PayloadOneofCase.ResolveFinalityConflictRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ResolveFinalityConflictRequest;
      }
    }

    /// <summary>Field number for the "resolveFinalityConflictResponse" field.</summary>
    public const int ResolveFinalityConflictResponseFieldNumber = 1038;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage ResolveFinalityConflictResponse {
      get { return payloadCase_ == PayloadOneofCase.ResolveFinalityConflictResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ResolveFinalityConflictResponse;
      }
    }

    /// <summary>Field number for the "notifyFinalityConflictsRequest" field.</summary>
    public const int NotifyFinalityConflictsRequestFieldNumber = 1039;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage NotifyFinalityConflictsRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyFinalityConflictsRequest;
      }
    }

    /// <summary>Field number for the "notifyFinalityConflictsResponse" field.</summary>
    public const int NotifyFinalityConflictsResponseFieldNumber = 1040;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage NotifyFinalityConflictsResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyFinalityConflictsResponse;
      }
    }

    /// <summary>Field number for the "finalityConflictNotification" field.</summary>
    public const int FinalityConflictNotificationFieldNumber = 1041;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage FinalityConflictNotification {
      get { return payloadCase_ == PayloadOneofCase.FinalityConflictNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.FinalityConflictNotification;
      }
    }

    /// <summary>Field number for the "finalityConflictResolvedNotification" field.</summary>
    public const int FinalityConflictResolvedNotificationFieldNumber = 1042;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage FinalityConflictResolvedNotification {
      get { return payloadCase_ == PayloadOneofCase.FinalityConflictResolvedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.FinalityConflictResolvedNotification;
      }
    }

    /// <summary>Field number for the "getMempoolEntriesRequest" field.</summary>
    public const int GetMempoolEntriesRequestFieldNumber = 1043;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage GetMempoolEntriesRequest {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntriesRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntriesRequest;
      }
    }

    /// <summary>Field number for the "getMempoolEntriesResponse" field.</summary>
    public const int GetMempoolEntriesResponseFieldNumber = 1044;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage GetMempoolEntriesResponse {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntriesResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntriesResponse;
      }
    }

    /// <summary>Field number for the "shutDownRequest" field.</summary>
    public const int ShutDownRequestFieldNumber = 1045;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage ShutDownRequest {
      get { return payloadCase_ == PayloadOneofCase.ShutDownRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ShutDownRequest;
      }
    }

    /// <summary>Field number for the "shutDownResponse" field.</summary>
    public const int ShutDownResponseFieldNumber = 1046;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage ShutDownResponse {
      get { return payloadCase_ == PayloadOneofCase.ShutDownResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ShutDownResponse;
      }
    }

    /// <summary>Field number for the "getHeadersRequest" field.</summary>
    public const int GetHeadersRequestFieldNumber = 1047;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage GetHeadersRequest {
      get { return payloadCase_ == PayloadOneofCase.GetHeadersRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetHeadersRequest;
      }
    }

    /// <summary>Field number for the "getHeadersResponse" field.</summary>
    public const int GetHeadersResponseFieldNumber = 1048;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage GetHeadersResponse {
      get { return payloadCase_ == PayloadOneofCase.GetHeadersResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetHeadersResponse;
      }
    }

    /// <summary>Field number for the "notifyUtxosChangedRequest" field.</summary>
    public const int NotifyUtxosChangedRequestFieldNumber = 1049;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage NotifyUtxosChangedRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyUtxosChangedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyUtxosChangedRequest;
      }
    }

    /// <summary>Field number for the "notifyUtxosChangedResponse" field.</summary>
    public const int NotifyUtxosChangedResponseFieldNumber = 1050;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage NotifyUtxosChangedResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyUtxosChangedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyUtxosChangedResponse;
      }
    }

    /// <summary>Field number for the "utxosChangedNotification" field.</summary>
    public const int UtxosChangedNotificationFieldNumber = 1051;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage UtxosChangedNotification {
      get { return payloadCase_ == PayloadOneofCase.UtxosChangedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.UtxosChangedNotification;
      }
    }

    /// <summary>Field number for the "getUtxosByAddressesRequest" field.</summary>
    public const int GetUtxosByAddressesRequestFieldNumber = 1052;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage GetUtxosByAddressesRequest {
      get { return payloadCase_ == PayloadOneofCase.GetUtxosByAddressesRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetUtxosByAddressesRequest;
      }
    }

    /// <summary>Field number for the "getUtxosByAddressesResponse" field.</summary>
    public const int GetUtxosByAddressesResponseFieldNumber = 1053;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage GetUtxosByAddressesResponse {
      get { return payloadCase_ == PayloadOneofCase.GetUtxosByAddressesResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetUtxosByAddressesResponse;
      }
    }

    /// <summary>Field number for the "getVirtualSelectedParentBlueScoreRequest" field.</summary>
    public const int GetVirtualSelectedParentBlueScoreRequestFieldNumber = 1054;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage GetVirtualSelectedParentBlueScoreRequest {
      get { return payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest;
      }
    }

    /// <summary>Field number for the "getVirtualSelectedParentBlueScoreResponse" field.</summary>
    public const int GetVirtualSelectedParentBlueScoreResponseFieldNumber = 1055;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage GetVirtualSelectedParentBlueScoreResponse {
      get { return payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse;
      }
    }

    /// <summary>Field number for the "notifyVirtualSelectedParentBlueScoreChangedRequest" field.</summary>
    public const int NotifyVirtualSelectedParentBlueScoreChangedRequestFieldNumber = 1056;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage NotifyVirtualSelectedParentBlueScoreChangedRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest;
      }
    }

    /// <summary>Field number for the "notifyVirtualSelectedParentBlueScoreChangedResponse" field.</summary>
    public const int NotifyVirtualSelectedParentBlueScoreChangedResponseFieldNumber = 1057;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage NotifyVirtualSelectedParentBlueScoreChangedResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse;
      }
    }

    /// <summary>Field number for the "virtualSelectedParentBlueScoreChangedNotification" field.</summary>
    public const int VirtualSelectedParentBlueScoreChangedNotificationFieldNumber = 1058;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage VirtualSelectedParentBlueScoreChangedNotification {
      get { return payloadCase_ == PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification;
      }
    }

    /// <summary>Field number for the "banRequest" field.</summary>
    public const int BanRequestFieldNumber = 1059;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage BanRequest {
      get { return payloadCase_ == PayloadOneofCase.BanRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BanRequest;
      }
    }

    /// <summary>Field number for the "banResponse" field.</summary>
    public const int BanResponseFieldNumber = 1060;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage BanResponse {
      get { return payloadCase_ == PayloadOneofCase.BanResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BanResponse;
      }
    }

    /// <summary>Field number for the "unbanRequest" field.</summary>
    public const int UnbanRequestFieldNumber = 1061;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage UnbanRequest {
      get { return payloadCase_ == PayloadOneofCase.UnbanRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.UnbanRequest;
      }
    }

    /// <summary>Field number for the "unbanResponse" field.</summary>
    public const int UnbanResponseFieldNumber = 1062;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage UnbanResponse {
      get { return payloadCase_ == PayloadOneofCase.UnbanResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.UnbanResponse;
      }
    }

    /// <summary>Field number for the "getInfoRequest" field.</summary>
    public const int GetInfoRequestFieldNumber = 1063;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage GetInfoRequest {
      get { return payloadCase_ == PayloadOneofCase.GetInfoRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetInfoRequest;
      }
    }

    /// <summary>Field number for the "getInfoResponse" field.</summary>
    public const int GetInfoResponseFieldNumber = 1064;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage GetInfoResponse {
      get { return payloadCase_ == PayloadOneofCase.GetInfoResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetInfoResponse;
      }
    }

    /// <summary>Field number for the "stopNotifyingUtxosChangedRequest" field.</summary>
    public const int StopNotifyingUtxosChangedRequestFieldNumber = 1065;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage StopNotifyingUtxosChangedRequest {
      get { return payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StopNotifyingUtxosChangedRequest;
      }
    }

    /// <summary>Field number for the "stopNotifyingUtxosChangedResponse" field.</summary>
    public const int StopNotifyingUtxosChangedResponseFieldNumber = 1066;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage StopNotifyingUtxosChangedResponse {
      get { return payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StopNotifyingUtxosChangedResponse;
      }
    }

    /// <summary>Field number for the "notifyPruningPointUTXOSetOverrideRequest" field.</summary>
    public const int NotifyPruningPointUTXOSetOverrideRequestFieldNumber = 1067;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage NotifyPruningPointUTXOSetOverrideRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest;
      }
    }

    /// <summary>Field number for the "notifyPruningPointUTXOSetOverrideResponse" field.</summary>
    public const int NotifyPruningPointUTXOSetOverrideResponseFieldNumber = 1068;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage NotifyPruningPointUTXOSetOverrideResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse;
      }
    }

    /// <summary>Field number for the "pruningPointUTXOSetOverrideNotification" field.</summary>
    public const int PruningPointUTXOSetOverrideNotificationFieldNumber = 1069;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage PruningPointUTXOSetOverrideNotification {
      get { return payloadCase_ == PayloadOneofCase.PruningPointUTXOSetOverrideNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PruningPointUTXOSetOverrideNotification;
      }
    }

    /// <summary>Field number for the "stopNotifyingPruningPointUTXOSetOverrideRequest" field.</summary>
    public const int StopNotifyingPruningPointUTXOSetOverrideRequestFieldNumber = 1070;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage StopNotifyingPruningPointUTXOSetOverrideRequest {
      get { return payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest;
      }
    }

    /// <summary>Field number for the "stopNotifyingPruningPointUTXOSetOverrideResponse" field.</summary>
    public const int StopNotifyingPruningPointUTXOSetOverrideResponseFieldNumber = 1071;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage StopNotifyingPruningPointUTXOSetOverrideResponse {
      get { return payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse;
      }
    }

    /// <summary>Field number for the "estimateNetworkHashesPerSecondRequest" field.</summary>
    public const int EstimateNetworkHashesPerSecondRequestFieldNumber = 1072;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage EstimateNetworkHashesPerSecondRequest {
      get { return payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EstimateNetworkHashesPerSecondRequest;
      }
    }

    /// <summary>Field number for the "estimateNetworkHashesPerSecondResponse" field.</summary>
    public const int EstimateNetworkHashesPerSecondResponseFieldNumber = 1073;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage EstimateNetworkHashesPerSecondResponse {
      get { return payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EstimateNetworkHashesPerSecondResponse;
      }
    }

    /// <summary>Field number for the "notifyVirtualDaaScoreChangedRequest" field.</summary>
    public const int NotifyVirtualDaaScoreChangedRequestFieldNumber = 1074;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage NotifyVirtualDaaScoreChangedRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest;
      }
    }

    /// <summary>Field number for the "notifyVirtualDaaScoreChangedResponse" field.</summary>
    public const int NotifyVirtualDaaScoreChangedResponseFieldNumber = 1075;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage NotifyVirtualDaaScoreChangedResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse;
      }
    }

    /// <summary>Field number for the "virtualDaaScoreChangedNotification" field.</summary>
    public const int VirtualDaaScoreChangedNotificationFieldNumber = 1076;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage VirtualDaaScoreChangedNotification {
      get { return payloadCase_ == PayloadOneofCase.VirtualDaaScoreChangedNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.VirtualDaaScoreChangedNotification;
      }
    }

    /// <summary>Field number for the "getBalanceByAddressRequest" field.</summary>
    public const int GetBalanceByAddressRequestFieldNumber = 1077;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage GetBalanceByAddressRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBalanceByAddressRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBalanceByAddressRequest;
      }
    }

    /// <summary>Field number for the "getBalanceByAddressResponse" field.</summary>
    public const int GetBalanceByAddressResponseFieldNumber = 1078;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage GetBalanceByAddressResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBalanceByAddressResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBalanceByAddressResponse;
      }
    }

    /// <summary>Field number for the "getBalancesByAddressesRequest" field.</summary>
    public const int GetBalancesByAddressesRequestFieldNumber = 1079;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage GetBalancesByAddressesRequest {
      get { return payloadCase_ == PayloadOneofCase.GetBalancesByAddressesRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBalancesByAddressesRequest;
      }
    }

    /// <summary>Field number for the "getBalancesByAddressesResponse" field.</summary>
    public const int GetBalancesByAddressesResponseFieldNumber = 1080;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage GetBalancesByAddressesResponse {
      get { return payloadCase_ == PayloadOneofCase.GetBalancesByAddressesResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetBalancesByAddressesResponse;
      }
    }

    /// <summary>Field number for the "notifyNewBlockTemplateRequest" field.</summary>
    public const int NotifyNewBlockTemplateRequestFieldNumber = 1081;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage NotifyNewBlockTemplateRequest {
      get { return payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyNewBlockTemplateRequest;
      }
    }

    /// <summary>Field number for the "notifyNewBlockTemplateResponse" field.</summary>
    public const int NotifyNewBlockTemplateResponseFieldNumber = 1082;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage NotifyNewBlockTemplateResponse {
      get { return payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NotifyNewBlockTemplateResponse;
      }
    }

    /// <summary>Field number for the "newBlockTemplateNotification" field.</summary>
    public const int NewBlockTemplateNotificationFieldNumber = 1083;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage NewBlockTemplateNotification {
      get { return payloadCase_ == PayloadOneofCase.NewBlockTemplateNotification ? (global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.NewBlockTemplateNotification;
      }
    }

    /// <summary>Field number for the "getMempoolEntriesByAddressesRequest" field.</summary>
    public const int GetMempoolEntriesByAddressesRequestFieldNumber = 1084;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage GetMempoolEntriesByAddressesRequest {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntriesByAddressesRequest;
      }
    }

    /// <summary>Field number for the "getMempoolEntriesByAddressesResponse" field.</summary>
    public const int GetMempoolEntriesByAddressesResponseFieldNumber = 1085;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage GetMempoolEntriesByAddressesResponse {
      get { return payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMempoolEntriesByAddressesResponse;
      }
    }

    /// <summary>Field number for the "getCoinSupplyRequest" field.</summary>
    public const int GetCoinSupplyRequestFieldNumber = 1086;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage GetCoinSupplyRequest {
      get { return payloadCase_ == PayloadOneofCase.GetCoinSupplyRequest ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetCoinSupplyRequest;
      }
    }

    /// <summary>Field number for the "getCoinSupplyResponse" field.</summary>
    public const int GetCoinSupplyResponseFieldNumber = 1087;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage GetCoinSupplyResponse {
      get { return payloadCase_ == PayloadOneofCase.GetCoinSupplyResponse ? (global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetCoinSupplyResponse;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Addresses = 1,
      Block = 2,
      Transaction = 3,
      BlockLocator = 5,
      RequestAddresses = 6,
      RequestRelayBlocks = 10,
      RequestTransactions = 12,
      IbdBlock = 13,
      InvRelayBlock = 14,
      InvTransactions = 15,
      Ping = 16,
      Pong = 17,
      Verack = 19,
      Version = 20,
      TransactionNotFound = 21,
      Reject = 22,
      PruningPointUtxoSetChunk = 25,
      RequestIBDBlocks = 26,
      UnexpectedPruningPoint = 27,
      IbdBlockLocator = 30,
      IbdBlockLocatorHighestHash = 31,
      RequestNextPruningPointUtxoSetChunk = 33,
      DonePruningPointUtxoSetChunks = 34,
      IbdBlockLocatorHighestHashNotFound = 35,
      BlockWithTrustedData = 36,
      DoneBlocksWithTrustedData = 37,
      RequestPruningPointAndItsAnticone = 40,
      BlockHeaders = 41,
      RequestNextHeaders = 42,
      DoneHeaders = 43,
      RequestPruningPointUTXOSet = 44,
      RequestHeaders = 45,
      RequestBlockLocator = 46,
      PruningPoints = 47,
      RequestPruningPointProof = 48,
      PruningPointProof = 49,
      Ready = 50,
      BlockWithTrustedDataV4 = 51,
      TrustedData = 52,
      RequestIBDChainBlockLocator = 53,
      IbdChainBlockLocator = 54,
      RequestAnticone = 55,
      RequestNextPruningPointAndItsAnticoneBlocks = 56,
      GetCurrentNetworkRequest = 1001,
      GetCurrentNetworkResponse = 1002,
      SubmitBlockRequest = 1003,
      SubmitBlockResponse = 1004,
      GetBlockTemplateRequest = 1005,
      GetBlockTemplateResponse = 1006,
      NotifyBlockAddedRequest = 1007,
      NotifyBlockAddedResponse = 1008,
      BlockAddedNotification = 1009,
      GetPeerAddressesRequest = 1010,
      GetPeerAddressesResponse = 1011,
      GetSelectedTipHashRequest = 1012,
      GetSelectedTipHashResponse = 1013,
      GetMempoolEntryRequest = 1014,
      GetMempoolEntryResponse = 1015,
      GetConnectedPeerInfoRequest = 1016,
      GetConnectedPeerInfoResponse = 1017,
      AddPeerRequest = 1018,
      AddPeerResponse = 1019,
      SubmitTransactionRequest = 1020,
      SubmitTransactionResponse = 1021,
      NotifyVirtualSelectedParentChainChangedRequest = 1022,
      NotifyVirtualSelectedParentChainChangedResponse = 1023,
      VirtualSelectedParentChainChangedNotification = 1024,
      GetBlockRequest = 1025,
      GetBlockResponse = 1026,
      GetSubnetworkRequest = 1027,
      GetSubnetworkResponse = 1028,
      GetVirtualSelectedParentChainFromBlockRequest = 1029,
      GetVirtualSelectedParentChainFromBlockResponse = 1030,
      GetBlocksRequest = 1031,
      GetBlocksResponse = 1032,
      GetBlockCountRequest = 1033,
      GetBlockCountResponse = 1034,
      GetBlockDagInfoRequest = 1035,
      GetBlockDagInfoResponse = 1036,
      ResolveFinalityConflictRequest = 1037,
      ResolveFinalityConflictResponse = 1038,
      NotifyFinalityConflictsRequest = 1039,
      NotifyFinalityConflictsResponse = 1040,
      FinalityConflictNotification = 1041,
      FinalityConflictResolvedNotification = 1042,
      GetMempoolEntriesRequest = 1043,
      GetMempoolEntriesResponse = 1044,
      ShutDownRequest = 1045,
      ShutDownResponse = 1046,
      GetHeadersRequest = 1047,
      GetHeadersResponse = 1048,
      NotifyUtxosChangedRequest = 1049,
      NotifyUtxosChangedResponse = 1050,
      UtxosChangedNotification = 1051,
      GetUtxosByAddressesRequest = 1052,
      GetUtxosByAddressesResponse = 1053,
      GetVirtualSelectedParentBlueScoreRequest = 1054,
      GetVirtualSelectedParentBlueScoreResponse = 1055,
      NotifyVirtualSelectedParentBlueScoreChangedRequest = 1056,
      NotifyVirtualSelectedParentBlueScoreChangedResponse = 1057,
      VirtualSelectedParentBlueScoreChangedNotification = 1058,
      BanRequest = 1059,
      BanResponse = 1060,
      UnbanRequest = 1061,
      UnbanResponse = 1062,
      GetInfoRequest = 1063,
      GetInfoResponse = 1064,
      StopNotifyingUtxosChangedRequest = 1065,
      StopNotifyingUtxosChangedResponse = 1066,
      NotifyPruningPointUTXOSetOverrideRequest = 1067,
      NotifyPruningPointUTXOSetOverrideResponse = 1068,
      PruningPointUTXOSetOverrideNotification = 1069,
      StopNotifyingPruningPointUTXOSetOverrideRequest = 1070,
      StopNotifyingPruningPointUTXOSetOverrideResponse = 1071,
      EstimateNetworkHashesPerSecondRequest = 1072,
      EstimateNetworkHashesPerSecondResponse = 1073,
      NotifyVirtualDaaScoreChangedRequest = 1074,
      NotifyVirtualDaaScoreChangedResponse = 1075,
      VirtualDaaScoreChangedNotification = 1076,
      GetBalanceByAddressRequest = 1077,
      GetBalanceByAddressResponse = 1078,
      GetBalancesByAddressesRequest = 1079,
      GetBalancesByAddressesResponse = 1080,
      NotifyNewBlockTemplateRequest = 1081,
      NotifyNewBlockTemplateResponse = 1082,
      NewBlockTemplateNotification = 1083,
      GetMempoolEntriesByAddressesRequest = 1084,
      GetMempoolEntriesByAddressesResponse = 1085,
      GetCoinSupplyRequest = 1086,
      GetCoinSupplyResponse = 1087,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KaspadMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KaspadMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Addresses, other.Addresses)) return false;
      if (!object.Equals(Block, other.Block)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(BlockLocator, other.BlockLocator)) return false;
      if (!object.Equals(RequestAddresses, other.RequestAddresses)) return false;
      if (!object.Equals(RequestRelayBlocks, other.RequestRelayBlocks)) return false;
      if (!object.Equals(RequestTransactions, other.RequestTransactions)) return false;
      if (!object.Equals(IbdBlock, other.IbdBlock)) return false;
      if (!object.Equals(InvRelayBlock, other.InvRelayBlock)) return false;
      if (!object.Equals(InvTransactions, other.InvTransactions)) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Pong, other.Pong)) return false;
      if (!object.Equals(Verack, other.Verack)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (!object.Equals(TransactionNotFound, other.TransactionNotFound)) return false;
      if (!object.Equals(Reject, other.Reject)) return false;
      if (!object.Equals(PruningPointUtxoSetChunk, other.PruningPointUtxoSetChunk)) return false;
      if (!object.Equals(RequestIBDBlocks, other.RequestIBDBlocks)) return false;
      if (!object.Equals(UnexpectedPruningPoint, other.UnexpectedPruningPoint)) return false;
      if (!object.Equals(IbdBlockLocator, other.IbdBlockLocator)) return false;
      if (!object.Equals(IbdBlockLocatorHighestHash, other.IbdBlockLocatorHighestHash)) return false;
      if (!object.Equals(RequestNextPruningPointUtxoSetChunk, other.RequestNextPruningPointUtxoSetChunk)) return false;
      if (!object.Equals(DonePruningPointUtxoSetChunks, other.DonePruningPointUtxoSetChunks)) return false;
      if (!object.Equals(IbdBlockLocatorHighestHashNotFound, other.IbdBlockLocatorHighestHashNotFound)) return false;
      if (!object.Equals(BlockWithTrustedData, other.BlockWithTrustedData)) return false;
      if (!object.Equals(DoneBlocksWithTrustedData, other.DoneBlocksWithTrustedData)) return false;
      if (!object.Equals(RequestPruningPointAndItsAnticone, other.RequestPruningPointAndItsAnticone)) return false;
      if (!object.Equals(BlockHeaders, other.BlockHeaders)) return false;
      if (!object.Equals(RequestNextHeaders, other.RequestNextHeaders)) return false;
      if (!object.Equals(DoneHeaders, other.DoneHeaders)) return false;
      if (!object.Equals(RequestPruningPointUTXOSet, other.RequestPruningPointUTXOSet)) return false;
      if (!object.Equals(RequestHeaders, other.RequestHeaders)) return false;
      if (!object.Equals(RequestBlockLocator, other.RequestBlockLocator)) return false;
      if (!object.Equals(PruningPoints, other.PruningPoints)) return false;
      if (!object.Equals(RequestPruningPointProof, other.RequestPruningPointProof)) return false;
      if (!object.Equals(PruningPointProof, other.PruningPointProof)) return false;
      if (!object.Equals(Ready, other.Ready)) return false;
      if (!object.Equals(BlockWithTrustedDataV4, other.BlockWithTrustedDataV4)) return false;
      if (!object.Equals(TrustedData, other.TrustedData)) return false;
      if (!object.Equals(RequestIBDChainBlockLocator, other.RequestIBDChainBlockLocator)) return false;
      if (!object.Equals(IbdChainBlockLocator, other.IbdChainBlockLocator)) return false;
      if (!object.Equals(RequestAnticone, other.RequestAnticone)) return false;
      if (!object.Equals(RequestNextPruningPointAndItsAnticoneBlocks, other.RequestNextPruningPointAndItsAnticoneBlocks)) return false;
      if (!object.Equals(GetCurrentNetworkRequest, other.GetCurrentNetworkRequest)) return false;
      if (!object.Equals(GetCurrentNetworkResponse, other.GetCurrentNetworkResponse)) return false;
      if (!object.Equals(SubmitBlockRequest, other.SubmitBlockRequest)) return false;
      if (!object.Equals(SubmitBlockResponse, other.SubmitBlockResponse)) return false;
      if (!object.Equals(GetBlockTemplateRequest, other.GetBlockTemplateRequest)) return false;
      if (!object.Equals(GetBlockTemplateResponse, other.GetBlockTemplateResponse)) return false;
      if (!object.Equals(NotifyBlockAddedRequest, other.NotifyBlockAddedRequest)) return false;
      if (!object.Equals(NotifyBlockAddedResponse, other.NotifyBlockAddedResponse)) return false;
      if (!object.Equals(BlockAddedNotification, other.BlockAddedNotification)) return false;
      if (!object.Equals(GetPeerAddressesRequest, other.GetPeerAddressesRequest)) return false;
      if (!object.Equals(GetPeerAddressesResponse, other.GetPeerAddressesResponse)) return false;
      if (!object.Equals(GetSelectedTipHashRequest, other.GetSelectedTipHashRequest)) return false;
      if (!object.Equals(GetSelectedTipHashResponse, other.GetSelectedTipHashResponse)) return false;
      if (!object.Equals(GetMempoolEntryRequest, other.GetMempoolEntryRequest)) return false;
      if (!object.Equals(GetMempoolEntryResponse, other.GetMempoolEntryResponse)) return false;
      if (!object.Equals(GetConnectedPeerInfoRequest, other.GetConnectedPeerInfoRequest)) return false;
      if (!object.Equals(GetConnectedPeerInfoResponse, other.GetConnectedPeerInfoResponse)) return false;
      if (!object.Equals(AddPeerRequest, other.AddPeerRequest)) return false;
      if (!object.Equals(AddPeerResponse, other.AddPeerResponse)) return false;
      if (!object.Equals(SubmitTransactionRequest, other.SubmitTransactionRequest)) return false;
      if (!object.Equals(SubmitTransactionResponse, other.SubmitTransactionResponse)) return false;
      if (!object.Equals(NotifyVirtualSelectedParentChainChangedRequest, other.NotifyVirtualSelectedParentChainChangedRequest)) return false;
      if (!object.Equals(NotifyVirtualSelectedParentChainChangedResponse, other.NotifyVirtualSelectedParentChainChangedResponse)) return false;
      if (!object.Equals(VirtualSelectedParentChainChangedNotification, other.VirtualSelectedParentChainChangedNotification)) return false;
      if (!object.Equals(GetBlockRequest, other.GetBlockRequest)) return false;
      if (!object.Equals(GetBlockResponse, other.GetBlockResponse)) return false;
      if (!object.Equals(GetSubnetworkRequest, other.GetSubnetworkRequest)) return false;
      if (!object.Equals(GetSubnetworkResponse, other.GetSubnetworkResponse)) return false;
      if (!object.Equals(GetVirtualSelectedParentChainFromBlockRequest, other.GetVirtualSelectedParentChainFromBlockRequest)) return false;
      if (!object.Equals(GetVirtualSelectedParentChainFromBlockResponse, other.GetVirtualSelectedParentChainFromBlockResponse)) return false;
      if (!object.Equals(GetBlocksRequest, other.GetBlocksRequest)) return false;
      if (!object.Equals(GetBlocksResponse, other.GetBlocksResponse)) return false;
      if (!object.Equals(GetBlockCountRequest, other.GetBlockCountRequest)) return false;
      if (!object.Equals(GetBlockCountResponse, other.GetBlockCountResponse)) return false;
      if (!object.Equals(GetBlockDagInfoRequest, other.GetBlockDagInfoRequest)) return false;
      if (!object.Equals(GetBlockDagInfoResponse, other.GetBlockDagInfoResponse)) return false;
      if (!object.Equals(ResolveFinalityConflictRequest, other.ResolveFinalityConflictRequest)) return false;
      if (!object.Equals(ResolveFinalityConflictResponse, other.ResolveFinalityConflictResponse)) return false;
      if (!object.Equals(NotifyFinalityConflictsRequest, other.NotifyFinalityConflictsRequest)) return false;
      if (!object.Equals(NotifyFinalityConflictsResponse, other.NotifyFinalityConflictsResponse)) return false;
      if (!object.Equals(FinalityConflictNotification, other.FinalityConflictNotification)) return false;
      if (!object.Equals(FinalityConflictResolvedNotification, other.FinalityConflictResolvedNotification)) return false;
      if (!object.Equals(GetMempoolEntriesRequest, other.GetMempoolEntriesRequest)) return false;
      if (!object.Equals(GetMempoolEntriesResponse, other.GetMempoolEntriesResponse)) return false;
      if (!object.Equals(ShutDownRequest, other.ShutDownRequest)) return false;
      if (!object.Equals(ShutDownResponse, other.ShutDownResponse)) return false;
      if (!object.Equals(GetHeadersRequest, other.GetHeadersRequest)) return false;
      if (!object.Equals(GetHeadersResponse, other.GetHeadersResponse)) return false;
      if (!object.Equals(NotifyUtxosChangedRequest, other.NotifyUtxosChangedRequest)) return false;
      if (!object.Equals(NotifyUtxosChangedResponse, other.NotifyUtxosChangedResponse)) return false;
      if (!object.Equals(UtxosChangedNotification, other.UtxosChangedNotification)) return false;
      if (!object.Equals(GetUtxosByAddressesRequest, other.GetUtxosByAddressesRequest)) return false;
      if (!object.Equals(GetUtxosByAddressesResponse, other.GetUtxosByAddressesResponse)) return false;
      if (!object.Equals(GetVirtualSelectedParentBlueScoreRequest, other.GetVirtualSelectedParentBlueScoreRequest)) return false;
      if (!object.Equals(GetVirtualSelectedParentBlueScoreResponse, other.GetVirtualSelectedParentBlueScoreResponse)) return false;
      if (!object.Equals(NotifyVirtualSelectedParentBlueScoreChangedRequest, other.NotifyVirtualSelectedParentBlueScoreChangedRequest)) return false;
      if (!object.Equals(NotifyVirtualSelectedParentBlueScoreChangedResponse, other.NotifyVirtualSelectedParentBlueScoreChangedResponse)) return false;
      if (!object.Equals(VirtualSelectedParentBlueScoreChangedNotification, other.VirtualSelectedParentBlueScoreChangedNotification)) return false;
      if (!object.Equals(BanRequest, other.BanRequest)) return false;
      if (!object.Equals(BanResponse, other.BanResponse)) return false;
      if (!object.Equals(UnbanRequest, other.UnbanRequest)) return false;
      if (!object.Equals(UnbanResponse, other.UnbanResponse)) return false;
      if (!object.Equals(GetInfoRequest, other.GetInfoRequest)) return false;
      if (!object.Equals(GetInfoResponse, other.GetInfoResponse)) return false;
      if (!object.Equals(StopNotifyingUtxosChangedRequest, other.StopNotifyingUtxosChangedRequest)) return false;
      if (!object.Equals(StopNotifyingUtxosChangedResponse, other.StopNotifyingUtxosChangedResponse)) return false;
      if (!object.Equals(NotifyPruningPointUTXOSetOverrideRequest, other.NotifyPruningPointUTXOSetOverrideRequest)) return false;
      if (!object.Equals(NotifyPruningPointUTXOSetOverrideResponse, other.NotifyPruningPointUTXOSetOverrideResponse)) return false;
      if (!object.Equals(PruningPointUTXOSetOverrideNotification, other.PruningPointUTXOSetOverrideNotification)) return false;
      if (!object.Equals(StopNotifyingPruningPointUTXOSetOverrideRequest, other.StopNotifyingPruningPointUTXOSetOverrideRequest)) return false;
      if (!object.Equals(StopNotifyingPruningPointUTXOSetOverrideResponse, other.StopNotifyingPruningPointUTXOSetOverrideResponse)) return false;
      if (!object.Equals(EstimateNetworkHashesPerSecondRequest, other.EstimateNetworkHashesPerSecondRequest)) return false;
      if (!object.Equals(EstimateNetworkHashesPerSecondResponse, other.EstimateNetworkHashesPerSecondResponse)) return false;
      if (!object.Equals(NotifyVirtualDaaScoreChangedRequest, other.NotifyVirtualDaaScoreChangedRequest)) return false;
      if (!object.Equals(NotifyVirtualDaaScoreChangedResponse, other.NotifyVirtualDaaScoreChangedResponse)) return false;
      if (!object.Equals(VirtualDaaScoreChangedNotification, other.VirtualDaaScoreChangedNotification)) return false;
      if (!object.Equals(GetBalanceByAddressRequest, other.GetBalanceByAddressRequest)) return false;
      if (!object.Equals(GetBalanceByAddressResponse, other.GetBalanceByAddressResponse)) return false;
      if (!object.Equals(GetBalancesByAddressesRequest, other.GetBalancesByAddressesRequest)) return false;
      if (!object.Equals(GetBalancesByAddressesResponse, other.GetBalancesByAddressesResponse)) return false;
      if (!object.Equals(NotifyNewBlockTemplateRequest, other.NotifyNewBlockTemplateRequest)) return false;
      if (!object.Equals(NotifyNewBlockTemplateResponse, other.NotifyNewBlockTemplateResponse)) return false;
      if (!object.Equals(NewBlockTemplateNotification, other.NewBlockTemplateNotification)) return false;
      if (!object.Equals(GetMempoolEntriesByAddressesRequest, other.GetMempoolEntriesByAddressesRequest)) return false;
      if (!object.Equals(GetMempoolEntriesByAddressesResponse, other.GetMempoolEntriesByAddressesResponse)) return false;
      if (!object.Equals(GetCoinSupplyRequest, other.GetCoinSupplyRequest)) return false;
      if (!object.Equals(GetCoinSupplyResponse, other.GetCoinSupplyResponse)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Addresses) hash ^= Addresses.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Block) hash ^= Block.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Transaction) hash ^= Transaction.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BlockLocator) hash ^= BlockLocator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestAddresses) hash ^= RequestAddresses.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestRelayBlocks) hash ^= RequestRelayBlocks.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestTransactions) hash ^= RequestTransactions.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.IbdBlock) hash ^= IbdBlock.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.InvRelayBlock) hash ^= InvRelayBlock.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.InvTransactions) hash ^= InvTransactions.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Pong) hash ^= Pong.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Verack) hash ^= Verack.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Version) hash ^= Version.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.TransactionNotFound) hash ^= TransactionNotFound.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Reject) hash ^= Reject.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PruningPointUtxoSetChunk) hash ^= PruningPointUtxoSetChunk.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestIBDBlocks) hash ^= RequestIBDBlocks.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.UnexpectedPruningPoint) hash ^= UnexpectedPruningPoint.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocator) hash ^= IbdBlockLocator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHash) hash ^= IbdBlockLocatorHighestHash.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointUtxoSetChunk) hash ^= RequestNextPruningPointUtxoSetChunk.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DonePruningPointUtxoSetChunks) hash ^= DonePruningPointUtxoSetChunks.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHashNotFound) hash ^= IbdBlockLocatorHighestHashNotFound.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedData) hash ^= BlockWithTrustedData.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DoneBlocksWithTrustedData) hash ^= DoneBlocksWithTrustedData.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointAndItsAnticone) hash ^= RequestPruningPointAndItsAnticone.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BlockHeaders) hash ^= BlockHeaders.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestNextHeaders) hash ^= RequestNextHeaders.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DoneHeaders) hash ^= DoneHeaders.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointUTXOSet) hash ^= RequestPruningPointUTXOSet.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestHeaders) hash ^= RequestHeaders.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestBlockLocator) hash ^= RequestBlockLocator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PruningPoints) hash ^= PruningPoints.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointProof) hash ^= RequestPruningPointProof.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PruningPointProof) hash ^= PruningPointProof.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Ready) hash ^= Ready.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedDataV4) hash ^= BlockWithTrustedDataV4.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.TrustedData) hash ^= TrustedData.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestIBDChainBlockLocator) hash ^= RequestIBDChainBlockLocator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.IbdChainBlockLocator) hash ^= IbdChainBlockLocator.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestAnticone) hash ^= RequestAnticone.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks) hash ^= RequestNextPruningPointAndItsAnticoneBlocks.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkRequest) hash ^= GetCurrentNetworkRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkResponse) hash ^= GetCurrentNetworkResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubmitBlockRequest) hash ^= SubmitBlockRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubmitBlockResponse) hash ^= SubmitBlockResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateRequest) hash ^= GetBlockTemplateRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateResponse) hash ^= GetBlockTemplateResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedRequest) hash ^= NotifyBlockAddedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedResponse) hash ^= NotifyBlockAddedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BlockAddedNotification) hash ^= BlockAddedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesRequest) hash ^= GetPeerAddressesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesResponse) hash ^= GetPeerAddressesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashRequest) hash ^= GetSelectedTipHashRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashResponse) hash ^= GetSelectedTipHashResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryRequest) hash ^= GetMempoolEntryRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryResponse) hash ^= GetMempoolEntryResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoRequest) hash ^= GetConnectedPeerInfoRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoResponse) hash ^= GetConnectedPeerInfoResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.AddPeerRequest) hash ^= AddPeerRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.AddPeerResponse) hash ^= AddPeerResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionRequest) hash ^= SubmitTransactionRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionResponse) hash ^= SubmitTransactionResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest) hash ^= NotifyVirtualSelectedParentChainChangedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse) hash ^= NotifyVirtualSelectedParentChainChangedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentChainChangedNotification) hash ^= VirtualSelectedParentChainChangedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockRequest) hash ^= GetBlockRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockResponse) hash ^= GetBlockResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkRequest) hash ^= GetSubnetworkRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkResponse) hash ^= GetSubnetworkResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest) hash ^= GetVirtualSelectedParentChainFromBlockRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse) hash ^= GetVirtualSelectedParentChainFromBlockResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlocksRequest) hash ^= GetBlocksRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlocksResponse) hash ^= GetBlocksResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockCountRequest) hash ^= GetBlockCountRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockCountResponse) hash ^= GetBlockCountResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoRequest) hash ^= GetBlockDagInfoRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoResponse) hash ^= GetBlockDagInfoResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictRequest) hash ^= ResolveFinalityConflictRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictResponse) hash ^= ResolveFinalityConflictResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsRequest) hash ^= NotifyFinalityConflictsRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsResponse) hash ^= NotifyFinalityConflictsResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.FinalityConflictNotification) hash ^= FinalityConflictNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.FinalityConflictResolvedNotification) hash ^= FinalityConflictResolvedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesRequest) hash ^= GetMempoolEntriesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesResponse) hash ^= GetMempoolEntriesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ShutDownRequest) hash ^= ShutDownRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ShutDownResponse) hash ^= ShutDownResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetHeadersRequest) hash ^= GetHeadersRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetHeadersResponse) hash ^= GetHeadersResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedRequest) hash ^= NotifyUtxosChangedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedResponse) hash ^= NotifyUtxosChangedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.UtxosChangedNotification) hash ^= UtxosChangedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesRequest) hash ^= GetUtxosByAddressesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesResponse) hash ^= GetUtxosByAddressesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest) hash ^= GetVirtualSelectedParentBlueScoreRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse) hash ^= GetVirtualSelectedParentBlueScoreResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest) hash ^= NotifyVirtualSelectedParentBlueScoreChangedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse) hash ^= NotifyVirtualSelectedParentBlueScoreChangedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification) hash ^= VirtualSelectedParentBlueScoreChangedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BanRequest) hash ^= BanRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.BanResponse) hash ^= BanResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.UnbanRequest) hash ^= UnbanRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.UnbanResponse) hash ^= UnbanResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetInfoRequest) hash ^= GetInfoRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetInfoResponse) hash ^= GetInfoResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedRequest) hash ^= StopNotifyingUtxosChangedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedResponse) hash ^= StopNotifyingUtxosChangedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest) hash ^= NotifyPruningPointUTXOSetOverrideRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse) hash ^= NotifyPruningPointUTXOSetOverrideResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PruningPointUTXOSetOverrideNotification) hash ^= PruningPointUTXOSetOverrideNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest) hash ^= StopNotifyingPruningPointUTXOSetOverrideRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse) hash ^= StopNotifyingPruningPointUTXOSetOverrideResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondRequest) hash ^= EstimateNetworkHashesPerSecondRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondResponse) hash ^= EstimateNetworkHashesPerSecondResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest) hash ^= NotifyVirtualDaaScoreChangedRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse) hash ^= NotifyVirtualDaaScoreChangedResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.VirtualDaaScoreChangedNotification) hash ^= VirtualDaaScoreChangedNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressRequest) hash ^= GetBalanceByAddressRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressResponse) hash ^= GetBalanceByAddressResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesRequest) hash ^= GetBalancesByAddressesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesResponse) hash ^= GetBalancesByAddressesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateRequest) hash ^= NotifyNewBlockTemplateRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateResponse) hash ^= NotifyNewBlockTemplateResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.NewBlockTemplateNotification) hash ^= NewBlockTemplateNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesRequest) hash ^= GetMempoolEntriesByAddressesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesResponse) hash ^= GetMempoolEntriesByAddressesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyRequest) hash ^= GetCoinSupplyRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyResponse) hash ^= GetCoinSupplyResponse.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.Addresses) {
        output.WriteRawTag(10);
        output.WriteMessage(Addresses);
      }
      if (payloadCase_ == PayloadOneofCase.Block) {
        output.WriteRawTag(18);
        output.WriteMessage(Block);
      }
      if (payloadCase_ == PayloadOneofCase.Transaction) {
        output.WriteRawTag(26);
        output.WriteMessage(Transaction);
      }
      if (payloadCase_ == PayloadOneofCase.BlockLocator) {
        output.WriteRawTag(42);
        output.WriteMessage(BlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.RequestAddresses) {
        output.WriteRawTag(50);
        output.WriteMessage(RequestAddresses);
      }
      if (payloadCase_ == PayloadOneofCase.RequestRelayBlocks) {
        output.WriteRawTag(82);
        output.WriteMessage(RequestRelayBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.RequestTransactions) {
        output.WriteRawTag(98);
        output.WriteMessage(RequestTransactions);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlock) {
        output.WriteRawTag(106);
        output.WriteMessage(IbdBlock);
      }
      if (payloadCase_ == PayloadOneofCase.InvRelayBlock) {
        output.WriteRawTag(114);
        output.WriteMessage(InvRelayBlock);
      }
      if (payloadCase_ == PayloadOneofCase.InvTransactions) {
        output.WriteRawTag(122);
        output.WriteMessage(InvTransactions);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Ping);
      }
      if (payloadCase_ == PayloadOneofCase.Pong) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Pong);
      }
      if (payloadCase_ == PayloadOneofCase.Verack) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(Verack);
      }
      if (payloadCase_ == PayloadOneofCase.Version) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Version);
      }
      if (payloadCase_ == PayloadOneofCase.TransactionNotFound) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(TransactionNotFound);
      }
      if (payloadCase_ == PayloadOneofCase.Reject) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Reject);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointUtxoSetChunk) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(PruningPointUtxoSetChunk);
      }
      if (payloadCase_ == PayloadOneofCase.RequestIBDBlocks) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(RequestIBDBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.UnexpectedPruningPoint) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(UnexpectedPruningPoint);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocator) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(IbdBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHash) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(IbdBlockLocatorHighestHash);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointUtxoSetChunk) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(RequestNextPruningPointUtxoSetChunk);
      }
      if (payloadCase_ == PayloadOneofCase.DonePruningPointUtxoSetChunks) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(DonePruningPointUtxoSetChunks);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHashNotFound) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(IbdBlockLocatorHighestHashNotFound);
      }
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedData) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(BlockWithTrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.DoneBlocksWithTrustedData) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(DoneBlocksWithTrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointAndItsAnticone) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(RequestPruningPointAndItsAnticone);
      }
      if (payloadCase_ == PayloadOneofCase.BlockHeaders) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(BlockHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextHeaders) {
        output.WriteRawTag(210, 2);
        output.WriteMessage(RequestNextHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.DoneHeaders) {
        output.WriteRawTag(218, 2);
        output.WriteMessage(DoneHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointUTXOSet) {
        output.WriteRawTag(226, 2);
        output.WriteMessage(RequestPruningPointUTXOSet);
      }
      if (payloadCase_ == PayloadOneofCase.RequestHeaders) {
        output.WriteRawTag(234, 2);
        output.WriteMessage(RequestHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestBlockLocator) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(RequestBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPoints) {
        output.WriteRawTag(250, 2);
        output.WriteMessage(PruningPoints);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointProof) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(RequestPruningPointProof);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointProof) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(PruningPointProof);
      }
      if (payloadCase_ == PayloadOneofCase.Ready) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(Ready);
      }
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedDataV4) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(BlockWithTrustedDataV4);
      }
      if (payloadCase_ == PayloadOneofCase.TrustedData) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(TrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.RequestIBDChainBlockLocator) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(RequestIBDChainBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.IbdChainBlockLocator) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(IbdChainBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.RequestAnticone) {
        output.WriteRawTag(186, 3);
        output.WriteMessage(RequestAnticone);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks) {
        output.WriteRawTag(194, 3);
        output.WriteMessage(RequestNextPruningPointAndItsAnticoneBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkRequest) {
        output.WriteRawTag(202, 62);
        output.WriteMessage(GetCurrentNetworkRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkResponse) {
        output.WriteRawTag(210, 62);
        output.WriteMessage(GetCurrentNetworkResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitBlockRequest) {
        output.WriteRawTag(218, 62);
        output.WriteMessage(SubmitBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitBlockResponse) {
        output.WriteRawTag(226, 62);
        output.WriteMessage(SubmitBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateRequest) {
        output.WriteRawTag(234, 62);
        output.WriteMessage(GetBlockTemplateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateResponse) {
        output.WriteRawTag(242, 62);
        output.WriteMessage(GetBlockTemplateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedRequest) {
        output.WriteRawTag(250, 62);
        output.WriteMessage(NotifyBlockAddedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedResponse) {
        output.WriteRawTag(130, 63);
        output.WriteMessage(NotifyBlockAddedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.BlockAddedNotification) {
        output.WriteRawTag(138, 63);
        output.WriteMessage(BlockAddedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesRequest) {
        output.WriteRawTag(146, 63);
        output.WriteMessage(GetPeerAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesResponse) {
        output.WriteRawTag(154, 63);
        output.WriteMessage(GetPeerAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashRequest) {
        output.WriteRawTag(162, 63);
        output.WriteMessage(GetSelectedTipHashRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashResponse) {
        output.WriteRawTag(170, 63);
        output.WriteMessage(GetSelectedTipHashResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryRequest) {
        output.WriteRawTag(178, 63);
        output.WriteMessage(GetMempoolEntryRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryResponse) {
        output.WriteRawTag(186, 63);
        output.WriteMessage(GetMempoolEntryResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoRequest) {
        output.WriteRawTag(194, 63);
        output.WriteMessage(GetConnectedPeerInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoResponse) {
        output.WriteRawTag(202, 63);
        output.WriteMessage(GetConnectedPeerInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.AddPeerRequest) {
        output.WriteRawTag(210, 63);
        output.WriteMessage(AddPeerRequest);
      }
      if (payloadCase_ == PayloadOneofCase.AddPeerResponse) {
        output.WriteRawTag(218, 63);
        output.WriteMessage(AddPeerResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionRequest) {
        output.WriteRawTag(226, 63);
        output.WriteMessage(SubmitTransactionRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionResponse) {
        output.WriteRawTag(234, 63);
        output.WriteMessage(SubmitTransactionResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest) {
        output.WriteRawTag(242, 63);
        output.WriteMessage(NotifyVirtualSelectedParentChainChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse) {
        output.WriteRawTag(250, 63);
        output.WriteMessage(NotifyVirtualSelectedParentChainChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentChainChangedNotification) {
        output.WriteRawTag(130, 64);
        output.WriteMessage(VirtualSelectedParentChainChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockRequest) {
        output.WriteRawTag(138, 64);
        output.WriteMessage(GetBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockResponse) {
        output.WriteRawTag(146, 64);
        output.WriteMessage(GetBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkRequest) {
        output.WriteRawTag(154, 64);
        output.WriteMessage(GetSubnetworkRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkResponse) {
        output.WriteRawTag(162, 64);
        output.WriteMessage(GetSubnetworkResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest) {
        output.WriteRawTag(170, 64);
        output.WriteMessage(GetVirtualSelectedParentChainFromBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse) {
        output.WriteRawTag(178, 64);
        output.WriteMessage(GetVirtualSelectedParentChainFromBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlocksRequest) {
        output.WriteRawTag(186, 64);
        output.WriteMessage(GetBlocksRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlocksResponse) {
        output.WriteRawTag(194, 64);
        output.WriteMessage(GetBlocksResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockCountRequest) {
        output.WriteRawTag(202, 64);
        output.WriteMessage(GetBlockCountRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockCountResponse) {
        output.WriteRawTag(210, 64);
        output.WriteMessage(GetBlockCountResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoRequest) {
        output.WriteRawTag(218, 64);
        output.WriteMessage(GetBlockDagInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoResponse) {
        output.WriteRawTag(226, 64);
        output.WriteMessage(GetBlockDagInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictRequest) {
        output.WriteRawTag(234, 64);
        output.WriteMessage(ResolveFinalityConflictRequest);
      }
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictResponse) {
        output.WriteRawTag(242, 64);
        output.WriteMessage(ResolveFinalityConflictResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsRequest) {
        output.WriteRawTag(250, 64);
        output.WriteMessage(NotifyFinalityConflictsRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsResponse) {
        output.WriteRawTag(130, 65);
        output.WriteMessage(NotifyFinalityConflictsResponse);
      }
      if (payloadCase_ == PayloadOneofCase.FinalityConflictNotification) {
        output.WriteRawTag(138, 65);
        output.WriteMessage(FinalityConflictNotification);
      }
      if (payloadCase_ == PayloadOneofCase.FinalityConflictResolvedNotification) {
        output.WriteRawTag(146, 65);
        output.WriteMessage(FinalityConflictResolvedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesRequest) {
        output.WriteRawTag(154, 65);
        output.WriteMessage(GetMempoolEntriesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesResponse) {
        output.WriteRawTag(162, 65);
        output.WriteMessage(GetMempoolEntriesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ShutDownRequest) {
        output.WriteRawTag(170, 65);
        output.WriteMessage(ShutDownRequest);
      }
      if (payloadCase_ == PayloadOneofCase.ShutDownResponse) {
        output.WriteRawTag(178, 65);
        output.WriteMessage(ShutDownResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetHeadersRequest) {
        output.WriteRawTag(186, 65);
        output.WriteMessage(GetHeadersRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetHeadersResponse) {
        output.WriteRawTag(194, 65);
        output.WriteMessage(GetHeadersResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedRequest) {
        output.WriteRawTag(202, 65);
        output.WriteMessage(NotifyUtxosChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedResponse) {
        output.WriteRawTag(210, 65);
        output.WriteMessage(NotifyUtxosChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.UtxosChangedNotification) {
        output.WriteRawTag(218, 65);
        output.WriteMessage(UtxosChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesRequest) {
        output.WriteRawTag(226, 65);
        output.WriteMessage(GetUtxosByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesResponse) {
        output.WriteRawTag(234, 65);
        output.WriteMessage(GetUtxosByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest) {
        output.WriteRawTag(242, 65);
        output.WriteMessage(GetVirtualSelectedParentBlueScoreRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse) {
        output.WriteRawTag(250, 65);
        output.WriteMessage(GetVirtualSelectedParentBlueScoreResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest) {
        output.WriteRawTag(130, 66);
        output.WriteMessage(NotifyVirtualSelectedParentBlueScoreChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse) {
        output.WriteRawTag(138, 66);
        output.WriteMessage(NotifyVirtualSelectedParentBlueScoreChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification) {
        output.WriteRawTag(146, 66);
        output.WriteMessage(VirtualSelectedParentBlueScoreChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.BanRequest) {
        output.WriteRawTag(154, 66);
        output.WriteMessage(BanRequest);
      }
      if (payloadCase_ == PayloadOneofCase.BanResponse) {
        output.WriteRawTag(162, 66);
        output.WriteMessage(BanResponse);
      }
      if (payloadCase_ == PayloadOneofCase.UnbanRequest) {
        output.WriteRawTag(170, 66);
        output.WriteMessage(UnbanRequest);
      }
      if (payloadCase_ == PayloadOneofCase.UnbanResponse) {
        output.WriteRawTag(178, 66);
        output.WriteMessage(UnbanResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetInfoRequest) {
        output.WriteRawTag(186, 66);
        output.WriteMessage(GetInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetInfoResponse) {
        output.WriteRawTag(194, 66);
        output.WriteMessage(GetInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedRequest) {
        output.WriteRawTag(202, 66);
        output.WriteMessage(StopNotifyingUtxosChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedResponse) {
        output.WriteRawTag(210, 66);
        output.WriteMessage(StopNotifyingUtxosChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest) {
        output.WriteRawTag(218, 66);
        output.WriteMessage(NotifyPruningPointUTXOSetOverrideRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse) {
        output.WriteRawTag(226, 66);
        output.WriteMessage(NotifyPruningPointUTXOSetOverrideResponse);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointUTXOSetOverrideNotification) {
        output.WriteRawTag(234, 66);
        output.WriteMessage(PruningPointUTXOSetOverrideNotification);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest) {
        output.WriteRawTag(242, 66);
        output.WriteMessage(StopNotifyingPruningPointUTXOSetOverrideRequest);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse) {
        output.WriteRawTag(250, 66);
        output.WriteMessage(StopNotifyingPruningPointUTXOSetOverrideResponse);
      }
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondRequest) {
        output.WriteRawTag(130, 67);
        output.WriteMessage(EstimateNetworkHashesPerSecondRequest);
      }
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondResponse) {
        output.WriteRawTag(138, 67);
        output.WriteMessage(EstimateNetworkHashesPerSecondResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest) {
        output.WriteRawTag(146, 67);
        output.WriteMessage(NotifyVirtualDaaScoreChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse) {
        output.WriteRawTag(154, 67);
        output.WriteMessage(NotifyVirtualDaaScoreChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualDaaScoreChangedNotification) {
        output.WriteRawTag(162, 67);
        output.WriteMessage(VirtualDaaScoreChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressRequest) {
        output.WriteRawTag(170, 67);
        output.WriteMessage(GetBalanceByAddressRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressResponse) {
        output.WriteRawTag(178, 67);
        output.WriteMessage(GetBalanceByAddressResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesRequest) {
        output.WriteRawTag(186, 67);
        output.WriteMessage(GetBalancesByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesResponse) {
        output.WriteRawTag(194, 67);
        output.WriteMessage(GetBalancesByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateRequest) {
        output.WriteRawTag(202, 67);
        output.WriteMessage(NotifyNewBlockTemplateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateResponse) {
        output.WriteRawTag(210, 67);
        output.WriteMessage(NotifyNewBlockTemplateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NewBlockTemplateNotification) {
        output.WriteRawTag(218, 67);
        output.WriteMessage(NewBlockTemplateNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesRequest) {
        output.WriteRawTag(226, 67);
        output.WriteMessage(GetMempoolEntriesByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesResponse) {
        output.WriteRawTag(234, 67);
        output.WriteMessage(GetMempoolEntriesByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyRequest) {
        output.WriteRawTag(242, 67);
        output.WriteMessage(GetCoinSupplyRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyResponse) {
        output.WriteRawTag(250, 67);
        output.WriteMessage(GetCoinSupplyResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Addresses) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Addresses);
      }
      if (payloadCase_ == PayloadOneofCase.Block) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (payloadCase_ == PayloadOneofCase.Transaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (payloadCase_ == PayloadOneofCase.BlockLocator) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.RequestAddresses) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestAddresses);
      }
      if (payloadCase_ == PayloadOneofCase.RequestRelayBlocks) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestRelayBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.RequestTransactions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTransactions);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlock) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IbdBlock);
      }
      if (payloadCase_ == PayloadOneofCase.InvRelayBlock) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvRelayBlock);
      }
      if (payloadCase_ == PayloadOneofCase.InvTransactions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvTransactions);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (payloadCase_ == PayloadOneofCase.Pong) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Pong);
      }
      if (payloadCase_ == PayloadOneofCase.Verack) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verack);
      }
      if (payloadCase_ == PayloadOneofCase.Version) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (payloadCase_ == PayloadOneofCase.TransactionNotFound) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TransactionNotFound);
      }
      if (payloadCase_ == PayloadOneofCase.Reject) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Reject);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointUtxoSetChunk) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PruningPointUtxoSetChunk);
      }
      if (payloadCase_ == PayloadOneofCase.RequestIBDBlocks) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestIBDBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.UnexpectedPruningPoint) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnexpectedPruningPoint);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocator) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IbdBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHash) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IbdBlockLocatorHighestHash);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointUtxoSetChunk) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestNextPruningPointUtxoSetChunk);
      }
      if (payloadCase_ == PayloadOneofCase.DonePruningPointUtxoSetChunks) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DonePruningPointUtxoSetChunks);
      }
      if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHashNotFound) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IbdBlockLocatorHighestHashNotFound);
      }
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedData) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockWithTrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.DoneBlocksWithTrustedData) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DoneBlocksWithTrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointAndItsAnticone) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestPruningPointAndItsAnticone);
      }
      if (payloadCase_ == PayloadOneofCase.BlockHeaders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextHeaders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestNextHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.DoneHeaders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DoneHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointUTXOSet) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestPruningPointUTXOSet);
      }
      if (payloadCase_ == PayloadOneofCase.RequestHeaders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestHeaders);
      }
      if (payloadCase_ == PayloadOneofCase.RequestBlockLocator) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPoints) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PruningPoints);
      }
      if (payloadCase_ == PayloadOneofCase.RequestPruningPointProof) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestPruningPointProof);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointProof) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PruningPointProof);
      }
      if (payloadCase_ == PayloadOneofCase.Ready) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ready);
      }
      if (payloadCase_ == PayloadOneofCase.BlockWithTrustedDataV4) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockWithTrustedDataV4);
      }
      if (payloadCase_ == PayloadOneofCase.TrustedData) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TrustedData);
      }
      if (payloadCase_ == PayloadOneofCase.RequestIBDChainBlockLocator) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestIBDChainBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.IbdChainBlockLocator) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IbdChainBlockLocator);
      }
      if (payloadCase_ == PayloadOneofCase.RequestAnticone) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestAnticone);
      }
      if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RequestNextPruningPointAndItsAnticoneBlocks);
      }
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCurrentNetworkRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCurrentNetworkResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitBlockRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmitBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitBlockResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmitBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockTemplateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockTemplateResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockTemplateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyBlockAddedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyBlockAddedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.BlockAddedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BlockAddedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetPeerAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetPeerAddressesResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetPeerAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSelectedTipHashRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSelectedTipHashResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntryRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntryResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntryResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetConnectedPeerInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetConnectedPeerInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.AddPeerRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddPeerRequest);
      }
      if (payloadCase_ == PayloadOneofCase.AddPeerResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddPeerResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmitTransactionRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubmitTransactionResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubmitTransactionResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualSelectedParentChainChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualSelectedParentChainChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentChainChangedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VirtualSelectedParentChainChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSubnetworkRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetSubnetworkResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetSubnetworkResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetVirtualSelectedParentChainFromBlockRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetVirtualSelectedParentChainFromBlockResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlocksRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlocksRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlocksResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlocksResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockCountRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockCountRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockCountResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockCountResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockDagInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBlockDagInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResolveFinalityConflictRequest);
      }
      if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResolveFinalityConflictResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyFinalityConflictsRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyFinalityConflictsResponse);
      }
      if (payloadCase_ == PayloadOneofCase.FinalityConflictNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FinalityConflictNotification);
      }
      if (payloadCase_ == PayloadOneofCase.FinalityConflictResolvedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FinalityConflictResolvedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntriesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntriesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ShutDownRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShutDownRequest);
      }
      if (payloadCase_ == PayloadOneofCase.ShutDownResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShutDownResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetHeadersRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetHeadersRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetHeadersResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetHeadersResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyUtxosChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyUtxosChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.UtxosChangedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UtxosChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetUtxosByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetUtxosByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetVirtualSelectedParentBlueScoreRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetVirtualSelectedParentBlueScoreResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualSelectedParentBlueScoreChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualSelectedParentBlueScoreChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VirtualSelectedParentBlueScoreChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.BanRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BanRequest);
      }
      if (payloadCase_ == PayloadOneofCase.BanResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BanResponse);
      }
      if (payloadCase_ == PayloadOneofCase.UnbanRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnbanRequest);
      }
      if (payloadCase_ == PayloadOneofCase.UnbanResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnbanResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetInfoRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetInfoResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopNotifyingUtxosChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopNotifyingUtxosChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyPruningPointUTXOSetOverrideRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyPruningPointUTXOSetOverrideResponse);
      }
      if (payloadCase_ == PayloadOneofCase.PruningPointUTXOSetOverrideNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PruningPointUTXOSetOverrideNotification);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopNotifyingPruningPointUTXOSetOverrideRequest);
      }
      if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopNotifyingPruningPointUTXOSetOverrideResponse);
      }
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EstimateNetworkHashesPerSecondRequest);
      }
      if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EstimateNetworkHashesPerSecondResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualDaaScoreChangedRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyVirtualDaaScoreChangedResponse);
      }
      if (payloadCase_ == PayloadOneofCase.VirtualDaaScoreChangedNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VirtualDaaScoreChangedNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBalanceByAddressRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBalanceByAddressResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBalancesByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetBalancesByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyNewBlockTemplateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NotifyNewBlockTemplateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.NewBlockTemplateNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NewBlockTemplateNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntriesByAddressesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetMempoolEntriesByAddressesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCoinSupplyRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetCoinSupplyResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetCoinSupplyResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KaspadMessage other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Addresses:
          if (Addresses == null) {
            Addresses = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage();
          }
          Addresses.MergeFrom(other.Addresses);
          break;
        case PayloadOneofCase.Block:
          if (Block == null) {
            Block = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
          }
          Block.MergeFrom(other.Block);
          break;
        case PayloadOneofCase.Transaction:
          if (Transaction == null) {
            Transaction = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage();
          }
          Transaction.MergeFrom(other.Transaction);
          break;
        case PayloadOneofCase.BlockLocator:
          if (BlockLocator == null) {
            BlockLocator = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage();
          }
          BlockLocator.MergeFrom(other.BlockLocator);
          break;
        case PayloadOneofCase.RequestAddresses:
          if (RequestAddresses == null) {
            RequestAddresses = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage();
          }
          RequestAddresses.MergeFrom(other.RequestAddresses);
          break;
        case PayloadOneofCase.RequestRelayBlocks:
          if (RequestRelayBlocks == null) {
            RequestRelayBlocks = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage();
          }
          RequestRelayBlocks.MergeFrom(other.RequestRelayBlocks);
          break;
        case PayloadOneofCase.RequestTransactions:
          if (RequestTransactions == null) {
            RequestTransactions = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage();
          }
          RequestTransactions.MergeFrom(other.RequestTransactions);
          break;
        case PayloadOneofCase.IbdBlock:
          if (IbdBlock == null) {
            IbdBlock = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
          }
          IbdBlock.MergeFrom(other.IbdBlock);
          break;
        case PayloadOneofCase.InvRelayBlock:
          if (InvRelayBlock == null) {
            InvRelayBlock = new global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage();
          }
          InvRelayBlock.MergeFrom(other.InvRelayBlock);
          break;
        case PayloadOneofCase.InvTransactions:
          if (InvTransactions == null) {
            InvTransactions = new global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage();
          }
          InvTransactions.MergeFrom(other.InvTransactions);
          break;
        case PayloadOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case PayloadOneofCase.Pong:
          if (Pong == null) {
            Pong = new global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage();
          }
          Pong.MergeFrom(other.Pong);
          break;
        case PayloadOneofCase.Verack:
          if (Verack == null) {
            Verack = new global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage();
          }
          Verack.MergeFrom(other.Verack);
          break;
        case PayloadOneofCase.Version:
          if (Version == null) {
            Version = new global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage();
          }
          Version.MergeFrom(other.Version);
          break;
        case PayloadOneofCase.TransactionNotFound:
          if (TransactionNotFound == null) {
            TransactionNotFound = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage();
          }
          TransactionNotFound.MergeFrom(other.TransactionNotFound);
          break;
        case PayloadOneofCase.Reject:
          if (Reject == null) {
            Reject = new global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage();
          }
          Reject.MergeFrom(other.Reject);
          break;
        case PayloadOneofCase.PruningPointUtxoSetChunk:
          if (PruningPointUtxoSetChunk == null) {
            PruningPointUtxoSetChunk = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage();
          }
          PruningPointUtxoSetChunk.MergeFrom(other.PruningPointUtxoSetChunk);
          break;
        case PayloadOneofCase.RequestIBDBlocks:
          if (RequestIBDBlocks == null) {
            RequestIBDBlocks = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage();
          }
          RequestIBDBlocks.MergeFrom(other.RequestIBDBlocks);
          break;
        case PayloadOneofCase.UnexpectedPruningPoint:
          if (UnexpectedPruningPoint == null) {
            UnexpectedPruningPoint = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage();
          }
          UnexpectedPruningPoint.MergeFrom(other.UnexpectedPruningPoint);
          break;
        case PayloadOneofCase.IbdBlockLocator:
          if (IbdBlockLocator == null) {
            IbdBlockLocator = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage();
          }
          IbdBlockLocator.MergeFrom(other.IbdBlockLocator);
          break;
        case PayloadOneofCase.IbdBlockLocatorHighestHash:
          if (IbdBlockLocatorHighestHash == null) {
            IbdBlockLocatorHighestHash = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage();
          }
          IbdBlockLocatorHighestHash.MergeFrom(other.IbdBlockLocatorHighestHash);
          break;
        case PayloadOneofCase.RequestNextPruningPointUtxoSetChunk:
          if (RequestNextPruningPointUtxoSetChunk == null) {
            RequestNextPruningPointUtxoSetChunk = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage();
          }
          RequestNextPruningPointUtxoSetChunk.MergeFrom(other.RequestNextPruningPointUtxoSetChunk);
          break;
        case PayloadOneofCase.DonePruningPointUtxoSetChunks:
          if (DonePruningPointUtxoSetChunks == null) {
            DonePruningPointUtxoSetChunks = new global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage();
          }
          DonePruningPointUtxoSetChunks.MergeFrom(other.DonePruningPointUtxoSetChunks);
          break;
        case PayloadOneofCase.IbdBlockLocatorHighestHashNotFound:
          if (IbdBlockLocatorHighestHashNotFound == null) {
            IbdBlockLocatorHighestHashNotFound = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage();
          }
          IbdBlockLocatorHighestHashNotFound.MergeFrom(other.IbdBlockLocatorHighestHashNotFound);
          break;
        case PayloadOneofCase.BlockWithTrustedData:
          if (BlockWithTrustedData == null) {
            BlockWithTrustedData = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage();
          }
          BlockWithTrustedData.MergeFrom(other.BlockWithTrustedData);
          break;
        case PayloadOneofCase.DoneBlocksWithTrustedData:
          if (DoneBlocksWithTrustedData == null) {
            DoneBlocksWithTrustedData = new global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage();
          }
          DoneBlocksWithTrustedData.MergeFrom(other.DoneBlocksWithTrustedData);
          break;
        case PayloadOneofCase.RequestPruningPointAndItsAnticone:
          if (RequestPruningPointAndItsAnticone == null) {
            RequestPruningPointAndItsAnticone = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage();
          }
          RequestPruningPointAndItsAnticone.MergeFrom(other.RequestPruningPointAndItsAnticone);
          break;
        case PayloadOneofCase.BlockHeaders:
          if (BlockHeaders == null) {
            BlockHeaders = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage();
          }
          BlockHeaders.MergeFrom(other.BlockHeaders);
          break;
        case PayloadOneofCase.RequestNextHeaders:
          if (RequestNextHeaders == null) {
            RequestNextHeaders = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage();
          }
          RequestNextHeaders.MergeFrom(other.RequestNextHeaders);
          break;
        case PayloadOneofCase.DoneHeaders:
          if (DoneHeaders == null) {
            DoneHeaders = new global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage();
          }
          DoneHeaders.MergeFrom(other.DoneHeaders);
          break;
        case PayloadOneofCase.RequestPruningPointUTXOSet:
          if (RequestPruningPointUTXOSet == null) {
            RequestPruningPointUTXOSet = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage();
          }
          RequestPruningPointUTXOSet.MergeFrom(other.RequestPruningPointUTXOSet);
          break;
        case PayloadOneofCase.RequestHeaders:
          if (RequestHeaders == null) {
            RequestHeaders = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage();
          }
          RequestHeaders.MergeFrom(other.RequestHeaders);
          break;
        case PayloadOneofCase.RequestBlockLocator:
          if (RequestBlockLocator == null) {
            RequestBlockLocator = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage();
          }
          RequestBlockLocator.MergeFrom(other.RequestBlockLocator);
          break;
        case PayloadOneofCase.PruningPoints:
          if (PruningPoints == null) {
            PruningPoints = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage();
          }
          PruningPoints.MergeFrom(other.PruningPoints);
          break;
        case PayloadOneofCase.RequestPruningPointProof:
          if (RequestPruningPointProof == null) {
            RequestPruningPointProof = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage();
          }
          RequestPruningPointProof.MergeFrom(other.RequestPruningPointProof);
          break;
        case PayloadOneofCase.PruningPointProof:
          if (PruningPointProof == null) {
            PruningPointProof = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage();
          }
          PruningPointProof.MergeFrom(other.PruningPointProof);
          break;
        case PayloadOneofCase.Ready:
          if (Ready == null) {
            Ready = new global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage();
          }
          Ready.MergeFrom(other.Ready);
          break;
        case PayloadOneofCase.BlockWithTrustedDataV4:
          if (BlockWithTrustedDataV4 == null) {
            BlockWithTrustedDataV4 = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message();
          }
          BlockWithTrustedDataV4.MergeFrom(other.BlockWithTrustedDataV4);
          break;
        case PayloadOneofCase.TrustedData:
          if (TrustedData == null) {
            TrustedData = new global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage();
          }
          TrustedData.MergeFrom(other.TrustedData);
          break;
        case PayloadOneofCase.RequestIBDChainBlockLocator:
          if (RequestIBDChainBlockLocator == null) {
            RequestIBDChainBlockLocator = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage();
          }
          RequestIBDChainBlockLocator.MergeFrom(other.RequestIBDChainBlockLocator);
          break;
        case PayloadOneofCase.IbdChainBlockLocator:
          if (IbdChainBlockLocator == null) {
            IbdChainBlockLocator = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage();
          }
          IbdChainBlockLocator.MergeFrom(other.IbdChainBlockLocator);
          break;
        case PayloadOneofCase.RequestAnticone:
          if (RequestAnticone == null) {
            RequestAnticone = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage();
          }
          RequestAnticone.MergeFrom(other.RequestAnticone);
          break;
        case PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks:
          if (RequestNextPruningPointAndItsAnticoneBlocks == null) {
            RequestNextPruningPointAndItsAnticoneBlocks = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage();
          }
          RequestNextPruningPointAndItsAnticoneBlocks.MergeFrom(other.RequestNextPruningPointAndItsAnticoneBlocks);
          break;
        case PayloadOneofCase.GetCurrentNetworkRequest:
          if (GetCurrentNetworkRequest == null) {
            GetCurrentNetworkRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage();
          }
          GetCurrentNetworkRequest.MergeFrom(other.GetCurrentNetworkRequest);
          break;
        case PayloadOneofCase.GetCurrentNetworkResponse:
          if (GetCurrentNetworkResponse == null) {
            GetCurrentNetworkResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage();
          }
          GetCurrentNetworkResponse.MergeFrom(other.GetCurrentNetworkResponse);
          break;
        case PayloadOneofCase.SubmitBlockRequest:
          if (SubmitBlockRequest == null) {
            SubmitBlockRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage();
          }
          SubmitBlockRequest.MergeFrom(other.SubmitBlockRequest);
          break;
        case PayloadOneofCase.SubmitBlockResponse:
          if (SubmitBlockResponse == null) {
            SubmitBlockResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage();
          }
          SubmitBlockResponse.MergeFrom(other.SubmitBlockResponse);
          break;
        case PayloadOneofCase.GetBlockTemplateRequest:
          if (GetBlockTemplateRequest == null) {
            GetBlockTemplateRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage();
          }
          GetBlockTemplateRequest.MergeFrom(other.GetBlockTemplateRequest);
          break;
        case PayloadOneofCase.GetBlockTemplateResponse:
          if (GetBlockTemplateResponse == null) {
            GetBlockTemplateResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage();
          }
          GetBlockTemplateResponse.MergeFrom(other.GetBlockTemplateResponse);
          break;
        case PayloadOneofCase.NotifyBlockAddedRequest:
          if (NotifyBlockAddedRequest == null) {
            NotifyBlockAddedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage();
          }
          NotifyBlockAddedRequest.MergeFrom(other.NotifyBlockAddedRequest);
          break;
        case PayloadOneofCase.NotifyBlockAddedResponse:
          if (NotifyBlockAddedResponse == null) {
            NotifyBlockAddedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage();
          }
          NotifyBlockAddedResponse.MergeFrom(other.NotifyBlockAddedResponse);
          break;
        case PayloadOneofCase.BlockAddedNotification:
          if (BlockAddedNotification == null) {
            BlockAddedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage();
          }
          BlockAddedNotification.MergeFrom(other.BlockAddedNotification);
          break;
        case PayloadOneofCase.GetPeerAddressesRequest:
          if (GetPeerAddressesRequest == null) {
            GetPeerAddressesRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage();
          }
          GetPeerAddressesRequest.MergeFrom(other.GetPeerAddressesRequest);
          break;
        case PayloadOneofCase.GetPeerAddressesResponse:
          if (GetPeerAddressesResponse == null) {
            GetPeerAddressesResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage();
          }
          GetPeerAddressesResponse.MergeFrom(other.GetPeerAddressesResponse);
          break;
        case PayloadOneofCase.GetSelectedTipHashRequest:
          if (GetSelectedTipHashRequest == null) {
            GetSelectedTipHashRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage();
          }
          GetSelectedTipHashRequest.MergeFrom(other.GetSelectedTipHashRequest);
          break;
        case PayloadOneofCase.GetSelectedTipHashResponse:
          if (GetSelectedTipHashResponse == null) {
            GetSelectedTipHashResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage();
          }
          GetSelectedTipHashResponse.MergeFrom(other.GetSelectedTipHashResponse);
          break;
        case PayloadOneofCase.GetMempoolEntryRequest:
          if (GetMempoolEntryRequest == null) {
            GetMempoolEntryRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage();
          }
          GetMempoolEntryRequest.MergeFrom(other.GetMempoolEntryRequest);
          break;
        case PayloadOneofCase.GetMempoolEntryResponse:
          if (GetMempoolEntryResponse == null) {
            GetMempoolEntryResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage();
          }
          GetMempoolEntryResponse.MergeFrom(other.GetMempoolEntryResponse);
          break;
        case PayloadOneofCase.GetConnectedPeerInfoRequest:
          if (GetConnectedPeerInfoRequest == null) {
            GetConnectedPeerInfoRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage();
          }
          GetConnectedPeerInfoRequest.MergeFrom(other.GetConnectedPeerInfoRequest);
          break;
        case PayloadOneofCase.GetConnectedPeerInfoResponse:
          if (GetConnectedPeerInfoResponse == null) {
            GetConnectedPeerInfoResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage();
          }
          GetConnectedPeerInfoResponse.MergeFrom(other.GetConnectedPeerInfoResponse);
          break;
        case PayloadOneofCase.AddPeerRequest:
          if (AddPeerRequest == null) {
            AddPeerRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage();
          }
          AddPeerRequest.MergeFrom(other.AddPeerRequest);
          break;
        case PayloadOneofCase.AddPeerResponse:
          if (AddPeerResponse == null) {
            AddPeerResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage();
          }
          AddPeerResponse.MergeFrom(other.AddPeerResponse);
          break;
        case PayloadOneofCase.SubmitTransactionRequest:
          if (SubmitTransactionRequest == null) {
            SubmitTransactionRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage();
          }
          SubmitTransactionRequest.MergeFrom(other.SubmitTransactionRequest);
          break;
        case PayloadOneofCase.SubmitTransactionResponse:
          if (SubmitTransactionResponse == null) {
            SubmitTransactionResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage();
          }
          SubmitTransactionResponse.MergeFrom(other.SubmitTransactionResponse);
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest:
          if (NotifyVirtualSelectedParentChainChangedRequest == null) {
            NotifyVirtualSelectedParentChainChangedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage();
          }
          NotifyVirtualSelectedParentChainChangedRequest.MergeFrom(other.NotifyVirtualSelectedParentChainChangedRequest);
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse:
          if (NotifyVirtualSelectedParentChainChangedResponse == null) {
            NotifyVirtualSelectedParentChainChangedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage();
          }
          NotifyVirtualSelectedParentChainChangedResponse.MergeFrom(other.NotifyVirtualSelectedParentChainChangedResponse);
          break;
        case PayloadOneofCase.VirtualSelectedParentChainChangedNotification:
          if (VirtualSelectedParentChainChangedNotification == null) {
            VirtualSelectedParentChainChangedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage();
          }
          VirtualSelectedParentChainChangedNotification.MergeFrom(other.VirtualSelectedParentChainChangedNotification);
          break;
        case PayloadOneofCase.GetBlockRequest:
          if (GetBlockRequest == null) {
            GetBlockRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage();
          }
          GetBlockRequest.MergeFrom(other.GetBlockRequest);
          break;
        case PayloadOneofCase.GetBlockResponse:
          if (GetBlockResponse == null) {
            GetBlockResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage();
          }
          GetBlockResponse.MergeFrom(other.GetBlockResponse);
          break;
        case PayloadOneofCase.GetSubnetworkRequest:
          if (GetSubnetworkRequest == null) {
            GetSubnetworkRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage();
          }
          GetSubnetworkRequest.MergeFrom(other.GetSubnetworkRequest);
          break;
        case PayloadOneofCase.GetSubnetworkResponse:
          if (GetSubnetworkResponse == null) {
            GetSubnetworkResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage();
          }
          GetSubnetworkResponse.MergeFrom(other.GetSubnetworkResponse);
          break;
        case PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest:
          if (GetVirtualSelectedParentChainFromBlockRequest == null) {
            GetVirtualSelectedParentChainFromBlockRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage();
          }
          GetVirtualSelectedParentChainFromBlockRequest.MergeFrom(other.GetVirtualSelectedParentChainFromBlockRequest);
          break;
        case PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse:
          if (GetVirtualSelectedParentChainFromBlockResponse == null) {
            GetVirtualSelectedParentChainFromBlockResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage();
          }
          GetVirtualSelectedParentChainFromBlockResponse.MergeFrom(other.GetVirtualSelectedParentChainFromBlockResponse);
          break;
        case PayloadOneofCase.GetBlocksRequest:
          if (GetBlocksRequest == null) {
            GetBlocksRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage();
          }
          GetBlocksRequest.MergeFrom(other.GetBlocksRequest);
          break;
        case PayloadOneofCase.GetBlocksResponse:
          if (GetBlocksResponse == null) {
            GetBlocksResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage();
          }
          GetBlocksResponse.MergeFrom(other.GetBlocksResponse);
          break;
        case PayloadOneofCase.GetBlockCountRequest:
          if (GetBlockCountRequest == null) {
            GetBlockCountRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage();
          }
          GetBlockCountRequest.MergeFrom(other.GetBlockCountRequest);
          break;
        case PayloadOneofCase.GetBlockCountResponse:
          if (GetBlockCountResponse == null) {
            GetBlockCountResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage();
          }
          GetBlockCountResponse.MergeFrom(other.GetBlockCountResponse);
          break;
        case PayloadOneofCase.GetBlockDagInfoRequest:
          if (GetBlockDagInfoRequest == null) {
            GetBlockDagInfoRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage();
          }
          GetBlockDagInfoRequest.MergeFrom(other.GetBlockDagInfoRequest);
          break;
        case PayloadOneofCase.GetBlockDagInfoResponse:
          if (GetBlockDagInfoResponse == null) {
            GetBlockDagInfoResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage();
          }
          GetBlockDagInfoResponse.MergeFrom(other.GetBlockDagInfoResponse);
          break;
        case PayloadOneofCase.ResolveFinalityConflictRequest:
          if (ResolveFinalityConflictRequest == null) {
            ResolveFinalityConflictRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage();
          }
          ResolveFinalityConflictRequest.MergeFrom(other.ResolveFinalityConflictRequest);
          break;
        case PayloadOneofCase.ResolveFinalityConflictResponse:
          if (ResolveFinalityConflictResponse == null) {
            ResolveFinalityConflictResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage();
          }
          ResolveFinalityConflictResponse.MergeFrom(other.ResolveFinalityConflictResponse);
          break;
        case PayloadOneofCase.NotifyFinalityConflictsRequest:
          if (NotifyFinalityConflictsRequest == null) {
            NotifyFinalityConflictsRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage();
          }
          NotifyFinalityConflictsRequest.MergeFrom(other.NotifyFinalityConflictsRequest);
          break;
        case PayloadOneofCase.NotifyFinalityConflictsResponse:
          if (NotifyFinalityConflictsResponse == null) {
            NotifyFinalityConflictsResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage();
          }
          NotifyFinalityConflictsResponse.MergeFrom(other.NotifyFinalityConflictsResponse);
          break;
        case PayloadOneofCase.FinalityConflictNotification:
          if (FinalityConflictNotification == null) {
            FinalityConflictNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage();
          }
          FinalityConflictNotification.MergeFrom(other.FinalityConflictNotification);
          break;
        case PayloadOneofCase.FinalityConflictResolvedNotification:
          if (FinalityConflictResolvedNotification == null) {
            FinalityConflictResolvedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage();
          }
          FinalityConflictResolvedNotification.MergeFrom(other.FinalityConflictResolvedNotification);
          break;
        case PayloadOneofCase.GetMempoolEntriesRequest:
          if (GetMempoolEntriesRequest == null) {
            GetMempoolEntriesRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage();
          }
          GetMempoolEntriesRequest.MergeFrom(other.GetMempoolEntriesRequest);
          break;
        case PayloadOneofCase.GetMempoolEntriesResponse:
          if (GetMempoolEntriesResponse == null) {
            GetMempoolEntriesResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage();
          }
          GetMempoolEntriesResponse.MergeFrom(other.GetMempoolEntriesResponse);
          break;
        case PayloadOneofCase.ShutDownRequest:
          if (ShutDownRequest == null) {
            ShutDownRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage();
          }
          ShutDownRequest.MergeFrom(other.ShutDownRequest);
          break;
        case PayloadOneofCase.ShutDownResponse:
          if (ShutDownResponse == null) {
            ShutDownResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage();
          }
          ShutDownResponse.MergeFrom(other.ShutDownResponse);
          break;
        case PayloadOneofCase.GetHeadersRequest:
          if (GetHeadersRequest == null) {
            GetHeadersRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage();
          }
          GetHeadersRequest.MergeFrom(other.GetHeadersRequest);
          break;
        case PayloadOneofCase.GetHeadersResponse:
          if (GetHeadersResponse == null) {
            GetHeadersResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage();
          }
          GetHeadersResponse.MergeFrom(other.GetHeadersResponse);
          break;
        case PayloadOneofCase.NotifyUtxosChangedRequest:
          if (NotifyUtxosChangedRequest == null) {
            NotifyUtxosChangedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage();
          }
          NotifyUtxosChangedRequest.MergeFrom(other.NotifyUtxosChangedRequest);
          break;
        case PayloadOneofCase.NotifyUtxosChangedResponse:
          if (NotifyUtxosChangedResponse == null) {
            NotifyUtxosChangedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage();
          }
          NotifyUtxosChangedResponse.MergeFrom(other.NotifyUtxosChangedResponse);
          break;
        case PayloadOneofCase.UtxosChangedNotification:
          if (UtxosChangedNotification == null) {
            UtxosChangedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage();
          }
          UtxosChangedNotification.MergeFrom(other.UtxosChangedNotification);
          break;
        case PayloadOneofCase.GetUtxosByAddressesRequest:
          if (GetUtxosByAddressesRequest == null) {
            GetUtxosByAddressesRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage();
          }
          GetUtxosByAddressesRequest.MergeFrom(other.GetUtxosByAddressesRequest);
          break;
        case PayloadOneofCase.GetUtxosByAddressesResponse:
          if (GetUtxosByAddressesResponse == null) {
            GetUtxosByAddressesResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage();
          }
          GetUtxosByAddressesResponse.MergeFrom(other.GetUtxosByAddressesResponse);
          break;
        case PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest:
          if (GetVirtualSelectedParentBlueScoreRequest == null) {
            GetVirtualSelectedParentBlueScoreRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage();
          }
          GetVirtualSelectedParentBlueScoreRequest.MergeFrom(other.GetVirtualSelectedParentBlueScoreRequest);
          break;
        case PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse:
          if (GetVirtualSelectedParentBlueScoreResponse == null) {
            GetVirtualSelectedParentBlueScoreResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage();
          }
          GetVirtualSelectedParentBlueScoreResponse.MergeFrom(other.GetVirtualSelectedParentBlueScoreResponse);
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest:
          if (NotifyVirtualSelectedParentBlueScoreChangedRequest == null) {
            NotifyVirtualSelectedParentBlueScoreChangedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage();
          }
          NotifyVirtualSelectedParentBlueScoreChangedRequest.MergeFrom(other.NotifyVirtualSelectedParentBlueScoreChangedRequest);
          break;
        case PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse:
          if (NotifyVirtualSelectedParentBlueScoreChangedResponse == null) {
            NotifyVirtualSelectedParentBlueScoreChangedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage();
          }
          NotifyVirtualSelectedParentBlueScoreChangedResponse.MergeFrom(other.NotifyVirtualSelectedParentBlueScoreChangedResponse);
          break;
        case PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification:
          if (VirtualSelectedParentBlueScoreChangedNotification == null) {
            VirtualSelectedParentBlueScoreChangedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage();
          }
          VirtualSelectedParentBlueScoreChangedNotification.MergeFrom(other.VirtualSelectedParentBlueScoreChangedNotification);
          break;
        case PayloadOneofCase.BanRequest:
          if (BanRequest == null) {
            BanRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage();
          }
          BanRequest.MergeFrom(other.BanRequest);
          break;
        case PayloadOneofCase.BanResponse:
          if (BanResponse == null) {
            BanResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage();
          }
          BanResponse.MergeFrom(other.BanResponse);
          break;
        case PayloadOneofCase.UnbanRequest:
          if (UnbanRequest == null) {
            UnbanRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage();
          }
          UnbanRequest.MergeFrom(other.UnbanRequest);
          break;
        case PayloadOneofCase.UnbanResponse:
          if (UnbanResponse == null) {
            UnbanResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage();
          }
          UnbanResponse.MergeFrom(other.UnbanResponse);
          break;
        case PayloadOneofCase.GetInfoRequest:
          if (GetInfoRequest == null) {
            GetInfoRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage();
          }
          GetInfoRequest.MergeFrom(other.GetInfoRequest);
          break;
        case PayloadOneofCase.GetInfoResponse:
          if (GetInfoResponse == null) {
            GetInfoResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage();
          }
          GetInfoResponse.MergeFrom(other.GetInfoResponse);
          break;
        case PayloadOneofCase.StopNotifyingUtxosChangedRequest:
          if (StopNotifyingUtxosChangedRequest == null) {
            StopNotifyingUtxosChangedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage();
          }
          StopNotifyingUtxosChangedRequest.MergeFrom(other.StopNotifyingUtxosChangedRequest);
          break;
        case PayloadOneofCase.StopNotifyingUtxosChangedResponse:
          if (StopNotifyingUtxosChangedResponse == null) {
            StopNotifyingUtxosChangedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage();
          }
          StopNotifyingUtxosChangedResponse.MergeFrom(other.StopNotifyingUtxosChangedResponse);
          break;
        case PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest:
          if (NotifyPruningPointUTXOSetOverrideRequest == null) {
            NotifyPruningPointUTXOSetOverrideRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage();
          }
          NotifyPruningPointUTXOSetOverrideRequest.MergeFrom(other.NotifyPruningPointUTXOSetOverrideRequest);
          break;
        case PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse:
          if (NotifyPruningPointUTXOSetOverrideResponse == null) {
            NotifyPruningPointUTXOSetOverrideResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage();
          }
          NotifyPruningPointUTXOSetOverrideResponse.MergeFrom(other.NotifyPruningPointUTXOSetOverrideResponse);
          break;
        case PayloadOneofCase.PruningPointUTXOSetOverrideNotification:
          if (PruningPointUTXOSetOverrideNotification == null) {
            PruningPointUTXOSetOverrideNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage();
          }
          PruningPointUTXOSetOverrideNotification.MergeFrom(other.PruningPointUTXOSetOverrideNotification);
          break;
        case PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest:
          if (StopNotifyingPruningPointUTXOSetOverrideRequest == null) {
            StopNotifyingPruningPointUTXOSetOverrideRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage();
          }
          StopNotifyingPruningPointUTXOSetOverrideRequest.MergeFrom(other.StopNotifyingPruningPointUTXOSetOverrideRequest);
          break;
        case PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse:
          if (StopNotifyingPruningPointUTXOSetOverrideResponse == null) {
            StopNotifyingPruningPointUTXOSetOverrideResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage();
          }
          StopNotifyingPruningPointUTXOSetOverrideResponse.MergeFrom(other.StopNotifyingPruningPointUTXOSetOverrideResponse);
          break;
        case PayloadOneofCase.EstimateNetworkHashesPerSecondRequest:
          if (EstimateNetworkHashesPerSecondRequest == null) {
            EstimateNetworkHashesPerSecondRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage();
          }
          EstimateNetworkHashesPerSecondRequest.MergeFrom(other.EstimateNetworkHashesPerSecondRequest);
          break;
        case PayloadOneofCase.EstimateNetworkHashesPerSecondResponse:
          if (EstimateNetworkHashesPerSecondResponse == null) {
            EstimateNetworkHashesPerSecondResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage();
          }
          EstimateNetworkHashesPerSecondResponse.MergeFrom(other.EstimateNetworkHashesPerSecondResponse);
          break;
        case PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest:
          if (NotifyVirtualDaaScoreChangedRequest == null) {
            NotifyVirtualDaaScoreChangedRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage();
          }
          NotifyVirtualDaaScoreChangedRequest.MergeFrom(other.NotifyVirtualDaaScoreChangedRequest);
          break;
        case PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse:
          if (NotifyVirtualDaaScoreChangedResponse == null) {
            NotifyVirtualDaaScoreChangedResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage();
          }
          NotifyVirtualDaaScoreChangedResponse.MergeFrom(other.NotifyVirtualDaaScoreChangedResponse);
          break;
        case PayloadOneofCase.VirtualDaaScoreChangedNotification:
          if (VirtualDaaScoreChangedNotification == null) {
            VirtualDaaScoreChangedNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage();
          }
          VirtualDaaScoreChangedNotification.MergeFrom(other.VirtualDaaScoreChangedNotification);
          break;
        case PayloadOneofCase.GetBalanceByAddressRequest:
          if (GetBalanceByAddressRequest == null) {
            GetBalanceByAddressRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage();
          }
          GetBalanceByAddressRequest.MergeFrom(other.GetBalanceByAddressRequest);
          break;
        case PayloadOneofCase.GetBalanceByAddressResponse:
          if (GetBalanceByAddressResponse == null) {
            GetBalanceByAddressResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage();
          }
          GetBalanceByAddressResponse.MergeFrom(other.GetBalanceByAddressResponse);
          break;
        case PayloadOneofCase.GetBalancesByAddressesRequest:
          if (GetBalancesByAddressesRequest == null) {
            GetBalancesByAddressesRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage();
          }
          GetBalancesByAddressesRequest.MergeFrom(other.GetBalancesByAddressesRequest);
          break;
        case PayloadOneofCase.GetBalancesByAddressesResponse:
          if (GetBalancesByAddressesResponse == null) {
            GetBalancesByAddressesResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage();
          }
          GetBalancesByAddressesResponse.MergeFrom(other.GetBalancesByAddressesResponse);
          break;
        case PayloadOneofCase.NotifyNewBlockTemplateRequest:
          if (NotifyNewBlockTemplateRequest == null) {
            NotifyNewBlockTemplateRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage();
          }
          NotifyNewBlockTemplateRequest.MergeFrom(other.NotifyNewBlockTemplateRequest);
          break;
        case PayloadOneofCase.NotifyNewBlockTemplateResponse:
          if (NotifyNewBlockTemplateResponse == null) {
            NotifyNewBlockTemplateResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage();
          }
          NotifyNewBlockTemplateResponse.MergeFrom(other.NotifyNewBlockTemplateResponse);
          break;
        case PayloadOneofCase.NewBlockTemplateNotification:
          if (NewBlockTemplateNotification == null) {
            NewBlockTemplateNotification = new global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage();
          }
          NewBlockTemplateNotification.MergeFrom(other.NewBlockTemplateNotification);
          break;
        case PayloadOneofCase.GetMempoolEntriesByAddressesRequest:
          if (GetMempoolEntriesByAddressesRequest == null) {
            GetMempoolEntriesByAddressesRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage();
          }
          GetMempoolEntriesByAddressesRequest.MergeFrom(other.GetMempoolEntriesByAddressesRequest);
          break;
        case PayloadOneofCase.GetMempoolEntriesByAddressesResponse:
          if (GetMempoolEntriesByAddressesResponse == null) {
            GetMempoolEntriesByAddressesResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage();
          }
          GetMempoolEntriesByAddressesResponse.MergeFrom(other.GetMempoolEntriesByAddressesResponse);
          break;
        case PayloadOneofCase.GetCoinSupplyRequest:
          if (GetCoinSupplyRequest == null) {
            GetCoinSupplyRequest = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage();
          }
          GetCoinSupplyRequest.MergeFrom(other.GetCoinSupplyRequest);
          break;
        case PayloadOneofCase.GetCoinSupplyResponse:
          if (GetCoinSupplyResponse == null) {
            GetCoinSupplyResponse = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage();
          }
          GetCoinSupplyResponse.MergeFrom(other.GetCoinSupplyResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddressesMessage();
            if (payloadCase_ == PayloadOneofCase.Addresses) {
              subBuilder.MergeFrom(Addresses);
            }
            input.ReadMessage(subBuilder);
            Addresses = subBuilder;
            break;
          }
          case 18: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
            if (payloadCase_ == PayloadOneofCase.Block) {
              subBuilder.MergeFrom(Block);
            }
            input.ReadMessage(subBuilder);
            Block = subBuilder;
            break;
          }
          case 26: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionMessage();
            if (payloadCase_ == PayloadOneofCase.Transaction) {
              subBuilder.MergeFrom(Transaction);
            }
            input.ReadMessage(subBuilder);
            Transaction = subBuilder;
            break;
          }
          case 42: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockLocatorMessage();
            if (payloadCase_ == PayloadOneofCase.BlockLocator) {
              subBuilder.MergeFrom(BlockLocator);
            }
            input.ReadMessage(subBuilder);
            BlockLocator = subBuilder;
            break;
          }
          case 50: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAddressesMessage();
            if (payloadCase_ == PayloadOneofCase.RequestAddresses) {
              subBuilder.MergeFrom(RequestAddresses);
            }
            input.ReadMessage(subBuilder);
            RequestAddresses = subBuilder;
            break;
          }
          case 82: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestRelayBlocksMessage();
            if (payloadCase_ == PayloadOneofCase.RequestRelayBlocks) {
              subBuilder.MergeFrom(RequestRelayBlocks);
            }
            input.ReadMessage(subBuilder);
            RequestRelayBlocks = subBuilder;
            break;
          }
          case 98: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestTransactionsMessage();
            if (payloadCase_ == PayloadOneofCase.RequestTransactions) {
              subBuilder.MergeFrom(RequestTransactions);
            }
            input.ReadMessage(subBuilder);
            RequestTransactions = subBuilder;
            break;
          }
          case 106: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockMessage();
            if (payloadCase_ == PayloadOneofCase.IbdBlock) {
              subBuilder.MergeFrom(IbdBlock);
            }
            input.ReadMessage(subBuilder);
            IbdBlock = subBuilder;
            break;
          }
          case 114: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.InvRelayBlockMessage();
            if (payloadCase_ == PayloadOneofCase.InvRelayBlock) {
              subBuilder.MergeFrom(InvRelayBlock);
            }
            input.ReadMessage(subBuilder);
            InvRelayBlock = subBuilder;
            break;
          }
          case 122: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.InvTransactionsMessage();
            if (payloadCase_ == PayloadOneofCase.InvTransactions) {
              subBuilder.MergeFrom(InvTransactions);
            }
            input.ReadMessage(subBuilder);
            InvTransactions = subBuilder;
            break;
          }
          case 130: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PingMessage();
            if (payloadCase_ == PayloadOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 138: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PongMessage();
            if (payloadCase_ == PayloadOneofCase.Pong) {
              subBuilder.MergeFrom(Pong);
            }
            input.ReadMessage(subBuilder);
            Pong = subBuilder;
            break;
          }
          case 154: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.VerackMessage();
            if (payloadCase_ == PayloadOneofCase.Verack) {
              subBuilder.MergeFrom(Verack);
            }
            input.ReadMessage(subBuilder);
            Verack = subBuilder;
            break;
          }
          case 162: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.VersionMessage();
            if (payloadCase_ == PayloadOneofCase.Version) {
              subBuilder.MergeFrom(Version);
            }
            input.ReadMessage(subBuilder);
            Version = subBuilder;
            break;
          }
          case 170: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.TransactionNotFoundMessage();
            if (payloadCase_ == PayloadOneofCase.TransactionNotFound) {
              subBuilder.MergeFrom(TransactionNotFound);
            }
            input.ReadMessage(subBuilder);
            TransactionNotFound = subBuilder;
            break;
          }
          case 178: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RejectMessage();
            if (payloadCase_ == PayloadOneofCase.Reject) {
              subBuilder.MergeFrom(Reject);
            }
            input.ReadMessage(subBuilder);
            Reject = subBuilder;
            break;
          }
          case 202: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUtxoSetChunkMessage();
            if (payloadCase_ == PayloadOneofCase.PruningPointUtxoSetChunk) {
              subBuilder.MergeFrom(PruningPointUtxoSetChunk);
            }
            input.ReadMessage(subBuilder);
            PruningPointUtxoSetChunk = subBuilder;
            break;
          }
          case 210: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDBlocksMessage();
            if (payloadCase_ == PayloadOneofCase.RequestIBDBlocks) {
              subBuilder.MergeFrom(RequestIBDBlocks);
            }
            input.ReadMessage(subBuilder);
            RequestIBDBlocks = subBuilder;
            break;
          }
          case 218: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnexpectedPruningPointMessage();
            if (payloadCase_ == PayloadOneofCase.UnexpectedPruningPoint) {
              subBuilder.MergeFrom(UnexpectedPruningPoint);
            }
            input.ReadMessage(subBuilder);
            UnexpectedPruningPoint = subBuilder;
            break;
          }
          case 242: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorMessage();
            if (payloadCase_ == PayloadOneofCase.IbdBlockLocator) {
              subBuilder.MergeFrom(IbdBlockLocator);
            }
            input.ReadMessage(subBuilder);
            IbdBlockLocator = subBuilder;
            break;
          }
          case 250: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashMessage();
            if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHash) {
              subBuilder.MergeFrom(IbdBlockLocatorHighestHash);
            }
            input.ReadMessage(subBuilder);
            IbdBlockLocatorHighestHash = subBuilder;
            break;
          }
          case 266: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointUtxoSetChunkMessage();
            if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointUtxoSetChunk) {
              subBuilder.MergeFrom(RequestNextPruningPointUtxoSetChunk);
            }
            input.ReadMessage(subBuilder);
            RequestNextPruningPointUtxoSetChunk = subBuilder;
            break;
          }
          case 274: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.DonePruningPointUtxoSetChunksMessage();
            if (payloadCase_ == PayloadOneofCase.DonePruningPointUtxoSetChunks) {
              subBuilder.MergeFrom(DonePruningPointUtxoSetChunks);
            }
            input.ReadMessage(subBuilder);
            DonePruningPointUtxoSetChunks = subBuilder;
            break;
          }
          case 282: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdBlockLocatorHighestHashNotFoundMessage();
            if (payloadCase_ == PayloadOneofCase.IbdBlockLocatorHighestHashNotFound) {
              subBuilder.MergeFrom(IbdBlockLocatorHighestHashNotFound);
            }
            input.ReadMessage(subBuilder);
            IbdBlockLocatorHighestHashNotFound = subBuilder;
            break;
          }
          case 290: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataMessage();
            if (payloadCase_ == PayloadOneofCase.BlockWithTrustedData) {
              subBuilder.MergeFrom(BlockWithTrustedData);
            }
            input.ReadMessage(subBuilder);
            BlockWithTrustedData = subBuilder;
            break;
          }
          case 298: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.DoneBlocksWithTrustedDataMessage();
            if (payloadCase_ == PayloadOneofCase.DoneBlocksWithTrustedData) {
              subBuilder.MergeFrom(DoneBlocksWithTrustedData);
            }
            input.ReadMessage(subBuilder);
            DoneBlocksWithTrustedData = subBuilder;
            break;
          }
          case 322: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointAndItsAnticoneMessage();
            if (payloadCase_ == PayloadOneofCase.RequestPruningPointAndItsAnticone) {
              subBuilder.MergeFrom(RequestPruningPointAndItsAnticone);
            }
            input.ReadMessage(subBuilder);
            RequestPruningPointAndItsAnticone = subBuilder;
            break;
          }
          case 330: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockHeadersMessage();
            if (payloadCase_ == PayloadOneofCase.BlockHeaders) {
              subBuilder.MergeFrom(BlockHeaders);
            }
            input.ReadMessage(subBuilder);
            BlockHeaders = subBuilder;
            break;
          }
          case 338: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextHeadersMessage();
            if (payloadCase_ == PayloadOneofCase.RequestNextHeaders) {
              subBuilder.MergeFrom(RequestNextHeaders);
            }
            input.ReadMessage(subBuilder);
            RequestNextHeaders = subBuilder;
            break;
          }
          case 346: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.DoneHeadersMessage();
            if (payloadCase_ == PayloadOneofCase.DoneHeaders) {
              subBuilder.MergeFrom(DoneHeaders);
            }
            input.ReadMessage(subBuilder);
            DoneHeaders = subBuilder;
            break;
          }
          case 354: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointUTXOSetMessage();
            if (payloadCase_ == PayloadOneofCase.RequestPruningPointUTXOSet) {
              subBuilder.MergeFrom(RequestPruningPointUTXOSet);
            }
            input.ReadMessage(subBuilder);
            RequestPruningPointUTXOSet = subBuilder;
            break;
          }
          case 362: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestHeadersMessage();
            if (payloadCase_ == PayloadOneofCase.RequestHeaders) {
              subBuilder.MergeFrom(RequestHeaders);
            }
            input.ReadMessage(subBuilder);
            RequestHeaders = subBuilder;
            break;
          }
          case 370: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestBlockLocatorMessage();
            if (payloadCase_ == PayloadOneofCase.RequestBlockLocator) {
              subBuilder.MergeFrom(RequestBlockLocator);
            }
            input.ReadMessage(subBuilder);
            RequestBlockLocator = subBuilder;
            break;
          }
          case 378: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointsMessage();
            if (payloadCase_ == PayloadOneofCase.PruningPoints) {
              subBuilder.MergeFrom(PruningPoints);
            }
            input.ReadMessage(subBuilder);
            PruningPoints = subBuilder;
            break;
          }
          case 386: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestPruningPointProofMessage();
            if (payloadCase_ == PayloadOneofCase.RequestPruningPointProof) {
              subBuilder.MergeFrom(RequestPruningPointProof);
            }
            input.ReadMessage(subBuilder);
            RequestPruningPointProof = subBuilder;
            break;
          }
          case 394: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointProofMessage();
            if (payloadCase_ == PayloadOneofCase.PruningPointProof) {
              subBuilder.MergeFrom(PruningPointProof);
            }
            input.ReadMessage(subBuilder);
            PruningPointProof = subBuilder;
            break;
          }
          case 402: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.ReadyMessage();
            if (payloadCase_ == PayloadOneofCase.Ready) {
              subBuilder.MergeFrom(Ready);
            }
            input.ReadMessage(subBuilder);
            Ready = subBuilder;
            break;
          }
          case 410: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockWithTrustedDataV4Message();
            if (payloadCase_ == PayloadOneofCase.BlockWithTrustedDataV4) {
              subBuilder.MergeFrom(BlockWithTrustedDataV4);
            }
            input.ReadMessage(subBuilder);
            BlockWithTrustedDataV4 = subBuilder;
            break;
          }
          case 418: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.TrustedDataMessage();
            if (payloadCase_ == PayloadOneofCase.TrustedData) {
              subBuilder.MergeFrom(TrustedData);
            }
            input.ReadMessage(subBuilder);
            TrustedData = subBuilder;
            break;
          }
          case 426: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestIBDChainBlockLocatorMessage();
            if (payloadCase_ == PayloadOneofCase.RequestIBDChainBlockLocator) {
              subBuilder.MergeFrom(RequestIBDChainBlockLocator);
            }
            input.ReadMessage(subBuilder);
            RequestIBDChainBlockLocator = subBuilder;
            break;
          }
          case 434: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.IbdChainBlockLocatorMessage();
            if (payloadCase_ == PayloadOneofCase.IbdChainBlockLocator) {
              subBuilder.MergeFrom(IbdChainBlockLocator);
            }
            input.ReadMessage(subBuilder);
            IbdChainBlockLocator = subBuilder;
            break;
          }
          case 442: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestAnticoneMessage();
            if (payloadCase_ == PayloadOneofCase.RequestAnticone) {
              subBuilder.MergeFrom(RequestAnticone);
            }
            input.ReadMessage(subBuilder);
            RequestAnticone = subBuilder;
            break;
          }
          case 450: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.RequestNextPruningPointAndItsAnticoneBlocksMessage();
            if (payloadCase_ == PayloadOneofCase.RequestNextPruningPointAndItsAnticoneBlocks) {
              subBuilder.MergeFrom(RequestNextPruningPointAndItsAnticoneBlocks);
            }
            input.ReadMessage(subBuilder);
            RequestNextPruningPointAndItsAnticoneBlocks = subBuilder;
            break;
          }
          case 8010: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkRequest) {
              subBuilder.MergeFrom(GetCurrentNetworkRequest);
            }
            input.ReadMessage(subBuilder);
            GetCurrentNetworkRequest = subBuilder;
            break;
          }
          case 8018: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCurrentNetworkResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetCurrentNetworkResponse) {
              subBuilder.MergeFrom(GetCurrentNetworkResponse);
            }
            input.ReadMessage(subBuilder);
            GetCurrentNetworkResponse = subBuilder;
            break;
          }
          case 8026: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockRequestMessage();
            if (payloadCase_ == PayloadOneofCase.SubmitBlockRequest) {
              subBuilder.MergeFrom(SubmitBlockRequest);
            }
            input.ReadMessage(subBuilder);
            SubmitBlockRequest = subBuilder;
            break;
          }
          case 8034: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitBlockResponseMessage();
            if (payloadCase_ == PayloadOneofCase.SubmitBlockResponse) {
              subBuilder.MergeFrom(SubmitBlockResponse);
            }
            input.ReadMessage(subBuilder);
            SubmitBlockResponse = subBuilder;
            break;
          }
          case 8042: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockTemplateRequest) {
              subBuilder.MergeFrom(GetBlockTemplateRequest);
            }
            input.ReadMessage(subBuilder);
            GetBlockTemplateRequest = subBuilder;
            break;
          }
          case 8050: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockTemplateResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockTemplateResponse) {
              subBuilder.MergeFrom(GetBlockTemplateResponse);
            }
            input.ReadMessage(subBuilder);
            GetBlockTemplateResponse = subBuilder;
            break;
          }
          case 8058: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedRequest) {
              subBuilder.MergeFrom(NotifyBlockAddedRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyBlockAddedRequest = subBuilder;
            break;
          }
          case 8066: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyBlockAddedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyBlockAddedResponse) {
              subBuilder.MergeFrom(NotifyBlockAddedResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyBlockAddedResponse = subBuilder;
            break;
          }
          case 8074: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BlockAddedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.BlockAddedNotification) {
              subBuilder.MergeFrom(BlockAddedNotification);
            }
            input.ReadMessage(subBuilder);
            BlockAddedNotification = subBuilder;
            break;
          }
          case 8082: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetPeerAddressesRequest) {
              subBuilder.MergeFrom(GetPeerAddressesRequest);
            }
            input.ReadMessage(subBuilder);
            GetPeerAddressesRequest = subBuilder;
            break;
          }
          case 8090: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetPeerAddressesResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetPeerAddressesResponse) {
              subBuilder.MergeFrom(GetPeerAddressesResponse);
            }
            input.ReadMessage(subBuilder);
            GetPeerAddressesResponse = subBuilder;
            break;
          }
          case 8098: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashRequest) {
              subBuilder.MergeFrom(GetSelectedTipHashRequest);
            }
            input.ReadMessage(subBuilder);
            GetSelectedTipHashRequest = subBuilder;
            break;
          }
          case 8106: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSelectedTipHashResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetSelectedTipHashResponse) {
              subBuilder.MergeFrom(GetSelectedTipHashResponse);
            }
            input.ReadMessage(subBuilder);
            GetSelectedTipHashResponse = subBuilder;
            break;
          }
          case 8114: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntryRequest) {
              subBuilder.MergeFrom(GetMempoolEntryRequest);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntryRequest = subBuilder;
            break;
          }
          case 8122: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntryResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntryResponse) {
              subBuilder.MergeFrom(GetMempoolEntryResponse);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntryResponse = subBuilder;
            break;
          }
          case 8130: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoRequest) {
              subBuilder.MergeFrom(GetConnectedPeerInfoRequest);
            }
            input.ReadMessage(subBuilder);
            GetConnectedPeerInfoRequest = subBuilder;
            break;
          }
          case 8138: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetConnectedPeerInfoResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetConnectedPeerInfoResponse) {
              subBuilder.MergeFrom(GetConnectedPeerInfoResponse);
            }
            input.ReadMessage(subBuilder);
            GetConnectedPeerInfoResponse = subBuilder;
            break;
          }
          case 8146: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerRequestMessage();
            if (payloadCase_ == PayloadOneofCase.AddPeerRequest) {
              subBuilder.MergeFrom(AddPeerRequest);
            }
            input.ReadMessage(subBuilder);
            AddPeerRequest = subBuilder;
            break;
          }
          case 8154: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.AddPeerResponseMessage();
            if (payloadCase_ == PayloadOneofCase.AddPeerResponse) {
              subBuilder.MergeFrom(AddPeerResponse);
            }
            input.ReadMessage(subBuilder);
            AddPeerResponse = subBuilder;
            break;
          }
          case 8162: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionRequestMessage();
            if (payloadCase_ == PayloadOneofCase.SubmitTransactionRequest) {
              subBuilder.MergeFrom(SubmitTransactionRequest);
            }
            input.ReadMessage(subBuilder);
            SubmitTransactionRequest = subBuilder;
            break;
          }
          case 8170: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.SubmitTransactionResponseMessage();
            if (payloadCase_ == PayloadOneofCase.SubmitTransactionResponse) {
              subBuilder.MergeFrom(SubmitTransactionResponse);
            }
            input.ReadMessage(subBuilder);
            SubmitTransactionResponse = subBuilder;
            break;
          }
          case 8178: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedRequest) {
              subBuilder.MergeFrom(NotifyVirtualSelectedParentChainChangedRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualSelectedParentChainChangedRequest = subBuilder;
            break;
          }
          case 8186: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentChainChangedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentChainChangedResponse) {
              subBuilder.MergeFrom(NotifyVirtualSelectedParentChainChangedResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualSelectedParentChainChangedResponse = subBuilder;
            break;
          }
          case 8194: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentChainChangedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentChainChangedNotification) {
              subBuilder.MergeFrom(VirtualSelectedParentChainChangedNotification);
            }
            input.ReadMessage(subBuilder);
            VirtualSelectedParentChainChangedNotification = subBuilder;
            break;
          }
          case 8202: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockRequest) {
              subBuilder.MergeFrom(GetBlockRequest);
            }
            input.ReadMessage(subBuilder);
            GetBlockRequest = subBuilder;
            break;
          }
          case 8210: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockResponse) {
              subBuilder.MergeFrom(GetBlockResponse);
            }
            input.ReadMessage(subBuilder);
            GetBlockResponse = subBuilder;
            break;
          }
          case 8218: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetSubnetworkRequest) {
              subBuilder.MergeFrom(GetSubnetworkRequest);
            }
            input.ReadMessage(subBuilder);
            GetSubnetworkRequest = subBuilder;
            break;
          }
          case 8226: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetSubnetworkResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetSubnetworkResponse) {
              subBuilder.MergeFrom(GetSubnetworkResponse);
            }
            input.ReadMessage(subBuilder);
            GetSubnetworkResponse = subBuilder;
            break;
          }
          case 8234: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockRequest) {
              subBuilder.MergeFrom(GetVirtualSelectedParentChainFromBlockRequest);
            }
            input.ReadMessage(subBuilder);
            GetVirtualSelectedParentChainFromBlockRequest = subBuilder;
            break;
          }
          case 8242: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentChainFromBlockResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentChainFromBlockResponse) {
              subBuilder.MergeFrom(GetVirtualSelectedParentChainFromBlockResponse);
            }
            input.ReadMessage(subBuilder);
            GetVirtualSelectedParentChainFromBlockResponse = subBuilder;
            break;
          }
          case 8250: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlocksRequest) {
              subBuilder.MergeFrom(GetBlocksRequest);
            }
            input.ReadMessage(subBuilder);
            GetBlocksRequest = subBuilder;
            break;
          }
          case 8258: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlocksResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlocksResponse) {
              subBuilder.MergeFrom(GetBlocksResponse);
            }
            input.ReadMessage(subBuilder);
            GetBlocksResponse = subBuilder;
            break;
          }
          case 8266: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockCountRequest) {
              subBuilder.MergeFrom(GetBlockCountRequest);
            }
            input.ReadMessage(subBuilder);
            GetBlockCountRequest = subBuilder;
            break;
          }
          case 8274: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockCountResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockCountResponse) {
              subBuilder.MergeFrom(GetBlockCountResponse);
            }
            input.ReadMessage(subBuilder);
            GetBlockCountResponse = subBuilder;
            break;
          }
          case 8282: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoRequest) {
              subBuilder.MergeFrom(GetBlockDagInfoRequest);
            }
            input.ReadMessage(subBuilder);
            GetBlockDagInfoRequest = subBuilder;
            break;
          }
          case 8290: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBlockDagInfoResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBlockDagInfoResponse) {
              subBuilder.MergeFrom(GetBlockDagInfoResponse);
            }
            input.ReadMessage(subBuilder);
            GetBlockDagInfoResponse = subBuilder;
            break;
          }
          case 8298: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictRequestMessage();
            if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictRequest) {
              subBuilder.MergeFrom(ResolveFinalityConflictRequest);
            }
            input.ReadMessage(subBuilder);
            ResolveFinalityConflictRequest = subBuilder;
            break;
          }
          case 8306: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.ResolveFinalityConflictResponseMessage();
            if (payloadCase_ == PayloadOneofCase.ResolveFinalityConflictResponse) {
              subBuilder.MergeFrom(ResolveFinalityConflictResponse);
            }
            input.ReadMessage(subBuilder);
            ResolveFinalityConflictResponse = subBuilder;
            break;
          }
          case 8314: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsRequest) {
              subBuilder.MergeFrom(NotifyFinalityConflictsRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyFinalityConflictsRequest = subBuilder;
            break;
          }
          case 8322: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyFinalityConflictsResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyFinalityConflictsResponse) {
              subBuilder.MergeFrom(NotifyFinalityConflictsResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyFinalityConflictsResponse = subBuilder;
            break;
          }
          case 8330: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.FinalityConflictNotification) {
              subBuilder.MergeFrom(FinalityConflictNotification);
            }
            input.ReadMessage(subBuilder);
            FinalityConflictNotification = subBuilder;
            break;
          }
          case 8338: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.FinalityConflictResolvedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.FinalityConflictResolvedNotification) {
              subBuilder.MergeFrom(FinalityConflictResolvedNotification);
            }
            input.ReadMessage(subBuilder);
            FinalityConflictResolvedNotification = subBuilder;
            break;
          }
          case 8346: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesRequest) {
              subBuilder.MergeFrom(GetMempoolEntriesRequest);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntriesRequest = subBuilder;
            break;
          }
          case 8354: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesResponse) {
              subBuilder.MergeFrom(GetMempoolEntriesResponse);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntriesResponse = subBuilder;
            break;
          }
          case 8362: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownRequestMessage();
            if (payloadCase_ == PayloadOneofCase.ShutDownRequest) {
              subBuilder.MergeFrom(ShutDownRequest);
            }
            input.ReadMessage(subBuilder);
            ShutDownRequest = subBuilder;
            break;
          }
          case 8370: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.ShutDownResponseMessage();
            if (payloadCase_ == PayloadOneofCase.ShutDownResponse) {
              subBuilder.MergeFrom(ShutDownResponse);
            }
            input.ReadMessage(subBuilder);
            ShutDownResponse = subBuilder;
            break;
          }
          case 8378: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetHeadersRequest) {
              subBuilder.MergeFrom(GetHeadersRequest);
            }
            input.ReadMessage(subBuilder);
            GetHeadersRequest = subBuilder;
            break;
          }
          case 8386: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetHeadersResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetHeadersResponse) {
              subBuilder.MergeFrom(GetHeadersResponse);
            }
            input.ReadMessage(subBuilder);
            GetHeadersResponse = subBuilder;
            break;
          }
          case 8394: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedRequest) {
              subBuilder.MergeFrom(NotifyUtxosChangedRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyUtxosChangedRequest = subBuilder;
            break;
          }
          case 8402: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyUtxosChangedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyUtxosChangedResponse) {
              subBuilder.MergeFrom(NotifyUtxosChangedResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyUtxosChangedResponse = subBuilder;
            break;
          }
          case 8410: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.UtxosChangedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.UtxosChangedNotification) {
              subBuilder.MergeFrom(UtxosChangedNotification);
            }
            input.ReadMessage(subBuilder);
            UtxosChangedNotification = subBuilder;
            break;
          }
          case 8418: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesRequest) {
              subBuilder.MergeFrom(GetUtxosByAddressesRequest);
            }
            input.ReadMessage(subBuilder);
            GetUtxosByAddressesRequest = subBuilder;
            break;
          }
          case 8426: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetUtxosByAddressesResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetUtxosByAddressesResponse) {
              subBuilder.MergeFrom(GetUtxosByAddressesResponse);
            }
            input.ReadMessage(subBuilder);
            GetUtxosByAddressesResponse = subBuilder;
            break;
          }
          case 8434: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreRequest) {
              subBuilder.MergeFrom(GetVirtualSelectedParentBlueScoreRequest);
            }
            input.ReadMessage(subBuilder);
            GetVirtualSelectedParentBlueScoreRequest = subBuilder;
            break;
          }
          case 8442: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetVirtualSelectedParentBlueScoreResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetVirtualSelectedParentBlueScoreResponse) {
              subBuilder.MergeFrom(GetVirtualSelectedParentBlueScoreResponse);
            }
            input.ReadMessage(subBuilder);
            GetVirtualSelectedParentBlueScoreResponse = subBuilder;
            break;
          }
          case 8450: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedRequest) {
              subBuilder.MergeFrom(NotifyVirtualSelectedParentBlueScoreChangedRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualSelectedParentBlueScoreChangedRequest = subBuilder;
            break;
          }
          case 8458: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualSelectedParentBlueScoreChangedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualSelectedParentBlueScoreChangedResponse) {
              subBuilder.MergeFrom(NotifyVirtualSelectedParentBlueScoreChangedResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualSelectedParentBlueScoreChangedResponse = subBuilder;
            break;
          }
          case 8466: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualSelectedParentBlueScoreChangedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.VirtualSelectedParentBlueScoreChangedNotification) {
              subBuilder.MergeFrom(VirtualSelectedParentBlueScoreChangedNotification);
            }
            input.ReadMessage(subBuilder);
            VirtualSelectedParentBlueScoreChangedNotification = subBuilder;
            break;
          }
          case 8474: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BanRequestMessage();
            if (payloadCase_ == PayloadOneofCase.BanRequest) {
              subBuilder.MergeFrom(BanRequest);
            }
            input.ReadMessage(subBuilder);
            BanRequest = subBuilder;
            break;
          }
          case 8482: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.BanResponseMessage();
            if (payloadCase_ == PayloadOneofCase.BanResponse) {
              subBuilder.MergeFrom(BanResponse);
            }
            input.ReadMessage(subBuilder);
            BanResponse = subBuilder;
            break;
          }
          case 8490: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanRequestMessage();
            if (payloadCase_ == PayloadOneofCase.UnbanRequest) {
              subBuilder.MergeFrom(UnbanRequest);
            }
            input.ReadMessage(subBuilder);
            UnbanRequest = subBuilder;
            break;
          }
          case 8498: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.UnbanResponseMessage();
            if (payloadCase_ == PayloadOneofCase.UnbanResponse) {
              subBuilder.MergeFrom(UnbanResponse);
            }
            input.ReadMessage(subBuilder);
            UnbanResponse = subBuilder;
            break;
          }
          case 8506: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetInfoRequest) {
              subBuilder.MergeFrom(GetInfoRequest);
            }
            input.ReadMessage(subBuilder);
            GetInfoRequest = subBuilder;
            break;
          }
          case 8514: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetInfoResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetInfoResponse) {
              subBuilder.MergeFrom(GetInfoResponse);
            }
            input.ReadMessage(subBuilder);
            GetInfoResponse = subBuilder;
            break;
          }
          case 8522: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedRequest) {
              subBuilder.MergeFrom(StopNotifyingUtxosChangedRequest);
            }
            input.ReadMessage(subBuilder);
            StopNotifyingUtxosChangedRequest = subBuilder;
            break;
          }
          case 8530: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingUtxosChangedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.StopNotifyingUtxosChangedResponse) {
              subBuilder.MergeFrom(StopNotifyingUtxosChangedResponse);
            }
            input.ReadMessage(subBuilder);
            StopNotifyingUtxosChangedResponse = subBuilder;
            break;
          }
          case 8538: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideRequest) {
              subBuilder.MergeFrom(NotifyPruningPointUTXOSetOverrideRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyPruningPointUTXOSetOverrideRequest = subBuilder;
            break;
          }
          case 8546: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyPruningPointUTXOSetOverrideResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyPruningPointUTXOSetOverrideResponse) {
              subBuilder.MergeFrom(NotifyPruningPointUTXOSetOverrideResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyPruningPointUTXOSetOverrideResponse = subBuilder;
            break;
          }
          case 8554: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.PruningPointUTXOSetOverrideNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.PruningPointUTXOSetOverrideNotification) {
              subBuilder.MergeFrom(PruningPointUTXOSetOverrideNotification);
            }
            input.ReadMessage(subBuilder);
            PruningPointUTXOSetOverrideNotification = subBuilder;
            break;
          }
          case 8562: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideRequestMessage();
            if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideRequest) {
              subBuilder.MergeFrom(StopNotifyingPruningPointUTXOSetOverrideRequest);
            }
            input.ReadMessage(subBuilder);
            StopNotifyingPruningPointUTXOSetOverrideRequest = subBuilder;
            break;
          }
          case 8570: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.StopNotifyingPruningPointUTXOSetOverrideResponseMessage();
            if (payloadCase_ == PayloadOneofCase.StopNotifyingPruningPointUTXOSetOverrideResponse) {
              subBuilder.MergeFrom(StopNotifyingPruningPointUTXOSetOverrideResponse);
            }
            input.ReadMessage(subBuilder);
            StopNotifyingPruningPointUTXOSetOverrideResponse = subBuilder;
            break;
          }
          case 8578: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondRequestMessage();
            if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondRequest) {
              subBuilder.MergeFrom(EstimateNetworkHashesPerSecondRequest);
            }
            input.ReadMessage(subBuilder);
            EstimateNetworkHashesPerSecondRequest = subBuilder;
            break;
          }
          case 8586: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.EstimateNetworkHashesPerSecondResponseMessage();
            if (payloadCase_ == PayloadOneofCase.EstimateNetworkHashesPerSecondResponse) {
              subBuilder.MergeFrom(EstimateNetworkHashesPerSecondResponse);
            }
            input.ReadMessage(subBuilder);
            EstimateNetworkHashesPerSecondResponse = subBuilder;
            break;
          }
          case 8594: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedRequest) {
              subBuilder.MergeFrom(NotifyVirtualDaaScoreChangedRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualDaaScoreChangedRequest = subBuilder;
            break;
          }
          case 8602: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyVirtualDaaScoreChangedResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyVirtualDaaScoreChangedResponse) {
              subBuilder.MergeFrom(NotifyVirtualDaaScoreChangedResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyVirtualDaaScoreChangedResponse = subBuilder;
            break;
          }
          case 8610: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.VirtualDaaScoreChangedNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.VirtualDaaScoreChangedNotification) {
              subBuilder.MergeFrom(VirtualDaaScoreChangedNotification);
            }
            input.ReadMessage(subBuilder);
            VirtualDaaScoreChangedNotification = subBuilder;
            break;
          }
          case 8618: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressRequest) {
              subBuilder.MergeFrom(GetBalanceByAddressRequest);
            }
            input.ReadMessage(subBuilder);
            GetBalanceByAddressRequest = subBuilder;
            break;
          }
          case 8626: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalanceByAddressResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBalanceByAddressResponse) {
              subBuilder.MergeFrom(GetBalanceByAddressResponse);
            }
            input.ReadMessage(subBuilder);
            GetBalanceByAddressResponse = subBuilder;
            break;
          }
          case 8634: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesRequest) {
              subBuilder.MergeFrom(GetBalancesByAddressesRequest);
            }
            input.ReadMessage(subBuilder);
            GetBalancesByAddressesRequest = subBuilder;
            break;
          }
          case 8642: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetBalancesByAddressesResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetBalancesByAddressesResponse) {
              subBuilder.MergeFrom(GetBalancesByAddressesResponse);
            }
            input.ReadMessage(subBuilder);
            GetBalancesByAddressesResponse = subBuilder;
            break;
          }
          case 8650: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateRequestMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateRequest) {
              subBuilder.MergeFrom(NotifyNewBlockTemplateRequest);
            }
            input.ReadMessage(subBuilder);
            NotifyNewBlockTemplateRequest = subBuilder;
            break;
          }
          case 8658: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NotifyNewBlockTemplateResponseMessage();
            if (payloadCase_ == PayloadOneofCase.NotifyNewBlockTemplateResponse) {
              subBuilder.MergeFrom(NotifyNewBlockTemplateResponse);
            }
            input.ReadMessage(subBuilder);
            NotifyNewBlockTemplateResponse = subBuilder;
            break;
          }
          case 8666: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.NewBlockTemplateNotificationMessage();
            if (payloadCase_ == PayloadOneofCase.NewBlockTemplateNotification) {
              subBuilder.MergeFrom(NewBlockTemplateNotification);
            }
            input.ReadMessage(subBuilder);
            NewBlockTemplateNotification = subBuilder;
            break;
          }
          case 8674: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesRequest) {
              subBuilder.MergeFrom(GetMempoolEntriesByAddressesRequest);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntriesByAddressesRequest = subBuilder;
            break;
          }
          case 8682: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetMempoolEntriesByAddressesResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetMempoolEntriesByAddressesResponse) {
              subBuilder.MergeFrom(GetMempoolEntriesByAddressesResponse);
            }
            input.ReadMessage(subBuilder);
            GetMempoolEntriesByAddressesResponse = subBuilder;
            break;
          }
          case 8690: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyRequestMessage();
            if (payloadCase_ == PayloadOneofCase.GetCoinSupplyRequest) {
              subBuilder.MergeFrom(GetCoinSupplyRequest);
            }
            input.ReadMessage(subBuilder);
            GetCoinSupplyRequest = subBuilder;
            break;
          }
          case 8698: {
            global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage subBuilder = new global::Miningcore.Blockchain.Kaspa.Kaspad.GetCoinSupplyResponseMessage();
            if (payloadCase_ == PayloadOneofCase.GetCoinSupplyResponse) {
              subBuilder.MergeFrom(GetCoinSupplyResponse);
            }
            input.ReadMessage(subBuilder);
            GetCoinSupplyResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
